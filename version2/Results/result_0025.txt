
analyse the exceptions in iter:1
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[123.46875, 145.25   , 155.75   , ...,  98.90625,  93.40625,
            78.5625 ],
          [127.75   , 148.4375 , 159.3125 , ...,  99.25   ,  91.84375,
            74.28125],
          [123.6875 , 144.125  , 155.96875, ..., 109.25   ,  95.53125,
            74.53125],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:2

analyse the exceptions in iter:3
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 28.,  37.,  38., ...,  76.,  81.,  85.],
          [ 33.,  34.,  32., ...,  95.,  96.,  85.],
          [ 39.,  40.,  57., ...,  93., 107.,  95.],
          ...,
          [ 83.,  87.,  84., ...,  99.,  90.,  81.],
          [ 88.,  90.,  93., ...,  80.,  76.,  82.],
          [ 97.,  94.,  93., ...,  54.,  63.,  72.]],

         [[ 25.,  34.,  35., ...,  67.,  72.,  76.],
          [ 28.,  30.,  27., ...,  82.,  82.,  72.],
          [ 32.,  33.,  50., ...,  76.,  89.,  77.],
          ...,
          [ 73.,  77.,  74., ...,  93.,  84.,  75.],
          [ 72.,  74.,  77., ...,  74.,  70.,  76.],
          [ 78.,  75.,  75., ...,  47.,  56.,  65.]],

         [[ 10.,  19.,  20., ...,  39.,  43.,  47.],
          [ 13.,  14.,  12., ...,  55.,  56.,  45.],
          [ 15.,  17.,  33., ...,  52.,  66.,  54.],
          ...,
          [ 52.,  56.,  52., ...,  70.,  61.,  52.],
          [ 51.,  52.,  56., ...,  53.,  49.,  55.],
          [ 56.,  53.,  53., ...,  28.,  37.,  46.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:4

analyse the exceptions in iter:4
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[170., 168., 177., ..., 162., 158., 157.],
          [168., 172., 171., ..., 159., 156., 154.],
          [154., 149., 129., ..., 161., 157., 154.],
          ...,
          [ 74.,  76.,  78., ...,  71.,  68.,  61.],
          [ 68.,  69.,  72., ...,  76.,  71.,  71.],
          [ 67.,  68.,  69., ...,  75.,  71.,  73.]],

         [[180., 178., 185., ..., 179., 178., 177.],
          [181., 185., 183., ..., 177., 176., 174.],
          [170., 165., 144., ..., 178., 177., 174.],
          ...,
          [ 84.,  85.,  85., ...,  75.,  72.,  65.],
          [ 76.,  77.,  79., ...,  80.,  75.,  75.],
          [ 75.,  76.,  75., ...,  79.,  75.,  77.]],

         [[198., 196., 203., ..., 215., 214., 212.],
          [198., 201., 200., ..., 212., 211., 209.],
          [186., 181., 162., ..., 214., 212., 209.],
          ...,
          [ 80.,  81.,  82., ...,  78.,  75.,  68.],
          [ 77.,  78.,  78., ...,  83.,  78.,  78.],
          [ 78.,  79.,  76., ...,  82.,  78.,  80.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:5

analyse the exceptions in iter:5
tensorflow exception:
{'id': 13, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 16, 32, 32), dtype=float32, numpy=
array([[[[[-0.3424948 , -0.8090099 , -0.5770022 , ...,  0.5025704 ,
            0.57697755,  0.57697755],
          [ 0.6992508 ,  0.08395943,  0.03982088, ...,  0.32578132,
           -0.45594227, -0.45594227],
          [-0.5913697 , -0.48716134, -0.24095906, ..., -0.61954427,
           -0.45594227,  0.5025704 ],
          ...,
          [-0.9943675 ,  0.23235911,  0.33416536, ...,  0.4716523 ,
            0.20648223, -0.87545943],
          [ 0.17171735, -0.86676705,  0.9349004 , ..., -0.99749607,
           -0.47943878, -0.97752696],
          [ 0.82433134, -0.38369843,  0.31742868, ...,  0.48718765,
           -0.9348897 ,  0.9775333 ]],

         [[ 0.10158571,  0.92175126, -0.5177698 , ..., -0.9811055 ,
            0.49487224,  0.7179642 ],
          [-0.9943675 , -0.9672506 ,  0.11918014, ..., -0.8879689 ,
           -0.69289577,  0.49487224],
          [ 0.7301736 ,  0.82433134, -0.7710802 , ..., -0.86676705,
            0.23235911,  0.99859005],
          ...,
          [-0.30902272, -0.24095906,  0.4559691 , ..., -0.3999853 ,
            0.9998433 , -0.9923355 ],
          [ 0.9858966 , -0.50254434,  0.99859005, ..., -0.7710802 ,
            0.8532201 ,  0.74215424],
          [ 0.11918014,  0.9933904 , -0.9672506 , ..., -0.7361927 ,
           -0.56245387,  0.8998668 ]],

         [[ 0.89200485,  0.44014302,  0.92175126, ...,  0.6333192 ,
            0.17171735,  0.9496777 ],
          [ 0.7301736 , -0.99964744, -0.95241296, ..., -0.56245387,
           -0.9672506 , -0.8578031 ],
          [-0.92514753, -0.56245387, -0.16299078, ..., -0.56245387,
            0.6333192 , -0.03097503],
          ...,
          [ 0.8532201 , -0.30902272, -0.11038724, ..., -0.7596879 ,
            0.13673723,  0.13673723],
          [ 0.02212675,  0.31742868, -0.24095906, ...,  0.64691937,
           -0.99996084, -0.27516335],
          [ 0.02212675, -0.25810164, -0.30902272, ..., -0.12796369,
           -0.29213881,  0.9887046 ]],

         ...,

         [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          ...,
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ]],

         [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          ...,
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ]],

         [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          ...,
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        , ...,  0.        ,
            0.        ,  0.        ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:6

analyse the exceptions in iter:6
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[164., 105., 118., ..., 109., 108.,  91.],
          [167., 116.,  72., ..., 105., 105.,  89.],
          [140., 142., 119., ..., 104.,  84.,  78.],
          ...,
          [139., 142., 135., ...,  89.,  97., 126.],
          [163., 153., 146., ...,  85.,  98., 127.],
          [183., 176., 154., ...,  94.,  91., 122.]],

         [[206., 140., 148., ..., 147., 147., 129.],
          [213., 160., 109., ..., 142., 142., 127.],
          [191., 193., 163., ..., 139., 120., 115.],
          ...,
          [148., 155., 156., ..., 134., 148., 176.],
          [157., 164., 164., ..., 130., 148., 178.],
          [153., 182., 154., ..., 134., 133., 170.]],

         [[ 84.,  61., 101., ...,  73.,  69.,  57.],
          [ 84.,  49.,  43., ...,  79.,  72.,  57.],
          [ 65.,  66.,  79., ...,  84.,  58.,  49.],
          ...,
          [ 81.,  74.,  72., ...,  28.,  24.,  49.],
          [ 85.,  82.,  90., ...,  19.,  27.,  48.],
          [102., 116., 100., ...,  29.,  26.,  44.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:7

analyse the exceptions in iter:7
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 28.,  30.,  33., ...,  43.,  52.,  46.],
          [ 27.,  27.,  21., ..., 112., 117., 115.],
          [ 34.,  33.,  24., ..., 175., 177., 176.],
          ...,
          [142., 142., 150., ..., 134., 128., 134.],
          [140., 145., 150., ..., 131., 130., 122.],
          [134., 136., 136., ..., 106., 104., 101.]],

         [[ 35.,  34.,  44., ...,  56.,  64.,  58.],
          [ 30.,  28.,  31., ..., 136., 140., 138.],
          [ 36.,  33.,  30., ..., 208., 209., 208.],
          ...,
          [176., 176., 184., ..., 175., 168., 175.],
          [176., 180., 186., ..., 170., 170., 162.],
          [171., 171., 171., ..., 144., 142., 140.]],

         [[ 39.,  44.,  47., ...,  45.,  53.,  47.],
          [ 38.,  41.,  39., ...,  97., 101., 100.],
          [ 42.,  43.,  40., ..., 143., 144., 143.],
          ...,
          [118., 118., 127., ..., 119., 112., 119.],
          [124., 129., 134., ..., 119., 119., 111.],
          [123., 124., 124., ..., 100.,  99.,  96.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:8

analyse the exceptions in iter:8
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[134., 131., 128., ..., 127., 127., 128.],
          [133., 129., 128., ..., 127., 127., 128.],
          [128., 127., 128., ..., 126., 126., 126.],
          ...,
          [174., 171., 155., ...,  27.,  29.,  28.],
          [194., 189., 159., ...,  30.,  30.,  30.],
          [193., 181., 168., ...,  31.,  32.,  32.]],

         [[186., 184., 182., ..., 181., 181., 182.],
          [189., 186., 186., ..., 183., 183., 184.],
          [185., 182., 182., ..., 181., 181., 180.],
          ...,
          [208., 206., 189., ...,  94.,  96.,  94.],
          [221., 215., 196., ...,  95.,  96.,  95.],
          [217., 208., 201., ...,  94.,  94.,  94.]],

         [[223., 220., 218., ..., 222., 222., 223.],
          [228., 224., 224., ..., 224., 224., 225.],
          [226., 223., 223., ..., 222., 222., 221.],
          ...,
          [235., 229., 216., ..., 136., 137., 136.],
          [244., 239., 225., ..., 138., 139., 140.],
          [237., 230., 227., ..., 136., 137., 138.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:9

analyse the exceptions in iter:9
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:10

final statics:
total operators:28
tensorflow --> nums:8,distinct_bugs:1
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:8
mindspore --> 
torch --> 

generate models:10

analyse the exceptions in iter:10
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[53., 54., 56., ..., 47., 41., 24.],
          [46., 53., 54., ..., 42., 39., 28.],
          [45., 50., 46., ..., 38., 36., 29.],
          ...,
          [71., 74., 80., ..., 51., 46., 49.],
          [75., 79., 81., ..., 61., 64., 48.],
          [85., 85., 86., ..., 61., 64., 49.]],

         [[65., 63., 60., ..., 51., 45., 28.],
          [59., 62., 59., ..., 46., 43., 32.],
          [59., 60., 52., ..., 42., 40., 33.],
          ...,
          [83., 83., 85., ..., 54., 49., 50.],
          [82., 85., 85., ..., 65., 67., 50.],
          [83., 84., 86., ..., 65., 67., 50.]],

         [[53., 52., 50., ..., 50., 44., 27.],
          [41., 45., 44., ..., 45., 42., 31.],
          [38., 41., 34., ..., 41., 39., 32.],
          ...,
          [66., 66., 67., ..., 33., 34., 41.],
          [67., 69., 67., ..., 41., 48., 41.],
          [71., 71., 70., ..., 39., 46., 41.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:11

analyse the exceptions in iter:11
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[142., 172., 176., ..., 216., 198., 205.],
          [191., 196., 174., ..., 229., 222., 217.],
          [220., 217., 192., ..., 224., 225., 218.],
          ...,
          [197., 196., 201., ..., 200., 199., 205.],
          [196., 191., 193., ..., 198., 199., 201.],
          [186., 182., 174., ..., 158., 158., 163.]],

         [[149., 172., 168., ..., 212., 194., 202.],
          [190., 192., 166., ..., 222., 215., 210.],
          [212., 209., 183., ..., 214., 214., 208.],
          ...,
          [152., 152., 156., ..., 165., 165., 164.],
          [157., 152., 154., ..., 164., 165., 161.],
          [150., 147., 139., ..., 124., 125., 125.]],

         [[152., 167., 154., ..., 211., 193., 200.],
          [192., 190., 159., ..., 220., 213., 207.],
          [212., 208., 182., ..., 209., 210., 203.],
          ...,
          [136., 135., 140., ..., 146., 146., 150.],
          [139., 135., 136., ..., 144., 145., 146.],
          [133., 130., 121., ..., 105., 106., 111.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:12

analyse the exceptions in iter:12
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[164., 162., 162., ..., 157., 153., 153.],
          [168., 166., 166., ..., 164., 160., 158.],
          [172., 170., 171., ..., 168., 165., 163.],
          ...,
          [123., 117., 112., ..., 117.,  95., 120.],
          [120., 116., 112., ..., 126., 120., 120.],
          [121., 120., 116., ..., 124., 124., 120.]],

         [[215., 212., 212., ..., 210., 208., 203.],
          [218., 215., 215., ..., 212., 209., 205.],
          [220., 217., 218., ..., 212., 208., 207.],
          ...,
          [160., 154., 149., ..., 136., 115., 149.],
          [156., 151., 147., ..., 149., 144., 152.],
          [154., 152., 148., ..., 152., 154., 154.]],

         [[244., 240., 240., ..., 237., 235., 234.],
          [245., 242., 242., ..., 238., 236., 235.],
          [246., 243., 244., ..., 238., 235., 236.],
          ...,
          [105., 102.,  99., ..., 100.,  79., 100.],
          [100.,  99.,  96., ..., 110., 103., 101.],
          [ 96.,  99.,  97., ..., 108., 107., 100.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:13

analyse the exceptions in iter:13
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          ...,
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ]],

         [[0.9950547 , 0.9950547 , 0.9640276 , ..., 1.        ,
           1.        , 1.        ],
          [0.9993292 , 0.9993292 , 0.9993292 , ..., 1.        ,
           1.        , 1.        ],
          [0.9993292 , 0.9993292 , 0.99990916, ..., 1.        ,
           1.        , 1.        ],
          ...,
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ]],

         [[0.9640276 , 0.9640276 , 0.7615942 , ..., 1.        ,
           1.        , 0.99999833],
          [0.9950547 , 0.9950547 , 0.9950547 , ..., 1.        ,
           1.        , 1.        ],
          [0.9950547 , 0.9950547 , 0.9993292 , ..., 1.        ,
           1.        , 1.        ],
          ...,
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ],
          [1.        , 1.        , 1.        , ..., 1.        ,
           1.        , 1.        ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:14

analyse the exceptions in iter:14
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[100.,  98.,  99., ..., 165., 163., 165.],
          [101., 100., 100., ..., 164., 163., 159.],
          [105., 104., 104., ..., 156., 136., 114.],
          ...,
          [166., 166., 168., ..., 137., 137., 147.],
          [161., 162., 167., ..., 131., 138., 137.],
          [164., 162., 164., ..., 153., 157., 156.]],

         [[146., 144., 144., ..., 165., 163., 165.],
          [145., 143., 143., ..., 161., 162., 161.],
          [147., 145., 145., ..., 150., 133., 117.],
          ...,
          [156., 156., 157., ..., 127., 126., 136.],
          [152., 153., 158., ..., 125., 133., 132.],
          [158., 156., 158., ..., 146., 151., 150.]],

         [[192., 189., 189., ..., 165., 163., 165.],
          [188., 186., 186., ..., 159., 159., 157.],
          [189., 186., 187., ..., 147., 129., 111.],
          ...,
          [150., 151., 152., ..., 112., 114., 127.],
          [149., 150., 155., ..., 117., 124., 120.],
          [155., 153., 155., ..., 139., 141., 137.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:15

analyse the exceptions in iter:15
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[10100., 10100., 10302., ...,  9120.,  8930.,  9120.],
          [10712., 10712., 10920., ...,  9506.,  9506.,  9506.],
          [11556., 11342., 11342., ..., 10100., 10100., 10302.],
          ...,
          [27390., 25440., 28056., ...,  5700.,  5700.,  5256.],
          [25122., 30102., 33306., ...,  5852.,  5700.,  6006.],
          [26082., 26406., 25760., ...,  9702., 16770., 26406.]],

         [[28392., 28392., 28056., ..., 27390., 27390., 28056.],
          [29070., 28392., 28392., ..., 28056., 27722., 28392.],
          [30450., 29756., 30102., ..., 29070., 29070., 29756.],
          ...,
          [31862., 29070., 31506., ..., 13806., 14520., 14520.],
          [30450., 34782., 37442., ..., 14280., 14280., 14762.],
          [31152., 31152., 29412., ..., 18906., 25760., 34410.]],

         [[53592., 52670., 53130., ..., 53592., 52212., 52670.],
          [53130., 52212., 51302., ..., 52670., 51756., 52670.],
          [54522., 53130., 52670., ..., 53130., 53130., 54056.],
          ...,
          [31506., 28056., 29070., ..., 23870., 24806., 25122.],
          [29756., 33306., 35532., ..., 23870., 23562., 23870.],
          [30450., 29756., 28730., ..., 28056., 33672., 41006.]]]]],
      dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:16

analyse the exceptions in iter:16
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[235., 235., 237., ..., 233., 227., 223.],
          [231., 232., 234., ..., 231., 225., 221.],
          [231., 233., 237., ..., 232., 225., 221.],
          ...,
          [125., 126., 143., ...,  66.,  65.,  68.],
          [127., 141., 149., ...,  63.,  67.,  62.],
          [137., 142., 149., ...,  62.,  61.,  51.]],

         [[236., 236., 238., ..., 234., 230., 228.],
          [232., 233., 235., ..., 232., 228., 225.],
          [232., 234., 238., ..., 233., 228., 226.],
          ...,
          [124., 125., 142., ...,  89.,  86.,  83.],
          [125., 140., 148., ...,  89.,  88.,  79.],
          [135., 140., 147., ...,  90.,  84.,  68.]],

         [[238., 238., 240., ..., 236., 233., 232.],
          [234., 235., 237., ..., 234., 232., 233.],
          [234., 236., 240., ..., 235., 232., 233.],
          ...,
          [122., 123., 140., ...,  23.,  23.,  37.],
          [125., 139., 148., ...,  24.,  26.,  29.],
          [136., 141., 148., ...,  27.,  23.,  14.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:17

analyse the exceptions in iter:18
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[197., 198., 201., ..., 217., 217., 217.],
          [193., 195., 198., ..., 216., 215., 214.],
          [192., 194., 197., ..., 217., 216., 215.],
          ...,
          [156., 156., 156., ...,  98., 117., 128.],
          [158., 159., 154., ..., 131., 117.,  91.],
          [152., 151., 145., ...,  91.,  90.,  79.]],

         [[187., 188., 191., ..., 201., 201., 201.],
          [183., 185., 188., ..., 200., 200., 198.],
          [182., 184., 187., ..., 201., 200., 199.],
          ...,
          [146., 146., 146., ...,  79.,  96., 105.],
          [148., 149., 144., ..., 110.,  99.,  75.],
          [142., 141., 135., ...,  72.,  73.,  65.]],

         [[188., 189., 192., ..., 204., 204., 204.],
          [184., 186., 189., ..., 203., 202., 201.],
          [183., 185., 188., ..., 204., 203., 202.],
          ...,
          [147., 147., 147., ...,  65.,  82.,  89.],
          [149., 150., 145., ...,  96.,  86.,  64.],
          [143., 142., 136., ...,  61.,  63.,  57.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:18

analyse the exceptions in iter:19
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 23.,  47.,  52., ..., 131., 182., 215.],
          [ 32.,  51.,  56., ..., 149., 204., 209.],
          [ 41.,  59.,  60., ..., 138., 196., 203.],
          ...,
          [167., 177., 182., ..., 199., 176., 145.],
          [166., 165., 165., ..., 183., 183., 189.],
          [175., 173., 173., ..., 190., 188., 192.]],

         [[ 27.,  49.,  46., ..., 130., 180., 212.],
          [ 31.,  49.,  49., ..., 148., 206., 217.],
          [ 37.,  57.,  59., ..., 138., 200., 217.],
          ...,
          [167., 177., 182., ..., 192., 171., 140.],
          [166., 165., 165., ..., 181., 182., 187.],
          [175., 173., 173., ..., 187., 186., 189.]],

         [[ 22.,  41.,  30., ..., 117., 174., 230.],
          [ 24.,  38.,  34., ..., 133., 197., 232.],
          [ 25.,  47.,  51., ..., 125., 194., 233.],
          ...,
          [168., 177., 182., ..., 192., 171., 140.],
          [166., 165., 165., ..., 181., 182., 188.],
          [175., 173., 173., ..., 184., 183., 186.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:19

analyse the exceptions in iter:20
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[153., 174., 155., ..., 122., 138.,  97.],
          [160., 164., 150., ..., 137., 160., 103.],
          [140., 147., 136., ..., 104., 125.,  93.],
          ...,
          [175., 170., 170., ..., 193., 197., 199.],
          [174., 173., 171., ..., 200., 202., 208.],
          [168., 164., 166., ..., 204., 204., 206.]],

         [[157., 180., 165., ..., 125., 143., 101.],
          [163., 170., 159., ..., 135., 161., 109.],
          [143., 152., 145., ..., 103., 128., 102.],
          ...,
          [177., 172., 172., ..., 203., 206., 204.],
          [177., 176., 174., ..., 208., 209., 212.],
          [173., 169., 171., ..., 209., 208., 210.]],

         [[155., 188., 172., ..., 123., 141.,  97.],
          [165., 180., 169., ..., 129., 157., 107.],
          [147., 166., 158., ...,  99., 125., 101.],
          ...,
          [179., 174., 174., ..., 212., 214., 213.],
          [181., 180., 178., ..., 216., 218., 221.],
          [180., 175., 177., ..., 217., 217., 219.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:20

analyse the exceptions in iter:21
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[252., 249., 250., ..., 251., 251., 251.],
          [255., 252., 253., ..., 255., 255., 254.],
          [253., 250., 250., ..., 254., 254., 252.],
          ...,
          [254., 252., 253., ..., 252., 253., 252.],
          [250., 252., 255., ..., 254., 255., 254.],
          [236., 249., 250., ..., 250., 250., 251.]],

         [[  8.,  15.,   8., ...,   1.,   0.,   1.],
          [  7.,  15.,  13., ...,   1.,   0.,   4.],
          [  6.,  16.,  24., ...,   1.,   0.,   9.],
          ...,
          [ 66.,  62.,  64., ...,  70.,  69.,  70.],
          [ 49.,  53.,  59., ...,  70.,  68.,  59.],
          [ 37.,  48.,  42., ...,  78.,  74.,  58.]],

         [[ 42.,  42.,  39., ...,  11.,  15.,  30.],
          [ 43.,  44.,  42., ...,  11.,  18.,  33.],
          [ 42.,  42.,  43., ...,  10.,  20.,  37.],
          ...,
          [ 94.,  92.,  93., ..., 101., 103., 104.],
          [ 81.,  82.,  86., ..., 103., 100.,  89.],
          [ 68.,  76.,  73., ..., 113., 109.,  88.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:21

analyse the exceptions in iter:22
tensorflow exception:
{'id': 12, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 16, 112, 112), dtype=float32, numpy=
array([[[[[ 86.,  96., 115., ...,  72.,  78.,  81.],
          [112.,  89.,  60., ...,  76.,  67.,  78.],
          [104.,  78.,  82., ..., 102.,  64.,  83.],
          ...,
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.]],

         [[  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          ...,
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.]],

         [[  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          ...,
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.]],

         ...,

         [[  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          ...,
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.]],

         [[  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          ...,
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.]],

         [[  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          ...,
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.],
          [  0.,   0.,   0., ...,   0.,   0.,   0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:22

analyse the exceptions in iter:23
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[126., 102., 117., ...,  96., 113., 107.],
          [135., 113., 121., ..., 115., 114., 115.],
          [126., 124., 128., ..., 134., 115., 114.],
          ...,
          [141., 155., 134., ..., 149., 147., 122.],
          [153., 164., 146., ..., 163., 189., 184.],
          [125., 129., 124., ..., 133., 180., 168.]],

         [[100.,  76.,  93., ...,  74.,  90.,  84.],
          [109.,  86.,  94., ...,  89.,  89.,  90.],
          [102.,  97., 101., ..., 109.,  90.,  90.],
          ...,
          [111., 123., 102., ..., 140., 133., 106.],
          [122., 132., 119., ..., 156., 178., 174.],
          [100., 106., 102., ..., 127., 173., 162.]],

         [[ 71.,  49.,  60., ...,  42.,  58.,  52.],
          [ 73.,  52.,  56., ...,  58.,  55.,  53.],
          [ 61.,  59.,  60., ...,  77.,  55.,  50.],
          ...,
          [ 85.,  87.,  65., ..., 118., 116.,  94.],
          [ 83.,  89.,  81., ..., 147., 174., 173.],
          [ 56.,  64.,  68., ..., 124., 174., 164.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:23

analyse the exceptions in iter:24
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[-0.7361927 , -0.30902272, -0.03097503, ...,  0.70552963,
           -0.5984601 , -0.9380052 ],
          [-0.7361927 ,  0.92175126, -0.8578031 , ...,  0.35079733,
           -0.70555097, -0.3507691 ],
          [-0.03097503,  0.96945935,  0.03982088, ...,  0.5984842 ,
           -0.8037934 , -0.9380052 ],
          ...,
          [-0.6800235 , -0.38369843,  0.18912943, ..., -0.89597094,
           -0.3424948 , -0.7240972 ],
          [ 0.82433134,  0.77668595, -0.78223085, ...,  0.8532201 ,
            0.9933904 , -0.946868  ],
          [ 0.10158571, -0.9943675 ,  0.7301736 , ...,  0.8623189 ,
           -0.9672506 , -0.64014435]],

         [[-0.03097503,  0.44014302,  0.9933904 , ..., -0.88387746,
            0.93171144,  0.36731935],
          [ 0.17171735,  0.44014302,  0.39185724, ..., -0.9439941 ,
            0.99608517, -0.33413696],
          [-0.9672506 ,  0.9496777 ,  0.77668595, ...,  0.8090276 ,
           -0.78769594,  0.98111135],
          ...,
          [ 0.68648654, -0.24095906,  0.49487224, ...,  0.7301736 ,
            0.47941232,  0.49487224],
          [-0.18043046, -0.81928825, -0.9715922 , ..., -0.11038724,
           -0.4480736 ,  0.81418097],
          [ 0.81418097, -0.5770022 , -0.9990208 , ..., -0.46382886,
           -0.92514753, -0.7710802 ]],

         [[ 0.11918014,  0.96496606,  0.9998433 , ..., -0.22374097,
            0.05750252,  0.8711474 ],
          [-0.16299078,  0.02212675,  0.96496606, ...,  0.7179642 ,
           -0.9811055 ,  0.23235911],
          [ 0.39185724, -0.89597094, -0.7361927 , ...,  0.7179642 ,
            0.35904428, -0.8090099 ],
          ...,
          [ 0.8532201 ,  0.11918014, -0.6800235 , ..., -0.8578031 ,
            0.33416536,  0.96945935],
          [-0.95241296,  0.8532201 , -0.7361927 , ..., -0.12796369,
           -0.66693807,  0.9933904 ],
          [-0.62644446,  0.67350715,  0.67350715, ...,  0.02212675,
            0.95507365, -0.74805754]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:24

analyse the exceptions in iter:25
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[162., 164., 169., ..., 184., 190., 202.],
          [153., 158., 164., ..., 178., 189., 201.],
          [157., 161., 164., ..., 178., 190., 202.],
          ...,
          [214., 213., 213., ..., 240., 241., 242.],
          [218., 209., 208., ..., 232., 236., 239.],
          [216., 207., 201., ..., 231., 233., 235.]],

         [[164., 167., 171., ..., 176., 186., 198.],
          [151., 156., 163., ..., 171., 184., 198.],
          [151., 156., 160., ..., 170., 186., 199.],
          ...,
          [205., 193., 185., ..., 207., 206., 209.],
          [209., 188., 180., ..., 195., 196., 200.],
          [204., 189., 174., ..., 192., 194., 198.]],

         [[130., 128., 131., ..., 137., 146., 161.],
          [119., 120., 124., ..., 131., 143., 158.],
          [120., 121., 122., ..., 131., 142., 156.],
          ...,
          [193., 181., 174., ..., 193., 194., 196.],
          [198., 176., 169., ..., 182., 185., 187.],
          [197., 178., 156., ..., 178., 181., 183.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:25

analyse the exceptions in iter:26
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[130.1884   , 123.00431  , 116.236664 , ..., 184.97658  ,
           185.34662  , 184.97658  ],
          [127.97263  , 123.00431  , 116.236664 , ..., 177.8776   ,
           179.19885  , 185.39798  ],
          [122.5401   , 121.99882  , 112.90282  , ..., 179.07072  ,
           186.00282  , 193.2976   ],
          ...,
          [ 98.00079  ,  83.96836  ,  53.44121  , ..., 137.77194  ,
           154.1267   , 165.9978   ],
          [ 97.37961  ,  77.99952  ,  42.168224 , ..., 140.98024  ,
           153.93808  , 162.6451   ],
          [ 96.98359  ,  71.95106  ,  34.571815 , ..., 140.98024  ,
           155.11821  , 164.59494  ]],

         [[ 80.37011  ,  76.56611  ,  70.77389  , ..., 152.93332  ,
           153.8064   , 152.93332  ],
          [ 76.56611  ,  74.61222  ,  68.885216 , ..., 141.4122   ,
           146.99648  , 152.93332  ],
          [ 72.32323  ,  72.32323  ,  66.14448  , ..., 141.4122   ,
           149.28513  , 158.79582  ],
          ...,
          [ 49.737625 ,  41.083477 ,  27.956375 , ..., 103.622986 ,
           112.90282  , 117.01805  ],
          [ 49.737625 ,  39.963795 ,  21.836655 , ..., 104.029465 ,
           111.11     , 116.236664 ],
          [ 48.046246 ,  35.00822  ,  15.712096 , ..., 103.678375 ,
           114.78498  , 117.01805  ]],

         [[ 32.551426 ,  27.956375 ,  20.912945 , ..., 114.78498  ,
           116.3103   , 120.58061  ],
          [ 27.956375 ,  26.762558 ,  19.149878 , ..., 105.27286  ,
           109.95576  , 116.236664 ],
          [ 22.15378  ,  23.094421 ,  16.038603 , ..., 105.27286  ,
           114.78498  , 117.01805  ],
          ...,
          [  9.455979 ,   4.0410757,   4.0410757, ...,  67.10207  ,
            72.25382  ,  73.014854 ],
          [  9.455979 ,   4.0410757,   3.2431974, ...,  68.885216 ,
            71.95106  ,  71.95106  ],
          [  9.455979 ,   3.2431974,   3.14112  , ...,  68.885216 ,
            72.32323  ,  72.32323  ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:26

analyse the exceptions in iter:27
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 45.,  42.,  35., ...,  93.,  51.,  39.],
          [ 46.,  42.,  40., ..., 105.,  66.,  48.],
          [ 43.,  40.,  48., ...,  88.,  77.,  58.],
          ...,
          [ 55.,  67.,  73., ...,  93., 101., 103.],
          [ 55.,  62.,  68., ...,  69.,  81.,  99.],
          [ 58.,  59.,  58., ...,  77.,  66.,  83.]],

         [[ 20.,  21.,  17., ...,  86.,  47.,  36.],
          [ 22.,  22.,  22., ...,  93.,  53.,  39.],
          [ 22.,  21.,  32., ...,  74.,  59.,  44.],
          ...,
          [ 54.,  57.,  64., ...,  87., 116., 123.],
          [ 54.,  53.,  59., ...,  62.,  93., 117.],
          [ 53.,  46.,  45., ...,  68.,  75.,  99.]],

         [[ 19.,  18.,  13., ...,  81.,  42.,  32.],
          [ 20.,  18.,  18., ...,  92.,  52.,  36.],
          [ 19.,  17.,  27., ...,  77.,  60.,  43.],
          ...,
          [ 51.,  54.,  57., ...,  49.,  34.,  30.],
          [ 51.,  50.,  52., ...,  38.,  29.,  35.],
          [ 51.,  44.,  40., ...,  53.,  29.,  31.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:27

analyse the exceptions in iter:28
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[-0.69289577, -0.04866361,  0.9736489 , ..., -0.36729133,
            0.89200485, -0.86676705],
          [ 0.49487224,  0.7877145 , -0.61254823, ...,  0.58420885,
            0.68648654,  0.23235911],
          [-0.93172234,  0.94398415, -0.93172234, ...,  0.99859005,
            0.61952066,  0.94398415],
          ...,
          [-0.8037934 , -0.79847807,  0.5984842 , ...,  0.06630686,
            0.9775333 ,  0.9756227 ],
          [-0.88387746,  0.9410365 , -0.9968286 , ...,  0.7117959 ,
           -0.21513471, -0.9348897 ],
          [-0.08398947,  0.22377032,  0.9410365 , ...,  0.99808294,
           -0.20645274,  0.34246647]],

         [[-0.93172234, -0.46382886,  0.9793546 , ...,  0.6992508 ,
           -0.04866361, -0.93172234],
          [ 0.08395943,  0.9736489 , -0.22374097, ...,  0.9793546 ,
            0.94398415, -0.7931364 ],
          [-0.48716134,  0.7179642 , -0.9980811 , ...,  0.35904428,
           -0.46382886,  0.08395943],
          ...,
          [-0.47943878, -0.3507691 , -0.9756293 , ..., -0.99749607,
            0.5984842 ,  0.8797029 ],
          [ 0.9756227 , -0.6055519 , -0.99749607, ..., -0.99749607,
           -0.47943878, -0.79847807],
          [ 0.7117959 ,  0.9756227 ,  0.8754449 , ...,  0.07516615,
            0.07516615,  0.06630686]],

         [[-0.8879689 , -0.9715922 ,  0.49487224, ...,  0.9736489 ,
           -0.5770022 , -0.9811055 ],
          [-0.69289577,  0.81418097,  0.58420885, ...,  0.7179642 ,
            0.61952066, -0.99608785],
          [-0.61254823, -0.04866361, -0.61254823, ..., -0.19781357,
           -0.86676705, -0.46382886],
          ...,
          [ 0.94398415, -0.0927762 ,  0.4559691 , ...,  0.9736489 ,
            0.33416536,  0.8838634 ],
          [ 0.05750252,  0.8711474 , -0.9811055 , ...,  0.9736489 ,
            0.49487224, -0.8090099 ],
          [-0.8090099 ,  0.05750252,  0.9736489 , ...,  0.8838634 ,
           -0.8090099 ,  0.08395943]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:28

analyse the exceptions in iter:29
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[202., 202., 204., ..., 207., 205., 203.],
          [206., 206., 207., ..., 210., 208., 206.],
          [210., 211., 212., ..., 214., 212., 210.],
          ...,
          [218., 210., 194., ..., 243., 244., 243.],
          [219., 217., 216., ..., 241., 241., 241.],
          [217., 216., 217., ..., 239., 239., 240.]],

         [[204., 204., 206., ..., 208., 206., 204.],
          [208., 208., 209., ..., 211., 209., 207.],
          [212., 213., 214., ..., 214., 213., 211.],
          ...,
          [217., 209., 194., ..., 242., 242., 243.],
          [218., 216., 216., ..., 240., 240., 240.],
          [216., 215., 216., ..., 238., 238., 238.]],

         [[199., 199., 201., ..., 200., 199., 198.],
          [203., 203., 204., ..., 205., 203., 201.],
          [207., 208., 210., ..., 210., 208., 206.],
          ...,
          [222., 214., 198., ..., 247., 247., 247.],
          [223., 221., 220., ..., 245., 245., 245.],
          [221., 220., 221., ..., 243., 243., 243.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:29

analyse the exceptions in iter:30
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[126., 122., 126., ..., 124., 120., 117.],
          [122., 119., 121., ..., 124., 122., 117.],
          [122., 121., 121., ..., 126., 123., 121.],
          ...,
          [126., 126., 128., ..., 133., 122., 114.],
          [125., 126., 127., ..., 128., 121., 114.],
          [123., 123., 126., ..., 128., 126., 121.]],

         [[118., 115., 119., ..., 118., 114., 111.],
          [115., 112., 114., ..., 118., 116., 111.],
          [115., 114., 114., ..., 120., 117., 115.],
          ...,
          [118., 118., 120., ..., 125., 114., 106.],
          [117., 118., 119., ..., 120., 113., 106.],
          [115., 115., 118., ..., 119., 118., 113.]],

         [[110., 108., 111., ..., 106., 102.,  99.],
          [107., 104., 106., ..., 106., 104.,  99.],
          [107., 106., 106., ..., 108., 105., 103.],
          ...,
          [107., 107., 109., ..., 114., 103.,  95.],
          [106., 107., 108., ..., 109., 102.,  95.],
          [104., 104., 107., ..., 109., 107., 102.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:30

analyse the exceptions in iter:31
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:31

analyse the exceptions in iter:32
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 50.,  51.,  42., ...,  48.,  18.,  14.],
          [ 86.,  92.,  82., ...,  46.,  17.,  11.],
          [ 43.,  43.,  51., ...,  42.,  10.,   6.],
          ...,
          [220., 209., 199., ..., 177., 176., 175.],
          [188., 182., 182., ..., 176., 175., 174.],
          [188., 184., 186., ..., 176., 176., 173.]],

         [[ 64.,  63.,  55., ...,  45.,  18.,  15.],
          [107., 110.,  99., ...,  43.,  17.,  12.],
          [ 60.,  56.,  65., ...,  39.,  10.,   6.],
          ...,
          [165., 174., 172., ..., 171., 170., 168.],
          [178., 170., 161., ..., 168., 167., 166.],
          [167., 163., 167., ..., 169., 168., 165.]],

         [[ 37.,  41.,  41., ...,  42.,  14.,  12.],
          [ 67.,  76.,  67., ...,  41.,  14.,  10.],
          [ 42.,  41.,  46., ...,  37.,   9.,   5.],
          ...,
          [151., 165., 164., ..., 168., 167., 166.],
          [162., 162., 157., ..., 166., 165., 164.],
          [162., 157., 160., ..., 166., 166., 162.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:32

analyse the exceptions in iter:33
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[  7.,   7.,   5., ...,  82.,  80.,  69.],
          [  6.,   6.,   5., ...,  85.,  86.,  81.],
          [  1.,   7.,   8., ...,  98.,  96.,  86.],
          ...,
          [150., 135., 129., ...,  72.,  45.,  26.],
          [156., 153., 138., ...,  57.,  23.,  38.],
          [183., 191., 182., ...,  83.,  67., 114.]],

         [[  5.,   5.,   4., ...,  84.,  85.,  73.],
          [  4.,   4.,   3., ...,  86.,  88.,  80.],
          [  1.,   7.,   8., ...,  96.,  96.,  84.],
          ...,
          [153., 136., 129., ...,  72.,  51.,  32.],
          [156., 151., 136., ...,  58.,  32.,  45.],
          [193., 199., 189., ...,  83.,  74., 120.]],

         [[  8.,   8.,   6., ...,  78.,  81.,  68.],
          [  8.,   9.,   8., ...,  77.,  81.,  72.],
          [  6.,  12.,  13., ...,  83.,  85.,  73.],
          ...,
          [139., 121., 113., ...,  69.,  63.,  51.],
          [139., 130., 110., ...,  56.,  48.,  64.],
          [183., 185., 171., ...,  76.,  81., 119.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:33

analyse the exceptions in iter:34
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[172., 171., 168., ..., 158., 156., 147.],
          [169., 168., 168., ..., 158., 152., 145.],
          [174., 169., 170., ..., 157., 149., 146.],
          ...,
          [150., 157., 162., ..., 158., 147., 139.],
          [143., 149., 155., ..., 148., 143., 140.],
          [148., 146., 149., ..., 137., 134., 136.]],

         [[187., 186., 182., ..., 170., 169., 163.],
          [185., 183., 184., ..., 175., 170., 165.],
          [190., 185., 186., ..., 177., 170., 168.],
          ...,
          [163., 168., 170., ..., 168., 160., 154.],
          [154., 158., 161., ..., 157., 153., 153.],
          [158., 155., 157., ..., 143., 139., 143.]],

         [[130., 130., 126., ..., 113., 113., 107.],
          [123., 122., 123., ..., 114., 110., 107.],
          [126., 122., 123., ..., 115., 108., 109.],
          ...,
          [100., 103., 104., ..., 108.,  99.,  90.],
          [ 89.,  90.,  96., ...,  99.,  92.,  88.],
          [ 93.,  89.,  92., ...,  86.,  80.,  82.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:34

analyse the exceptions in iter:35
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[251., 247., 247., ..., 229., 244., 251.],
          [249., 246., 246., ..., 233., 249., 252.],
          [167., 167., 167., ..., 217., 217., 220.],
          ...,
          [133., 123., 124., ..., 118., 114., 115.],
          [123., 124., 126., ..., 112., 108., 104.],
          [125., 129., 126., ..., 118., 112., 105.]],

         [[249., 245., 245., ..., 190., 231., 241.],
          [248., 244., 245., ..., 188., 237., 242.],
          [165., 164., 164., ..., 182., 211., 213.],
          ...,
          [130., 127., 130., ..., 125., 122., 125.],
          [125., 127., 129., ..., 122., 119., 119.],
          [128., 132., 130., ..., 128., 122., 121.]],

         [[250., 247., 247., ..., 146., 224., 241.],
          [248., 244., 244., ..., 141., 233., 241.],
          [148., 148., 149., ..., 139., 203., 208.],
          ...,
          [ 39.,  36.,  35., ...,  30.,  26.,  27.],
          [ 36.,  36.,  32., ...,  26.,  27.,  22.],
          [ 42.,  43.,  36., ...,  35.,  33.,  26.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:35

analyse the exceptions in iter:36
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          ...,
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf]],

         [[          inf,           inf,           inf, ...,
                     inf, 6.0760303e+37, 6.0760303e+37],
          [          inf,           inf,           inf, ...,
           8.2230130e+36, 1.1128638e+36, 4.0939969e+35],
          [          inf,           inf,           inf, ...,
                     inf,           inf, 8.2230130e+36],
          ...,
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf]],

         [[1.6948892e+28, 8.4383568e+26, 1.1420074e+26, ...,
           1.5860134e+15, 2.9048850e+13, 1.4462571e+12],
          [3.7332422e+32, 1.8586717e+31, 6.8376711e+30, ...,
           8.6593404e+16, 8.6593404e+16, 2.9048850e+13],
          [          inf,           inf,           inf, ...,
           1.7392750e+18, 4.7278395e+18, 1.0686475e+13],
          ...,
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:36

analyse the exceptions in iter:37
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]],

         [[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]],

         [[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:37

analyse the exceptions in iter:38
tensorflow exception:
{'id': 4, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 32, 32, 32), dtype=float32, numpy=
array([[[[[1.5617057, 1.5663121, 1.5666811, ..., 1.4288993, 0.       ,
           0.       ],
          [1.5609927, 1.5661016, 1.566698 , ..., 1.5605927, 1.5582969,
           1.5385494],
          [1.5606956, 1.5658944, 1.5667641, ..., 1.5662714, 1.5657458,
           1.5595609],
          ...,
          [1.5535567, 1.5535567, 1.551191 , ..., 1.4464413, 1.4601392,
           1.4056476],
          [1.5563046, 1.55228  , 1.550391 , ..., 1.549966 , 1.5515679,
           1.5422326],
          [1.5584513, 1.5515679, 1.550799 , ..., 1.5042281, 1.5083776,
           1.4940244]],

         [[1.5596857, 1.5657202, 1.5661452, ..., 1.1071488, 0.       ,
           0.       ],
          [1.5587487, 1.5654488, 1.5661881, ..., 1.5596857, 1.5572836,
           1.5337762],
          [1.5579765, 1.5652097, 1.5662714, ..., 1.5660117, 1.5654773,
           1.5584513],
          ...,
          [1.5549246, 1.5565116, 1.5563046, ..., 1.4464413, 1.4711276,
           1.4464413],
          [1.5569084, 1.5551726, 1.5554129, ..., 1.5480729, 1.549523 ,
           1.5395565],
          [1.5582969, 1.5535567, 1.5549246, ..., 1.3734008, 1.3734008,
           1.2490457]],

         [[1.5588921, 1.565391 , 1.5658213, ..., 1.2490457, 0.       ,
           0.       ],
          [1.5578101, 1.5651146, 1.5658703, ..., 1.5599272, 1.5574638,
           1.5350972],
          [1.5569084, 1.5648084, 1.5659654, ..., 1.5661016, 1.5655608,
           1.5587487],
          ...,
          [1.5593026, 1.5607966, 1.5610878, ..., 1.4711276, 1.4288993,
           1.3734008],
          [1.5601584, 1.5599272, 1.5605927, ..., 1.5475447, 1.5480729,
           1.5374753],
          [1.5607966, 1.5588921, 1.560044 , ..., 1.3734008, 1.3734008,
           1.3258177]],

         ...,

         [[0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          ...,
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ]],

         [[0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          ...,
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ]],

         [[0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          ...,
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:38

analyse the exceptions in iter:39
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 98., 119., 109., ...,  75.,  60.,  61.],
          [ 44.,  75.,  69., ...,  81.,  55.,  65.],
          [ 73.,  94., 111., ...,  77.,  60.,  58.],
          ...,
          [ 96., 100., 129., ...,  72.,  68.,  85.],
          [124., 114., 110., ...,  84.,  81.,  73.],
          [ 93.,  98.,  95., ...,  73.,  55.,  72.]],

         [[110., 132., 122., ...,  97.,  82.,  84.],
          [ 56.,  86.,  80., ..., 103.,  77.,  87.],
          [ 84., 105., 122., ...,  99.,  82.,  82.],
          ...,
          [ 98., 100., 126., ...,  73.,  71.,  93.],
          [137., 124., 117., ...,  92.,  89.,  81.],
          [110., 112., 106., ...,  82.,  63.,  79.]],

         [[ 96., 117., 107., ...,  76.,  62.,  67.],
          [ 46.,  76.,  70., ...,  82.,  57.,  74.],
          [ 77.,  98., 115., ...,  78.,  61.,  61.],
          ...,
          [ 99., 100., 124., ...,  69.,  67.,  85.],
          [135., 121., 111., ...,  85.,  84.,  74.],
          [107., 107.,  99., ...,  75.,  58.,  72.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:39

analyse the exceptions in iter:40
tensorflow exception:
{'id': 3, 'name': 'maxpool2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 64, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         ...,

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
Default MaxPoolingOp only supports NHWC on device type CPU [Op:MaxPool]

generate models:40

analyse the exceptions in iter:41
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[145., 145., 148., ..., 237., 230., 224.],
          [147., 150., 168., ..., 231., 221., 214.],
          [145., 150., 178., ..., 229., 230., 232.],
          ...,
          [231., 230., 227., ..., 235., 234., 231.],
          [224., 231., 231., ..., 240., 228., 223.],
          [125., 225., 232., ..., 224., 216., 228.]],

         [[125., 126., 130., ..., 210., 202., 199.],
          [126., 132., 147., ..., 203., 192., 190.],
          [124., 130., 155., ..., 201., 201., 205.],
          ...,
          [202., 202., 198., ..., 209., 207., 203.],
          [199., 200., 202., ..., 213., 201., 199.],
          [120., 200., 204., ..., 197., 189., 203.]],

         [[ 83.,  82.,  82., ..., 170., 161., 158.],
          [ 83.,  84., 107., ..., 163., 151., 149.],
          [ 79.,  84., 110., ..., 161., 160., 166.],
          ...,
          [169., 170., 166., ..., 172., 170., 167.],
          [163., 167., 170., ..., 177., 162., 162.],
          [ 98., 166., 170., ..., 160., 150., 167.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:41

analyse the exceptions in iter:42
tensorflow exception:
{'id': 3, 'name': 'maxpool2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 64, 32, 32), dtype=float32, numpy=
array([[[[[16129., 21904., 36864., ..., 12544., 20736., 23409.],
          [ 7921., 12321., 22801., ..., 25921., 27556., 26569.],
          [ 9604.,  8836., 12100., ..., 29929., 28561., 29929.],
          ...,
          [24336., 22801., 22201., ..., 22500., 22201., 20164.],
          [26569., 26244., 25921., ..., 18225., 19881., 19044.],
          [25600., 25600., 26569., ..., 19044., 20449., 22801.]],

         [[15876., 20736., 32761., ..., 10404., 18225., 20164.],
          [ 8100., 12100., 19881., ..., 23104., 24964., 23716.],
          [ 8836.,  8836., 11881., ..., 25281., 23716., 24649.],
          ...,
          [23104., 21025., 20736., ..., 20736., 21904., 20449.],
          [24964., 24025., 22801., ..., 17161., 18769., 17956.],
          [23104., 22801., 23409., ..., 14641., 17161., 18225.]],

         [[16641., 20736., 30625., ...,  9604., 15129., 16900.],
          [ 8836., 13456., 18769., ..., 16641., 17424., 16384.],
          [ 8836.,  9801., 13924., ..., 17424., 16641., 17424.],
          ...,
          [13225., 11449., 10816., ..., 12100., 12996., 10816.],
          [14884., 14400., 13924., ...,  9801., 11881., 10609.],
          [14884., 14400., 14400., ..., 10609., 11449., 13689.]],

         ...,

         [[    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          ...,
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.]],

         [[    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          ...,
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.]],

         [[    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          ...,
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.],
          [    0.,     0.,     0., ...,     0.,     0.,     0.]]]]],
      dtype=float32)>}
Default MaxPoolingOp only supports NHWC on device type CPU [Op:MaxPool]

generate models:42

analyse the exceptions in iter:43
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1.5606956, 1.5607966, 1.5611812, ..., 1.5656682, 1.5657202,
           1.5657712],
          [1.5605927, 1.5607966, 1.5611812, ..., 1.5657712, 1.5658213,
           1.5657202],
          [1.5607966, 1.5609927, 1.5613626, ..., 1.5662714, 1.566057 ,
           1.5658944],
          ...,
          [1.5630445, 1.5625998, 1.5647358, ..., 1.5660117, 1.5659887,
           1.5659887],
          [1.5632207, 1.5633891, 1.564085 , ..., 1.5660117, 1.5660344,
           1.5660344],
          [1.5631042, 1.5632207, 1.5636536, ..., 1.5659887, 1.5660117,
           1.5660117]],

         [[1.5647722, 1.5647722, 1.5648792, ..., 1.565016 , 1.565016 ,
           1.565016 ],
          [1.5647358, 1.5646988, 1.5648084, ..., 1.5651467, 1.5651784,
           1.5649824],
          [1.5648084, 1.5648084, 1.564914 , ..., 1.5656418, 1.5653616,
           1.5650493],
          ...,
          [1.56542  , 1.5642174, 1.5647358, ..., 1.5655608, 1.5655332,
           1.5655054],
          [1.5655332, 1.5655054, 1.5655054, ..., 1.5655332, 1.5655608,
           1.5655608],
          [1.5654773, 1.5654773, 1.5655054, ..., 1.5654773, 1.5655608,
           1.5655332]],

         [[1.5657458, 1.5656682, 1.5657202, ..., 1.564085 , 1.564085 ,
           1.564085 ],
          [1.5656943, 1.5656418, 1.5656682, ..., 1.5642605, 1.564085 ,
           1.563852 ],
          [1.5657712, 1.5657202, 1.5657458, ..., 1.5647722, 1.5639937,
           1.5634972],
          ...,
          [1.5660794, 1.5648792, 1.5645465, ..., 1.5648792, 1.5649484,
           1.5650493],
          [1.5661452, 1.5661016, 1.5659183, ..., 1.5649484, 1.565016 ,
           1.5651467],
          [1.5661016, 1.5661235, 1.5660794, ..., 1.565016 , 1.5650821,
           1.5650821]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:43

analyse the exceptions in iter:44
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[139., 144., 146., ..., 132., 131., 129.],
          [139., 124., 128., ..., 110., 108., 114.],
          [172., 126., 116., ...,  67.,  68., 113.],
          ...,
          [ 95.,  93.,  91., ...,  81., 104., 107.],
          [132., 124., 119., ..., 114., 131., 132.],
          [110., 124., 129., ..., 129., 128., 112.]],

         [[154., 160., 162., ..., 140., 142., 141.],
          [148., 137., 149., ..., 114., 112., 127.],
          [162., 114., 109., ...,  71.,  68., 119.],
          ...,
          [ 88.,  82.,  84., ...,  94., 103., 102.],
          [109., 105., 104., ..., 104., 112., 110.],
          [108., 116., 116., ..., 117., 114., 105.]],

         [[188., 192., 192., ...,  77.,  76.,  70.],
          [180., 167., 178., ...,  81.,  76.,  68.],
          [172., 121., 129., ...,  50.,  58.,  78.],
          ...,
          [ 44.,  45.,  44., ...,  30.,  51.,  53.],
          [ 74.,  69.,  61., ...,  59.,  74.,  70.],
          [ 52.,  67.,  67., ...,  80.,  75.,  59.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:44

analyse the exceptions in iter:45
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0.01441861, 0.04765784, 0.01496566, ..., 0.06011593,
           0.01119767, 0.02658621],
          [0.05261955, 0.01329209, 0.010243  , ..., 0.0104635 ,
           0.01162377, 0.06169209],
          [0.01842225, 0.01842225, 0.00800769, ..., 0.04835647,
           0.05524134, 0.05855584],
          ...,
          [0.00972102, 0.0375035 , 0.06860834, ..., 0.01446084,
           0.01546317, 0.01546317],
          [0.01061475, 0.07147089, 0.03906826, ..., 0.02091466,
           0.01506419, 0.01610834],
          [0.05250026, 0.01110573, 0.02197149, ..., 0.01364735,
           0.0647488 , 0.01110573]],

         [[0.01500087, 0.03813867, 0.011806  , ..., 0.01030552,
           0.05310204, 0.01758232],
          [0.03193618, 0.06225048, 0.0088074 , ..., 0.02593879,
           0.01453194, 0.01319154],
          [0.05930961, 0.02423653, 0.0638712 , ..., 0.01693176,
           0.0397808 , 0.01255074],
          ...,
          [0.01259892, 0.01783403, 0.03596938, ..., 0.04059983,
           0.02024619, 0.01003333],
          [0.00913175, 0.02235069, 0.04387472, ..., 0.06400976,
           0.0336629 , 0.00894164],
          [0.00936483, 0.05591672, 0.01130669, ..., 0.05604806,
           0.01035735, 0.00847736]],

         [[0.01159371, 0.02854058, 0.02435162, ..., 0.03650228,
           0.00946591, 0.03650228],
          [0.04466934, 0.04466934, 0.01825387, ..., 0.05661359,
           0.00827526, 0.00827526],
          [0.01100033, 0.01747916, 0.03548392, ..., 0.04852616,
           0.01241648, 0.01495133],
          ...,
          [0.02508674, 0.01021071, 0.04924563, ..., 0.01662431,
           0.02967356, 0.01714977],
          [0.00891661, 0.01001893, 0.03013497, ..., 0.0398441 ,
           0.04324459, 0.05305035],
          [0.05341854, 0.04146565, 0.00958258, ..., 0.01094156,
           0.01255323, 0.04081893]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:45

analyse the exceptions in iter:46
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 94.,  72.,  60., ...,  72.,  71.,  77.],
          [ 85.,  67.,  52., ...,  67.,  72.,  77.],
          [ 82.,  54.,  41., ...,  70.,  71.,  78.],
          ...,
          [ 78.,  54.,  37., ...,  51.,  44.,  52.],
          [133., 117.,  98., ...,  62.,  53.,  60.],
          [140., 137., 138., ...,  85.,  79.,  69.]],

         [[ 91.,  71.,  68., ...,  78.,  75.,  82.],
          [ 83.,  66.,  57., ...,  73.,  78.,  85.],
          [ 82.,  53.,  44., ...,  76.,  77.,  85.],
          ...,
          [ 79.,  54.,  37., ...,  49.,  47.,  50.],
          [127., 111.,  92., ...,  58.,  56.,  59.],
          [129., 126., 126., ...,  68.,  71.,  63.]],

         [[ 62.,  42.,  35., ...,  43.,  39.,  41.],
          [ 55.,  38.,  29., ...,  41.,  37.,  39.],
          [ 53.,  24.,  19., ...,  53.,  37.,  39.],
          ...,
          [ 86.,  63.,  46., ...,  28.,  20.,  28.],
          [129., 115.,  98., ...,  35.,  28.,  36.],
          [126., 125., 129., ...,  46.,  46.,  42.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:46

analyse the exceptions in iter:47
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 77.,  76.,  78., ...,  68.,  58.,  48.],
          [ 71.,  67.,  69., ...,  57.,  44.,  36.],
          [ 55.,  52.,  58., ...,  62.,  53.,  48.],
          ...,
          [ 63.,  62.,  67., ...,  63.,  58.,  55.],
          [ 89.,  91.,  89., ...,  65.,  68.,  66.],
          [103., 107.,  92., ...,  69.,  77.,  77.]],

         [[113., 112., 114., ..., 104.,  94.,  84.],
          [107., 102., 105., ...,  93.,  80.,  72.],
          [ 91.,  88.,  94., ...,  98.,  89.,  84.],
          ...,
          [ 97.,  92.,  97., ...,  97.,  92.,  89.],
          [118., 116., 114., ...,  99., 102., 101.],
          [129., 131., 119., ..., 104., 111., 112.]],

         [[137., 136., 139., ..., 128., 118., 108.],
          [131., 126., 130., ..., 116., 104.,  96.],
          [115., 112., 119., ..., 122., 113., 108.],
          ...,
          [119., 115., 121., ..., 123., 118., 115.],
          [136., 135., 136., ..., 122., 125., 124.],
          [144., 147., 138., ..., 127., 134., 135.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:47

analyse the exceptions in iter:48
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[191., 190., 190., ..., 135., 142., 146.],
          [187., 184., 179., ..., 147., 152., 153.],
          [181., 176., 165., ..., 154., 162., 158.],
          ...,
          [220., 221., 222., ..., 211., 214., 224.],
          [212., 220., 225., ..., 216., 216., 221.],
          [201., 212., 217., ..., 220., 217., 217.]],

         [[191., 192., 193., ..., 143., 149., 150.],
          [188., 187., 183., ..., 154., 158., 158.],
          [183., 178., 169., ..., 161., 167., 163.],
          ...,
          [245., 245., 244., ..., 238., 240., 248.],
          [238., 245., 247., ..., 242., 241., 244.],
          [226., 239., 243., ..., 242., 240., 238.]],

         [[168., 172., 174., ..., 123., 126., 127.],
          [165., 166., 163., ..., 134., 135., 134.],
          [160., 157., 148., ..., 140., 143., 139.],
          ...,
          [198., 199., 202., ..., 189., 193., 203.],
          [190., 198., 204., ..., 194., 195., 201.],
          [178., 190., 196., ..., 197., 196., 195.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:48

analyse the exceptions in iter:49
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[255., 255., 255., ..., 255., 255., 255.],
          [255., 252., 255., ..., 254., 254., 254.],
          [255., 252., 255., ..., 254., 254., 254.],
          ...,
          [255., 254., 254., ..., 254., 254., 254.],
          [255., 253., 254., ..., 254., 254., 254.],
          [255., 255., 255., ..., 255., 255., 255.]],

         [[255., 255., 255., ..., 255., 255., 255.],
          [255., 252., 255., ..., 254., 254., 254.],
          [255., 252., 255., ..., 254., 254., 254.],
          ...,
          [255., 254., 254., ..., 254., 254., 254.],
          [255., 253., 254., ..., 254., 254., 254.],
          [255., 255., 255., ..., 255., 255., 255.]],

         [[255., 255., 255., ..., 255., 255., 255.],
          [255., 252., 255., ..., 254., 254., 254.],
          [255., 252., 255., ..., 254., 254., 254.],
          ...,
          [255., 254., 254., ..., 254., 254., 254.],
          [255., 253., 254., ..., 254., 254., 254.],
          [255., 255., 255., ..., 255., 255., 255.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:49

final statics:
total operators:28
tensorflow --> nums:47,distinct_bugs:2
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:45
maxpool2d:2
mindspore --> 
torch --> 

generate models:49

analyse the exceptions in iter:50
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 16.,  17.,  17., ...,  62.,  55.,  51.],
          [ 16.,  16.,  15., ...,  62.,  58.,  52.],
          [ 16.,  15.,  15., ...,  57.,  59.,  56.],
          ...,
          [ 96., 114., 119., ..., 128., 120., 117.],
          [118., 100., 114., ..., 139., 131., 121.],
          [144., 136., 105., ..., 145., 137., 131.]],

         [[ 76.,  77.,  77., ..., 106.,  99.,  94.],
          [ 76.,  76.,  75., ..., 109., 105., 100.],
          [ 76.,  75.,  75., ..., 110., 111., 109.],
          ...,
          [110., 127., 132., ..., 135., 130., 131.],
          [132., 113., 126., ..., 146., 140., 134.],
          [148., 140., 114., ..., 151., 144., 141.]],

         [[ 74.,  75.,  75., ...,  87.,  80.,  75.],
          [ 74.,  74.,  74., ...,  84.,  80.,  75.],
          [ 74.,  73.,  73., ...,  79.,  80.,  78.],
          ...,
          [138., 159., 167., ..., 153., 145., 142.],
          [159., 145., 163., ..., 159., 153., 147.],
          [173., 168., 143., ..., 170., 163., 158.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:50

analyse the exceptions in iter:51
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[213., 119.,  58., ..., 143., 140., 117.],
          [214., 128.,  62., ..., 138., 136., 111.],
          [215., 139.,  75., ..., 136., 134., 107.],
          ...,
          [118., 122., 129., ..., 158., 151., 145.],
          [111., 117., 128., ..., 153., 147., 141.],
          [110., 116., 127., ..., 141., 136., 139.]],

         [[221., 127.,  71., ..., 158., 142., 101.],
          [223., 137.,  75., ..., 152., 138.,  95.],
          [224., 148.,  88., ..., 151., 136.,  91.],
          ...,
          [ 45.,  45.,  46., ...,  65.,  68.,  67.],
          [ 38.,  42.,  47., ...,  62.,  59.,  63.],
          [ 38.,  40.,  48., ...,  55.,  52.,  58.]],

         [[221., 122.,  81., ..., 150., 136.,  87.],
          [220., 130.,  83., ..., 145., 133.,  82.],
          [219., 139.,  94., ..., 143., 131.,  77.],
          ...,
          [ 37.,  40.,  42., ...,  54.,  55.,  55.],
          [ 32.,  36.,  41., ...,  53.,  49.,  51.],
          [ 32.,  34.,  41., ...,  46.,  43.,  47.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:51

analyse the exceptions in iter:52
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 63.,  77.,  66., ...,  76.,  86., 114.],
          [ 72.,  70.,  64., ...,  84.,  81.,  88.],
          [ 56.,  70.,  54., ..., 139., 104.,  77.],
          ...,
          [118., 152., 175., ..., 102., 128., 179.],
          [137., 148., 148., ..., 121., 170., 203.],
          [171., 173., 153., ..., 167., 187., 174.]],

         [[ 70.,  88.,  88., ...,  91.,  94., 116.],
          [ 71.,  83.,  85., ...,  94.,  91.,  97.],
          [ 65.,  82.,  76., ..., 142., 114.,  93.],
          ...,
          [107., 135., 155., ...,  79., 105., 150.],
          [123., 129., 129., ...,  94., 142., 168.],
          [145., 146., 130., ..., 136., 157., 143.]],

         [[ 37.,  63.,  63., ...,  65.,  71.,  95.],
          [ 39.,  58.,  58., ...,  71.,  67.,  73.],
          [ 34.,  53.,  48., ..., 120.,  90.,  71.],
          ...,
          [ 85., 111., 133., ...,  63.,  85., 114.],
          [101., 109., 105., ...,  74., 116., 130.],
          [108., 107.,  96., ..., 107., 129., 115.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:52

analyse the exceptions in iter:53
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[157., 156., 157., ..., 177., 177., 175.],
          [162., 162., 162., ..., 187., 182., 179.],
          [165., 164., 165., ..., 211., 204., 191.],
          ...,
          [172., 168., 166., ..., 203., 203., 200.],
          [177., 175., 172., ..., 203., 203., 200.],
          [182., 182., 179., ..., 203., 203., 200.]],

         [[159., 158., 159., ..., 183., 180., 179.],
          [164., 164., 164., ..., 194., 187., 183.],
          [167., 166., 167., ..., 220., 210., 196.],
          ...,
          [174., 170., 167., ..., 205., 205., 202.],
          [179., 177., 173., ..., 205., 205., 202.],
          [184., 183., 180., ..., 205., 205., 202.]],

         [[146., 145., 146., ..., 185., 183., 179.],
          [151., 151., 151., ..., 200., 193., 186.],
          [154., 153., 154., ..., 226., 219., 201.],
          ...,
          [161., 158., 158., ..., 201., 201., 199.],
          [166., 166., 164., ..., 202., 202., 199.],
          [171., 174., 173., ..., 202., 202., 199.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:53

analyse the exceptions in iter:54
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 45.,  47.,  48., ...,  50.,  47.,  46.],
          [ 45.,  47.,  48., ...,  55.,  51.,  51.],
          [ 45.,  46.,  47., ...,  60.,  56.,  55.],
          ...,
          [ 50.,  50.,  51., ...,  97.,  79.,  76.],
          [ 50.,  49.,  51., ...,  81., 103.,  72.],
          [ 50.,  50.,  51., ...,  83.,  90.,  88.]],

         [[ 73.,  75.,  76., ...,  73.,  69.,  70.],
          [ 72.,  74.,  75., ...,  77.,  74.,  75.],
          [ 71.,  72.,  73., ...,  83.,  80.,  80.],
          ...,
          [ 76.,  78.,  78., ..., 118., 112., 104.],
          [ 76.,  77.,  78., ...,  92., 121., 101.],
          [ 75.,  78.,  77., ...,  91., 100., 110.]],

         [[ 28.,  30.,  33., ...,  28.,  29.,  31.],
          [ 27.,  29.,  32., ...,  32.,  31.,  32.],
          [ 29.,  30.,  31., ...,  36.,  34.,  34.],
          ...,
          [ 34.,  34.,  35., ...,  99.,  50.,  49.],
          [ 34.,  34.,  35., ..., 105., 100.,  44.],
          [ 35.,  33.,  35., ..., 100., 106.,  80.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:54

analyse the exceptions in iter:55
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[156., 167., 169., ..., 243., 230., 208.],
          [174., 192., 172., ..., 237., 213., 186.],
          [192., 194., 174., ..., 226., 198., 195.],
          ...,
          [187., 211., 231., ..., 210., 217., 203.],
          [231., 220., 200., ..., 183., 189., 186.],
          [238., 238., 229., ..., 141., 151., 157.]],

         [[194., 212., 215., ..., 247., 235., 215.],
          [210., 229., 204., ..., 243., 221., 193.],
          [234., 230., 201., ..., 231., 208., 200.],
          ...,
          [211., 234., 244., ..., 204., 208., 192.],
          [238., 236., 219., ..., 170., 175., 169.],
          [242., 247., 239., ..., 126., 137., 141.]],

         [[129., 127., 129., ..., 226., 206., 180.],
          [147., 159., 163., ..., 223., 200., 169.],
          [145., 178., 194., ..., 218., 186., 165.],
          ...,
          [151., 180., 221., ..., 199., 210., 192.],
          [218., 209., 177., ..., 153., 160., 153.],
          [224., 232., 217., ..., 106., 117., 118.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:55

analyse the exceptions in iter:56
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[-0.93172234,  0.7179642 , -0.61254823, ..., -0.23238844,
           -0.23238844, -0.9439941 ],
          [-0.94102633,  0.6992508 , -0.94102633, ..., -0.23238844,
           -0.23238844, -0.23238844],
          [-0.22374097, -0.22374097, -0.94102633, ..., -0.78769594,
           -0.9439941 , -0.9439941 ],
          ...,
          [ 0.7877145 , -0.0927762 ,  0.7179642 , ...,  0.99608517,
           -0.47162572,  0.79311806],
          [ 0.94398415, -0.9715922 , -0.99608785, ...,  0.57697755,
            0.98111135,  0.34246647],
          [ 0.05750252,  0.8838634 ,  0.7984962 , ..., -0.8920185 ,
           -0.8623036 ,  0.6928741 ]],

         [[ 0.6333192 , -0.25810164,  0.02212675, ..., -0.9968286 ,
           -0.47162572,  0.48718765],
          [-0.30902272, -0.5177698 ,  0.39185724, ..., -0.6055519 ,
            0.34246647, -0.6055519 ],
          [-0.9672506 , -0.99964744,  0.39185724, ..., -0.6055519 ,
           -0.6055519 , -0.6055519 ],
          ...,
          [ 0.8623189 ,  0.10158571, -0.9990208 , ...,  0.7984962 ,
            0.05750252, -0.22374097],
          [ 0.89200485,  0.31742868,  0.98277956, ..., -0.69922924,
            0.35079733,  0.8838634 ],
          [-0.24095906,  0.98277956,  0.23235911, ...,  0.79311806,
            0.22377032, -0.3507691 ]],

         [[-0.14550003, -0.4161468 ,  1.        , ..., -0.48716134,
            0.4716523 ,  0.996831  ],
          [-0.8390715 ,  0.28366217, -0.4161468 , ..., -0.5913697 ,
            0.35904428, -0.5913697 ],
          [-0.27516335,  0.75390226, -0.6536436 , ...,  0.9793546 ,
            0.9793546 ,  0.9793546 ],
          ...,
          [-0.7361927 , -0.11038724,  0.92175126, ..., -0.5770022 ,
           -0.38369843,  0.31742868],
          [ 0.92175126, -0.30902272, -0.7361927 , ...,  0.8711474 ,
           -0.04866361,  0.5697503 ],
          [-0.5177698 , -0.30902272,  0.2495401 , ..., -0.93172234,
            0.9736489 , -0.24095906]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:56

analyse the exceptions in iter:57
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 66.,  71.,  88., ...,  85.,  86.,  79.],
          [ 75.,  79.,  95., ...,  85.,  87.,  78.],
          [ 80.,  84.,  97., ...,  81.,  82.,  74.],
          ...,
          [ 79.,  87.,  60., ...,  35.,  26.,  20.],
          [ 77.,  70.,  37., ...,  79.,  77.,  66.],
          [ 78.,  63.,  31., ..., 140., 135., 128.]],

         [[ 73.,  77.,  86., ...,  80.,  81.,  73.],
          [ 81.,  84.,  92., ...,  79.,  80.,  72.],
          [ 85.,  88.,  93., ...,  75.,  74.,  68.],
          ...,
          [ 74.,  84.,  58., ...,  35.,  26.,  21.],
          [ 74.,  68.,  37., ...,  68.,  66.,  55.],
          [ 74.,  61.,  32., ..., 122., 117., 113.]],

         [[ 33.,  40.,  62., ...,  55.,  62.,  54.],
          [ 40.,  45.,  66., ...,  56.,  62.,  54.],
          [ 44.,  50.,  68., ...,  48.,  53.,  51.],
          ...,
          [ 59.,  69.,  43., ...,  22.,  14.,  10.],
          [ 59.,  53.,  22., ...,  60.,  58.,  50.],
          [ 58.,  44.,  15., ..., 116., 113., 111.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:57

analyse the exceptions in iter:58
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 97.,  96., 108., ..., 130., 117., 115.],
          [111., 104., 111., ..., 138., 128., 124.],
          [135., 132., 128., ..., 136., 130., 121.],
          ...,
          [124., 120., 126., ..., 114., 118., 119.],
          [126., 123., 125., ...,  96., 102., 102.],
          [124., 124., 126., ...,  97.,  96.,  81.]],

         [[ 83.,  84.,  98., ..., 113., 100., 100.],
          [ 97.,  91.,  99., ..., 121., 112., 111.],
          [120., 116., 113., ..., 119., 113., 109.],
          ...,
          [109., 104., 109., ...,  99., 105., 104.],
          [108., 106., 108., ...,  82.,  89.,  88.],
          [106., 107., 109., ...,  83.,  84.,  69.]],

         [[ 41.,  46.,  56., ...,  60.,  48.,  48.],
          [ 49.,  45.,  49., ...,  66.,  57.,  57.],
          [ 68.,  65.,  57., ...,  63.,  58.,  54.],
          ...,
          [ 55.,  51.,  57., ...,  57.,  61.,  55.],
          [ 54.,  52.,  53., ...,  44.,  49.,  46.],
          [ 52.,  53.,  55., ...,  42.,  45.,  36.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:58

analyse the exceptions in iter:59
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[252., 255., 194., ..., 255., 255., 253.],
          [251., 255., 211., ..., 246., 249., 251.],
          [251., 255., 218., ..., 249., 250., 252.],
          ...,
          [ 57.,  30.,  73., ...,  23.,  26., 112.],
          [ 89.,  16.,  26., ...,  21.,  32., 149.],
          [185.,  94.,  54., ...,  60., 129., 221.]],

         [[251., 255., 212., ..., 254., 253., 252.],
          [249., 255., 234., ..., 255., 255., 252.],
          [250., 255., 235., ..., 255., 254., 253.],
          ...,
          [111.,  86.,  88., ...,  60.,  81., 149.],
          [134.,  77.,  74., ...,  75.,  83., 174.],
          [208., 134.,  99., ..., 104., 159., 232.]],

         [[249., 255., 224., ..., 253., 252., 252.],
          [246., 254., 240., ..., 251., 252., 251.],
          [249., 255., 240., ..., 254., 252., 252.],
          ...,
          [159., 138., 110., ..., 100., 139., 186.],
          [177., 144., 136., ..., 140., 145., 198.],
          [229., 182., 159., ..., 159., 197., 240.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:59

analyse the exceptions in iter:60
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[201., 191., 194., ...,  83.,  39.,  36.],
          [ 57.,  62., 134., ...,  79.,  48.,  35.],
          [ 74., 123., 138., ..., 162., 132.,  56.],
          ...,
          [ 67.,  62.,  55., ...,  69.,  72.,  72.],
          [ 73.,  67.,  59., ...,  72.,  72.,  71.],
          [ 74.,  71.,  67., ...,  61.,  58.,  63.]],

         [[209., 204., 207., ...,  88.,  48.,  47.],
          [ 73.,  78., 148., ...,  91.,  59.,  45.],
          [ 99., 142., 153., ..., 175., 139.,  61.],
          ...,
          [ 80.,  72.,  62., ...,  78.,  80.,  82.],
          [ 87.,  77.,  67., ...,  81.,  81.,  81.],
          [ 89.,  84.,  79., ...,  73.,  69.,  75.]],

         [[211., 210., 216., ...,  82.,  33.,  24.],
          [ 79.,  92., 161., ...,  96.,  57.,  32.],
          [110., 165., 169., ..., 186., 145.,  56.],
          ...,
          [ 89.,  82.,  73., ...,  93.,  95.,  98.],
          [ 95.,  87.,  77., ...,  96.,  96.,  96.],
          [100.,  95.,  89., ...,  88.,  85.,  91.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:60

analyse the exceptions in iter:61
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[114., 117., 120., ..., 165., 125., 103.],
          [111., 116., 121., ..., 162., 127., 103.],
          [114., 121., 128., ..., 167., 132., 106.],
          ...,
          [165., 170., 175., ..., 185., 207., 201.],
          [175., 175., 180., ..., 187., 200., 193.],
          [173., 171., 177., ..., 205., 210., 202.]],

         [[119., 122., 126., ..., 166., 126., 103.],
          [116., 121., 126., ..., 163., 128., 103.],
          [119., 125., 132., ..., 168., 133., 108.],
          ...,
          [166., 171., 176., ..., 179., 199., 193.],
          [176., 176., 181., ..., 182., 194., 186.],
          [174., 172., 178., ..., 200., 204., 195.]],

         [[125., 126., 129., ..., 160., 121., 110.],
          [122., 127., 133., ..., 157., 123., 109.],
          [125., 136., 142., ..., 162., 126., 102.],
          ...,
          [161., 167., 171., ..., 168., 194., 185.],
          [171., 171., 176., ..., 162., 181., 178.],
          [169., 167., 173., ..., 182., 192., 187.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:61

analyse the exceptions in iter:62
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 76.,  73.,  69., ...,  75.,  72.,  70.],
          [ 76.,  71.,  66., ...,  79.,  76.,  75.],
          [ 71.,  65.,  62., ...,  80.,  77.,  76.],
          ...,
          [ 11.,   9.,   6., ...,  31.,  32.,  29.],
          [  0.,   0.,   0., ...,  12.,  12.,  13.],
          [ 87.,  83.,  81., ...,  99.,  99., 102.]],

         [[118., 118., 116., ..., 135., 134., 135.],
          [122., 119., 117., ..., 136., 135., 137.],
          [120., 117., 116., ..., 133., 132., 135.],
          ...,
          [ 36.,  32.,  32., ...,  61.,  62.,  59.],
          [ 19.,  13.,   7., ...,  38.,  37.,  38.],
          [100.,  92.,  86., ..., 116., 115., 119.]],

         [[167., 164., 162., ..., 180., 178., 179.],
          [170., 166., 163., ..., 178., 177., 179.],
          [170., 165., 164., ..., 173., 172., 174.],
          ...,
          [ 66.,  61.,  61., ...,  79.,  80.,  77.],
          [ 46.,  40.,  36., ...,  55.,  55.,  56.],
          [115., 108., 103., ..., 127., 127., 130.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:62

analyse the exceptions in iter:63
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 65.,  70.,  76., ...,  33.,  59.,  62.],
          [ 71.,  78.,  87., ...,  23.,  65.,  74.],
          [ 69.,  77.,  82., ...,  19.,  67.,  83.],
          ...,
          [ 14.,  14.,  14., ...,  54.,  54.,  52.],
          [ 14.,  14.,  14., ...,  53.,  45.,  38.],
          [ 14.,  14.,  14., ...,  49.,  31.,  21.]],

         [[114., 121., 129., ...,  47.,  62.,  66.],
          [120., 129., 140., ...,  30.,  62.,  72.],
          [118., 129., 137., ...,  20.,  57.,  73.],
          ...,
          [ 14.,  14.,  14., ...,  76.,  80.,  81.],
          [ 14.,  14.,  14., ...,  76.,  69.,  63.],
          [ 14.,  14.,  14., ...,  72.,  51.,  39.]],

         [[ 54.,  62.,  71., ...,  42.,  53.,  56.],
          [ 57.,  65.,  75., ...,  24.,  51.,  57.],
          [ 53.,  60.,  63., ...,  13.,  49.,  66.],
          ...,
          [ 14.,  14.,  14., ...,  45.,  42.,  46.],
          [ 14.,  14.,  14., ...,  46.,  37.,  34.],
          [ 14.,  14.,  14., ...,  45.,  30.,  21.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:63

analyse the exceptions in iter:64
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 65.,  67.,  69., ...,  93., 108., 102.],
          [ 65.,  65.,  69., ..., 104., 122., 132.],
          [ 62.,  63.,  68., ..., 122., 146., 140.],
          ...,
          [ 88.,  90.,  95., ...,  83.,  89.,  92.],
          [ 90.,  94.,  98., ...,  75.,  78.,  85.],
          [ 95., 102., 104., ...,  74.,  79.,  84.]],

         [[ 29.,  32.,  35., ...,  73.,  87.,  81.],
          [ 29.,  30.,  34., ...,  83.,  97., 106.],
          [ 27.,  28.,  32., ...,  99., 118., 114.],
          ...,
          [ 76.,  79.,  85., ...,  85.,  93.,  97.],
          [ 79.,  83.,  87., ...,  66.,  74.,  86.],
          [ 84.,  90.,  94., ...,  62.,  70.,  78.]],

         [[ 29.,  30.,  33., ...,  70.,  82.,  74.],
          [ 29.,  28.,  32., ...,  78.,  90.,  98.],
          [ 25.,  24.,  30., ...,  93., 110., 104.],
          ...,
          [ 84.,  86.,  92., ...,  99., 108., 111.],
          [ 85.,  90.,  95., ...,  71.,  83.,  97.],
          [ 92.,  98., 102., ...,  62.,  73.,  83.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:64

analyse the exceptions in iter:65
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[148., 132., 134., ..., 124., 108., 124.],
          [197., 168., 176., ..., 176., 162., 141.],
          [199., 199., 213., ..., 182., 178., 153.],
          ...,
          [179., 183., 182., ..., 164., 147., 136.],
          [162., 146., 127., ..., 118., 118., 132.],
          [150., 143., 123., ..., 124., 126., 157.]],

         [[141., 128., 135., ..., 131., 109., 127.],
          [181., 151., 166., ..., 178., 157., 133.],
          [194., 191., 209., ..., 186., 175., 141.],
          ...,
          [170., 165., 166., ..., 144., 127., 119.],
          [156., 133., 116., ..., 100.,  99., 116.],
          [148., 141., 125., ..., 119., 121., 154.]],

         [[174., 173., 187., ..., 186., 166., 171.],
          [214., 185., 199., ..., 213., 191., 162.],
          [207., 193., 209., ..., 193., 178., 156.],
          ...,
          [170., 148., 145., ..., 121., 106., 130.],
          [173., 140., 122., ..., 106., 108., 138.],
          [184., 176., 161., ..., 162., 162., 186.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:65

analyse the exceptions in iter:66
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:66

analyse the exceptions in iter:67
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]],

         [[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]],

         [[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:67

analyse the exceptions in iter:68
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[110., 103., 104., ..., 102.,  94.,  99.],
          [125., 119., 120., ..., 108., 104., 110.],
          [113.,  73.,  80., ...,  47.,  78., 103.],
          ...,
          [102., 125., 190., ...,  86.,  69.,  92.],
          [120., 141., 194., ...,  81.,  85., 109.],
          [159., 166., 163., ...,  98., 110., 100.]],

         [[125., 128., 130., ..., 121., 121., 120.],
          [151., 157., 160., ..., 137., 144., 145.],
          [136., 102., 107., ...,  72., 117., 141.],
          ...,
          [ 77.,  88., 159., ...,  72.,  57.,  70.],
          [ 92., 100., 163., ...,  68.,  77., 101.],
          [133., 127., 132., ...,  85., 105., 102.]],

         [[141., 147., 145., ..., 130., 132., 129.],
          [167., 181., 185., ..., 145., 155., 156.],
          [148., 122., 127., ...,  76., 124., 151.],
          ...,
          [ 37.,  49., 132., ...,  48.,  37.,  40.],
          [ 49.,  52., 124., ...,  34.,  39.,  59.],
          [ 96.,  79.,  90., ...,  57.,  64.,  67.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:68

analyse the exceptions in iter:69
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[151., 150., 151., ..., 151., 151., 151.],
          [153., 152., 153., ..., 153., 153., 153.],
          [152., 151., 152., ..., 152., 151., 151.],
          ...,
          [100.,  99., 103., ...,  93.,  98.,  98.],
          [ 96.,  94.,  93., ...,  98.,  99.,  99.],
          [ 94.,  94.,  92., ..., 100., 100., 101.]],

         [[158., 157., 158., ..., 158., 157., 157.],
          [160., 159., 160., ..., 160., 160., 160.],
          [159., 158., 159., ..., 159., 158., 158.],
          ...,
          [106., 105., 109., ...,  99., 104., 104.],
          [102., 100.,  99., ..., 104., 105., 105.],
          [100., 100.,  98., ..., 106., 106., 107.]],

         [[168., 167., 167., ..., 164., 163., 163.],
          [170., 169., 170., ..., 166., 166., 166.],
          [169., 168., 168., ..., 164., 164., 164.],
          ...,
          [102., 101., 105., ...,  95., 100., 100.],
          [ 98.,  96.,  95., ..., 100., 101., 101.],
          [ 96.,  96.,  94., ..., 102., 102., 103.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:69

analyse the exceptions in iter:70
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[154., 159., 165., ..., 129., 125., 122.],
          [156., 160., 163., ..., 118., 120., 118.],
          [146., 130., 128., ..., 118., 112., 107.],
          ...,
          [125., 126., 124., ..., 123., 126., 131.],
          [125., 127., 125., ..., 120., 128., 129.],
          [119., 121., 135., ..., 132., 136., 146.]],

         [[179., 183., 189., ..., 161., 158., 155.],
          [177., 180., 184., ..., 150., 152., 150.],
          [169., 152., 151., ..., 150., 144., 139.],
          ...,
          [146., 147., 146., ..., 141., 140., 144.],
          [145., 148., 146., ..., 137., 142., 141.],
          [136., 138., 153., ..., 148., 149., 157.]],

         [[152., 157., 162., ..., 137., 133., 131.],
          [152., 155., 159., ..., 126., 128., 126.],
          [143., 126., 125., ..., 126., 120., 115.],
          ...,
          [129., 127., 124., ..., 117., 118., 122.],
          [127., 128., 124., ..., 119., 125., 125.],
          [120., 119., 132., ..., 135., 137., 146.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:70

analyse the exceptions in iter:71
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[169., 104.,  81., ..., 163., 210., 250.],
          [103.,   5.,   0., ...,  27.,  68., 185.],
          [163.,  23.,   1., ...,  69.,  90., 159.],
          ...,
          [235., 165., 104., ...,  55.,  87., 162.],
          [255., 231., 147., ...,  35.,  60., 189.],
          [255., 252., 240., ...,  87., 120., 215.]],

         [[170., 109.,  88., ..., 169., 214., 250.],
          [104.,   8.,   0., ...,  29.,  69., 185.],
          [163.,  25.,   3., ...,  67.,  88., 158.],
          ...,
          [235., 167., 108., ...,  60.,  91., 165.],
          [255., 231., 149., ...,  39.,  63., 191.],
          [255., 252., 240., ...,  89., 122., 216.]],

         [[164.,  98.,  82., ..., 159., 201., 242.],
          [ 93.,   0.,   0., ...,  21.,  56., 174.],
          [150.,  18.,   1., ...,  59.,  76., 147.],
          ...,
          [232., 153.,  83., ...,  28.,  63., 149.],
          [255., 226., 136., ...,  21.,  44., 179.],
          [255., 251., 237., ...,  82., 111., 207.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:71

analyse the exceptions in iter:72
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:72

analyse the exceptions in iter:73
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 64.,  72.,  73., ...,  73.,  52.,  51.],
          [ 77.,  78.,  64., ...,  56.,  42.,  43.],
          [ 90.,  87.,  69., ...,  60.,  47.,  45.],
          ...,
          [154., 159., 159., ..., 129., 131., 126.],
          [144., 143., 138., ..., 160., 159., 153.],
          [ 93.,  94.,  92., ..., 116., 115., 110.]],

         [[ 45.,  52.,  60., ...,  70.,  53.,  45.],
          [ 55.,  58.,  50., ...,  52.,  44.,  40.],
          [ 71.,  74.,  61., ...,  57.,  50.,  44.],
          ...,
          [137., 143., 142., ..., 128., 130., 126.],
          [141., 141., 136., ..., 157., 154., 149.],
          [ 93.,  94.,  90., ..., 107., 106., 102.]],

         [[ 13.,  23.,  41., ...,  30.,  20.,  31.],
          [ 28.,  36.,  38., ...,  24.,  18.,  25.],
          [ 35.,  46.,  40., ...,  40.,  30.,  30.],
          ...,
          [109., 115., 114., ...,  77.,  84.,  76.],
          [131., 131., 127., ..., 141., 144., 136.],
          [ 77.,  75.,  74., ...,  90.,  90.,  81.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:73

analyse the exceptions in iter:74
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1.5656682, 1.5647358, 1.5641297, ..., 1.5633891, 1.5624632,
           1.5624632],
          [1.5650493, 1.5622495, 1.5638999, ..., 1.5633337, 1.5610878,
           1.5622495],
          [1.5627965, 1.5604874, 1.5631629, ..., 1.5630445, 1.5607966,
           1.5611812],
          ...,
          [1.5625998, 1.5627965, 1.5623219, ..., 1.5598078, 1.5587487,
           1.5570985],
          [1.5632207, 1.5631042, 1.5634435, ..., 1.5590322, 1.5591689,
           1.5598078],
          [1.5638034, 1.5634972, 1.5638034, ..., 1.5590322, 1.5614508,
           1.5638999]],

         [[1.5659887, 1.5651467, 1.5645852, ..., 1.5655054, 1.565391 ,
           1.5653616],
          [1.5655332, 1.5633337, 1.5645071, ..., 1.5653019, 1.5646236,
           1.5654773],
          [1.5638034, 1.5624632, 1.5641297, ..., 1.5648084, 1.5639471,
           1.5647358],
          ...,
          [1.5639471, 1.564085 , 1.5637542, ..., 1.5623219, 1.5617876,
           1.56038  ],
          [1.564427 , 1.5643448, 1.5645465, ..., 1.5617876, 1.561947 ,
           1.561947 ],
          [1.5649824, 1.5647358, 1.5648792, ..., 1.5614508, 1.5629225,
           1.5645465]],

         [[1.5647722, 1.5635501, 1.5636536, ..., 1.5638034, 1.5623932,
           1.5623219],
          [1.5645465, 1.5621009, 1.5643029, ..., 1.5627965, 1.56038  ,
           1.5630445],
          [1.5627965, 1.5621009, 1.5641297, ..., 1.5624632, 1.5604874,
           1.5626664],
          ...,
          [1.5639471, 1.564085 , 1.5637542, ..., 1.5625998, 1.5620246,
           1.560044 ],
          [1.5644673, 1.5643448, 1.5645852, ..., 1.561947 , 1.5621009,
           1.5616223],
          [1.5652097, 1.5648084, 1.5650493, ..., 1.5614508, 1.5627965,
           1.5643029]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:74

analyse the exceptions in iter:75
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 65.,  76., 188., ..., 146., 162., 150.],
          [ 37.,  68., 187., ..., 148., 137., 161.],
          [ 31.,  67., 177., ..., 139., 143., 178.],
          ...,
          [114., 114., 113., ..., 106., 107., 109.],
          [106., 106., 106., ..., 107., 107., 108.],
          [ 99., 105., 110., ..., 106., 107., 108.]],

         [[ 64.,  78., 187., ..., 117., 135., 130.],
          [ 41.,  70., 185., ..., 117., 115., 155.],
          [ 37.,  73., 175., ..., 110., 121., 143.],
          ...,
          [114., 114., 114., ..., 106., 107., 109.],
          [106., 106., 106., ..., 107., 107., 108.],
          [ 99., 104., 110., ..., 106., 107., 108.]],

         [[ 58.,  73., 185., ..., 110., 130., 122.],
          [ 42.,  72., 182., ..., 106., 112., 149.],
          [ 42.,  67., 169., ...,  97., 102., 134.],
          ...,
          [115., 114., 112., ..., 106., 107., 109.],
          [110., 109., 108., ..., 107., 107., 109.],
          [102., 107., 114., ..., 107., 108., 110.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:75

analyse the exceptions in iter:76
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:76

analyse the exceptions in iter:77
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 44.,  47.,  51., ...,  75.,  72.,  74.],
          [ 52.,  47.,  51., ...,  73.,  74.,  76.],
          [ 65.,  57.,  54., ...,  73.,  73.,  75.],
          ...,
          [ 56.,  49.,  49., ...,  53.,  52.,  53.],
          [ 41.,  56.,  52., ...,  52.,  52.,  49.],
          [ 24.,  49.,  40., ...,  54.,  55.,  46.]],

         [[ 73.,  77.,  81., ..., 107., 104., 106.],
          [ 85.,  79.,  82., ..., 105., 106., 108.],
          [100.,  91.,  87., ..., 105., 105., 108.],
          ...,
          [ 82.,  75.,  74., ...,  77.,  77.,  77.],
          [ 64.,  79.,  75., ...,  74.,  74.,  72.],
          [ 44.,  69.,  60., ...,  74.,  74.,  66.]],

         [[ 49.,  53.,  57., ...,  83.,  80.,  82.],
          [ 55.,  54.,  60., ...,  81.,  82.,  84.],
          [ 67.,  65.,  66., ...,  81.,  81.,  82.],
          ...,
          [ 48.,  41.,  41., ...,  49.,  48.,  49.],
          [ 35.,  50.,  46., ...,  49.,  49.,  46.],
          [ 19.,  44.,  36., ...,  51.,  52.,  43.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:77

analyse the exceptions in iter:78
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[114.,  95., 104., ..., 192., 177., 136.],
          [ 76.,  45.,  53., ..., 170., 157., 107.],
          [ 63.,  49.,  51., ..., 175., 164., 109.],
          ...,
          [ 46.,  39.,  56., ..., 133., 120.,  95.],
          [ 28.,  31.,  43., ..., 123., 113.,  85.],
          [ 48.,  40.,  44., ...,  82.,  76.,  84.]],

         [[122., 102., 112., ..., 192., 177., 136.],
          [ 89.,  57.,  65., ..., 170., 157., 107.],
          [ 72.,  58.,  60., ..., 175., 164., 109.],
          ...,
          [ 56.,  49.,  67., ..., 133., 120.,  96.],
          [ 34.,  38.,  50., ..., 123., 114.,  86.],
          [ 51.,  42.,  47., ...,  82.,  76.,  85.]],

         [[ 95.,  76.,  86., ..., 192., 177., 136.],
          [ 60.,  30.,  38., ..., 170., 157., 107.],
          [ 44.,  31.,  33., ..., 175., 164., 109.],
          ...,
          [ 35.,  29.,  46., ..., 133., 118.,  92.],
          [ 19.,  23.,  35., ..., 123., 111.,  82.],
          [ 43.,  34.,  38., ...,  82.,  74.,  80.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:78

analyse the exceptions in iter:79
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[246.9375 , 229.8125 , 198.09375, ..., 236.875  , 244.90625,
            62.5    ],
          [247.53125, 232.03125, 203.96875, ..., 236.875  , 244.90625,
            62.5    ],
          [247.375  , 233.6875 , 206.25   , ..., 236.875  , 244.90625,
            62.5    ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:79

analyse the exceptions in iter:80
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 76.,  78.,  79., ..., 104., 105., 106.],
          [ 78.,  79.,  79., ..., 109., 110., 111.],
          [ 97.,  88.,  85., ..., 114., 114., 115.],
          ...,
          [101., 116., 121., ..., 186., 178., 176.],
          [134., 145., 150., ..., 176., 179., 175.],
          [150., 153., 154., ..., 178., 179., 179.]],

         [[112., 114., 114., ..., 135., 136., 137.],
          [114., 118., 119., ..., 138., 139., 140.],
          [119., 118., 119., ..., 142., 142., 143.],
          ...,
          [101., 116., 121., ..., 181., 171., 168.],
          [134., 146., 150., ..., 172., 174., 170.],
          [150., 153., 154., ..., 174., 175., 175.]],

         [[159., 162., 161., ..., 182., 183., 183.],
          [159., 161., 160., ..., 183., 183., 184.],
          [155., 161., 168., ..., 185., 186., 186.],
          ...,
          [112., 126., 130., ..., 176., 168., 166.],
          [140., 150., 154., ..., 169., 172., 169.],
          [150., 153., 154., ..., 172., 175., 176.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:80

analyse the exceptions in iter:81
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 90.96875,  95.84375,  95.6875 , ..., 148.8125 , 137.03125,
           120.09375],
          [105.34375, 106.71875, 106.34375, ..., 143.78125, 130.8125 ,
           119.     ],
          [ 89.09375,  88.71875,  87.625  , ..., 141.84375, 135.09375,
           142.5625 ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:81

analyse the exceptions in iter:82
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[121.,  84.,  68., ..., 112.,  83.,  82.],
          [134., 113., 101., ...,  87.,  88., 102.],
          [135., 125., 114., ...,  93.,  87.,  85.],
          ...,
          [ 95.,  91.,  92., ..., 112., 122., 112.],
          [ 92.,  87.,  98., ..., 116., 129., 104.],
          [ 95.,  90.,  94., ..., 125., 113.,  94.]],

         [[154., 119., 107., ..., 141., 115., 119.],
          [163., 142., 135., ..., 118., 122., 137.],
          [166., 152., 146., ..., 127., 117., 109.],
          ...,
          [125., 123., 126., ..., 124., 131., 131.],
          [126., 121., 130., ..., 140., 152., 126.],
          [128., 123., 128., ..., 148., 137., 120.]],

         [[106.,  85.,  60., ..., 117.,  91.,  89.],
          [130., 115.,  89., ...,  87.,  90., 104.],
          [137., 110.,  74., ...,  78.,  59.,  60.],
          ...,
          [ 67.,  65.,  63., ..., 103.,  98.,  79.],
          [ 72.,  64.,  64., ...,  74.,  75.,  91.],
          [ 72.,  64.,  59., ...,  93.,  83.,  79.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:82

analyse the exceptions in iter:84
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[103.,  89.,  78., ..., 112., 124., 144.],
          [ 95.,  76.,  52., ..., 126., 127., 147.],
          [ 78.,  70.,  41., ..., 160., 146., 158.],
          ...,
          [161., 154., 155., ..., 121., 120., 119.],
          [124., 122., 128., ..., 125., 139., 149.],
          [142., 144., 143., ..., 158., 165., 172.]],

         [[ 93.,  84.,  79., ..., 114., 120., 126.],
          [ 81.,  67.,  50., ..., 119., 114., 121.],
          [ 69.,  64.,  37., ..., 158., 142., 140.],
          ...,
          [176., 173., 173., ..., 141., 136., 126.],
          [143., 147., 151., ..., 130., 143., 149.],
          [138., 144., 142., ..., 160., 168., 175.]],

         [[ 68.,  59.,  59., ...,  79.,  91., 112.],
          [ 59.,  52.,  44., ...,  81.,  82., 109.],
          [ 58.,  62.,  44., ..., 103.,  91., 109.],
          ...,
          [105.,  96.,  97., ...,  86.,  85.,  82.],
          [ 89.,  87.,  98., ...,  79.,  91.,  98.],
          [ 90.,  92.,  93., ..., 105., 111., 113.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:83

analyse the exceptions in iter:85
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 1.,  1.,  1., ..., 12.,  6.,  4.],
          [ 1.,  1.,  1., ...,  9.,  2.,  1.],
          [ 1.,  1.,  1., ...,  5.,  1.,  1.],
          ...,
          [ 1.,  0., 51., ..., 48., 48., 45.],
          [ 1.,  0., 63., ..., 49., 48., 47.],
          [ 2.,  0., 43., ..., 47., 46., 48.]],

         [[ 1.,  1.,  1., ..., 15.,  7.,  4.],
          [ 1.,  1.,  1., ..., 12.,  3.,  1.],
          [ 1.,  1.,  1., ...,  8.,  2.,  1.],
          ...,
          [ 4.,  0., 34., ..., 42., 40., 36.],
          [ 2.,  0., 41., ..., 43., 40., 38.],
          [ 2.,  0., 25., ..., 42., 38., 39.]],

         [[ 1.,  1.,  1., ..., 20.,  8.,  4.],
          [ 1.,  1.,  1., ..., 17.,  5.,  1.],
          [ 1.,  1.,  1., ..., 12.,  3.,  1.],
          ...,
          [ 0.,  0., 34., ..., 40., 41., 37.],
          [ 1.,  0., 43., ..., 41., 40., 39.],
          [ 3.,  0., 27., ..., 39., 38., 40.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:84

analyse the exceptions in iter:86
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[11449.,  4489.,   676., ...,  7921.,  5184.,  5329.],
          [11449.,  3969.,   784., ...,  8649.,  6561.,  8281.],
          [11236.,  4489.,  1764., ...,  7744.,  7056.,  8649.],
          ...,
          [21904., 24025., 25281., ..., 20164., 20736., 20736.],
          [21316., 21609., 22500., ..., 22801., 21609., 21025.],
          [19881., 19321., 18496., ..., 22201., 21904., 21609.]],

         [[10816.,  4225.,  1089., ..., 10404.,  4900.,  4761.],
          [ 9604.,  3481.,  1089., ..., 10816.,  7396.,  8649.],
          [10609.,  3969.,  2304., ...,  9216.,  8281.,  8836.],
          ...,
          [29584., 30976., 31329., ..., 27225., 27556., 26569.],
          [29241., 29929., 29584., ..., 30976., 29929., 28561.],
          [27225., 26896., 26244., ..., 29929., 29584., 29241.]],

         [[ 7225.,  2809.,   529., ...,  5476.,  3025.,  3249.],
          [ 8836.,  2809.,   729., ...,  5625.,  3844.,  5329.],
          [ 7225.,  3249.,  1521., ...,  4356.,  4356.,  5776.],
          ...,
          [14161., 16384., 17424., ..., 12769., 12769., 12996.],
          [13456., 14400., 14884., ..., 14161., 12544., 12996.],
          [12544., 12321., 11025., ..., 13456., 13924., 14161.]]]]],
      dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:85

analyse the exceptions in iter:88
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]],

         [[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]],

         [[1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          ...,
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.],
          [1., 1., 1., ..., 1., 1., 1.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:86

analyse the exceptions in iter:89
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:87

analyse the exceptions in iter:90
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[216., 201., 210., ..., 172., 196., 202.],
          [202., 222., 211., ..., 164., 173., 176.],
          [190., 186., 222., ..., 143., 145., 133.],
          ...,
          [138., 150., 152., ...,  10.,  13.,  32.],
          [140., 134., 171., ...,  22.,  28.,  28.],
          [123., 132., 159., ...,  33.,  42.,  30.]],

         [[195., 178., 184., ..., 149., 177., 189.],
          [179., 197., 184., ..., 139., 152., 160.],
          [165., 159., 193., ..., 115., 122., 115.],
          ...,
          [119., 131., 132., ...,   5.,   8.,  25.],
          [116., 113., 153., ...,  18.,  24.,  24.],
          [ 99., 111., 141., ...,  29.,  38.,  26.]],

         [[180., 160., 164., ..., 130., 153., 166.],
          [164., 179., 165., ..., 119., 128., 137.],
          [150., 142., 174., ...,  94.,  96.,  90.],
          ...,
          [ 95., 110., 114., ...,   3.,   5.,  21.],
          [ 95.,  92., 131., ...,  11.,  16.,  16.],
          [ 78.,  90., 119., ...,  20.,  29.,  17.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:88

analyse the exceptions in iter:91
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 60.,  67.,  70., ...,  53.,  44.,  36.],
          [ 57.,  82., 124., ...,  48.,  42.,  39.],
          [ 53.,  63., 125., ...,  46.,  40.,  35.],
          ...,
          [ 21.,  27.,  30., ...,  83.,  71.,  64.],
          [ 26.,  32.,  35., ...,  93.,  77.,  56.],
          [ 27.,  33.,  35., ...,  70.,  51.,  30.]],

         [[ 90.,  88.,  89., ...,  93.,  84.,  81.],
          [ 83.,  91., 121., ...,  84.,  78.,  79.],
          [ 79.,  69., 107., ...,  82.,  76.,  74.],
          ...,
          [ 40.,  42.,  46., ...,  36.,  38.,  60.],
          [ 47.,  46.,  49., ...,  52.,  43.,  48.],
          [ 45.,  43.,  45., ...,  57.,  50.,  48.]],

         [[134., 133., 131., ..., 148., 142., 139.],
          [123., 122., 137., ..., 146., 143., 144.],
          [125., 101., 119., ..., 138., 135., 134.],
          ...,
          [ 89.,  94.,  94., ...,  28.,  42.,  93.],
          [ 93.,  94.,  92., ...,  47.,  44.,  76.],
          [ 91.,  91.,  87., ...,  72.,  76.,  95.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:89

analyse the exceptions in iter:92
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[106., 105., 108., ..., 109., 109., 105.],
          [104., 100., 101., ..., 116., 112., 106.],
          [107., 100., 104., ..., 114., 114., 111.],
          ...,
          [138., 137., 138., ..., 121., 126., 127.],
          [134., 136., 142., ..., 140., 147., 147.],
          [141., 144., 143., ..., 144., 148., 151.]],

         [[162., 163., 162., ..., 163., 162., 161.],
          [163., 162., 161., ..., 170., 166., 163.],
          [166., 162., 164., ..., 169., 167., 168.],
          ...,
          [175., 173., 174., ..., 166., 175., 168.],
          [174., 176., 181., ..., 160., 175., 182.],
          [177., 178., 178., ..., 169., 176., 181.]],

         [[194., 195., 198., ..., 197., 194., 195.],
          [197., 197., 198., ..., 204., 198., 197.],
          [200., 198., 203., ..., 203., 200., 202.],
          ...,
          [192., 193., 196., ..., 185., 200., 195.],
          [193., 197., 205., ..., 175., 195., 204.],
          [192., 196., 197., ..., 183., 192., 196.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:90

analyse the exceptions in iter:93
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[138., 135., 135., ..., 143., 143., 143.],
          [126., 115., 109., ..., 145., 145., 145.],
          [ 87.,  78.,  75., ..., 147., 148., 147.],
          ...,
          [ 70.,  70.,  72., ...,  65.,  65.,  66.],
          [ 71.,  73.,  74., ...,  68.,  70.,  69.],
          [ 93.,  91.,  92., ...,  87.,  87.,  87.]],

         [[141., 137., 136., ..., 147., 147., 147.],
          [129., 121., 116., ..., 149., 149., 149.],
          [ 95.,  91.,  91., ..., 148., 148., 149.],
          ...,
          [ 70.,  69.,  70., ...,  65.,  65.,  65.],
          [ 72.,  71.,  71., ...,  69.,  72.,  70.],
          [ 81.,  79.,  79., ...,  83.,  83.,  84.]],

         [[148., 142., 141., ..., 146., 146., 146.],
          [136., 128., 123., ..., 148., 148., 148.],
          [106., 101.,  99., ..., 147., 147., 147.],
          ...,
          [ 15.,  17.,  19., ...,  11.,  13.,  13.],
          [ 37.,  37.,  38., ...,  35.,  37.,  33.],
          [ 65.,  63.,  63., ...,  64.,  64.,  61.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:91

analyse the exceptions in iter:94
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[227., 158., 172., ..., 252., 250., 248.],
          [237., 219., 219., ..., 249., 246., 230.],
          [233., 238., 212., ..., 212., 211., 189.],
          ...,
          [ 89.,  80.,  70., ..., 133., 134., 128.],
          [ 93.,  86.,  76., ..., 136., 140., 138.],
          [ 98.,  95.,  84., ..., 147., 153., 150.]],

         [[234., 165., 174., ..., 248., 248., 251.],
          [244., 226., 216., ..., 248., 250., 240.],
          [240., 242., 205., ..., 216., 219., 203.],
          ...,
          [ 93.,  83.,  73., ..., 123., 125., 122.],
          [ 97.,  89.,  78., ..., 125., 127., 128.],
          [101.,  97.,  86., ..., 133., 135., 136.]],

         [[241., 172., 172., ..., 252., 251., 253.],
          [248., 231., 215., ..., 251., 252., 247.],
          [242., 245., 203., ..., 218., 223., 214.],
          ...,
          [ 76.,  70.,  63., ...,  79.,  81.,  80.],
          [ 76.,  73.,  64., ...,  80.,  83.,  85.],
          [ 76.,  77.,  68., ...,  87.,  90.,  92.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:92

analyse the exceptions in iter:95
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[246., 252., 249., ..., 252., 250., 254.],
          [244., 253., 253., ..., 250., 249., 253.],
          [237., 251., 255., ..., 251., 251., 255.],
          ...,
          [ 50.,  46.,  93., ..., 246., 244., 251.],
          [ 61.,  58., 103., ..., 241., 245., 247.],
          [ 80.,  81., 120., ..., 244., 245., 243.]],

         [[254., 250., 252., ..., 250., 251., 254.],
          [254., 249., 248., ..., 251., 250., 254.],
          [255., 251., 249., ..., 252., 253., 255.],
          ...,
          [246., 239., 247., ..., 229., 215., 214.],
          [247., 239., 248., ..., 219., 222., 226.],
          [248., 243., 249., ..., 218., 226., 231.]],

         [[119., 170., 189., ...,  71.,  73.,  95.],
          [121., 173., 197., ...,  57.,  64.,  88.],
          [118., 169., 196., ...,  52.,  67.,  93.],
          ...,
          [117., 108., 100., ..., 146., 137., 137.],
          [122., 111., 113., ..., 140., 143., 146.],
          [124., 115., 124., ..., 143., 149., 150.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:93

analyse the exceptions in iter:96
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[106., 107., 108., ..., 125., 122., 100.],
          [107., 108., 108., ..., 134., 118.,  74.],
          [106., 107., 107., ..., 130., 106.,  72.],
          ...,
          [ 97.,  93.,  82., ...,  94.,  95.,  99.],
          [ 99.,  82.,  73., ...,  91.,  89.,  93.],
          [ 95.,  89.,  76., ...,  91.,  88.,  82.]],

         [[109., 110., 113., ..., 160., 153., 124.],
          [110., 111., 113., ..., 165., 144.,  92.],
          [108., 109., 112., ..., 154., 125.,  85.],
          ...,
          [ 86.,  82.,  74., ..., 101., 102., 106.],
          [ 87.,  74.,  66., ...,  98.,  97., 103.],
          [ 84.,  81.,  69., ...,  98.,  96.,  95.]],

         [[116., 117., 119., ..., 201., 191., 146.],
          [117., 118., 119., ..., 203., 171.,  92.],
          [115., 116., 118., ..., 181., 141.,  83.],
          ...,
          [ 72.,  65.,  61., ...,  59.,  59.,  62.],
          [ 72.,  61.,  55., ...,  54.,  55.,  58.],
          [ 71.,  68.,  56., ...,  54.,  53.,  52.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:94

analyse the exceptions in iter:97
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 33.,  29.,  32., ..., 157., 162., 160.],
          [ 25.,  24.,  23., ..., 174., 167., 165.],
          [ 55.,  47.,  53., ..., 129., 110., 123.],
          ...,
          [106., 103.,  85., ...,  78.,  54.,  44.],
          [ 97.,  92.,  88., ...,  96.,  81.,  71.],
          [106., 128., 142., ..., 100.,  81.,  71.]],

         [[ 44.,  44.,  45., ..., 197., 199., 194.],
          [ 40.,  40.,  36., ..., 209., 199., 198.],
          [ 56.,  56.,  61., ..., 162., 137., 153.],
          ...,
          [ 97.,  91., 100., ...,  91.,  64.,  56.],
          [ 91.,  97., 108., ..., 107.,  94.,  88.],
          [119., 141., 158., ..., 108.,  94.,  90.]],

         [[ 27.,  31.,  34., ..., 221., 216., 213.],
          [ 24.,  27.,  29., ..., 227., 217., 220.],
          [ 47.,  46.,  52., ..., 165., 133., 154.],
          ...,
          [ 60.,  58.,  53., ...,  52.,  36.,  31.],
          [ 59.,  57.,  61., ...,  59.,  47.,  41.],
          [ 91., 115., 137., ...,  63.,  47.,  40.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:95

analyse the exceptions in iter:98
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 90.,  94.,  87., ...,  46.,  53.,  57.],
          [ 96., 101.,  95., ...,  60.,  72.,  71.],
          [ 85., 113., 115., ...,  90.,  96.,  91.],
          ...,
          [102.,  61.,  69., ..., 157., 152., 169.],
          [101.,  69.,  64., ..., 131., 123., 115.],
          [ 91.,  78.,  87., ..., 135., 120., 102.]],

         [[ 77.,  81.,  81., ...,  44.,  45.,  46.],
          [ 92.,  84.,  80., ...,  51.,  60.,  56.],
          [ 87., 102., 101., ...,  84.,  87.,  79.],
          ...,
          [105.,  69.,  74., ..., 142., 137., 152.],
          [ 96.,  66.,  68., ..., 125., 117., 109.],
          [ 86.,  72.,  86., ..., 126., 116.,  96.]],

         [[ 59.,  64.,  65., ...,  35.,  38.,  38.],
          [ 68.,  63.,  66., ...,  44.,  50.,  45.],
          [ 66.,  75.,  76., ...,  57.,  60.,  55.],
          ...,
          [ 88.,  47.,  53., ...,  95.,  94.,  95.],
          [ 69.,  52.,  53., ..., 100.,  91.,  79.],
          [ 61.,  58.,  68., ...,  85.,  81.,  80.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:96

analyse the exceptions in iter:99
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 62.,  50.,  46., ..., 167., 183., 137.],
          [ 63.,  55.,  52., ..., 163., 171., 145.],
          [ 58.,  64.,  56., ..., 153., 150., 123.],
          ...,
          [172., 143., 130., ...,  94., 141., 139.],
          [183., 150.,  80., ...,  81., 135., 143.],
          [209., 182., 139., ...,  59., 130., 169.]],

         [[ 64.,  50.,  44., ..., 172., 184., 136.],
          [ 65.,  53.,  50., ..., 169., 174., 146.],
          [ 62.,  66.,  60., ..., 155., 154., 128.],
          ...,
          [135., 110.,  56., ...,  75., 108., 105.],
          [146., 118.,  64., ...,  72., 118., 125.],
          [174., 151., 109., ...,  54., 119., 156.]],

         [[ 44.,  26.,  19., ...,  69.,  76.,  72.],
          [ 37.,  26.,  27., ...,  61.,  75.,  77.],
          [ 36.,  37.,  37., ...,  62.,  64.,  57.],
          ...,
          [ 99.,  84.,  42., ...,  56.,  86.,  81.],
          [117.,  95.,  44., ...,  60.,  98., 110.],
          [144., 123.,  83., ...,  47., 111., 160.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:97

final statics:
total operators:28
tensorflow --> nums:95,distinct_bugs:2
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:93
maxpool2d:2
mindspore --> 
torch --> 

generate models:97

analyse the exceptions in iter:1
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[123.46875, 145.25   , 155.75   , ...,  98.90625,  93.40625,
            78.5625 ],
          [127.75   , 148.4375 , 159.3125 , ...,  99.25   ,  91.84375,
            74.28125],
          [123.6875 , 144.125  , 155.96875, ..., 109.25   ,  95.53125,
            74.53125],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:2

analyse the exceptions in iter:2
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[255., 253., 253., ..., 253., 253., 253.],
          [255., 255., 255., ..., 255., 255., 255.],
          [255., 254., 254., ..., 254., 254., 254.],
          ...,
          [113., 111., 105., ...,  72.,  72.,  72.],
          [111., 104.,  99., ...,  68.,  70.,  78.],
          [106.,  99.,  95., ...,  78.,  79.,  80.]],

         [[255., 253., 253., ..., 253., 253., 253.],
          [255., 255., 255., ..., 255., 255., 255.],
          [255., 254., 254., ..., 254., 254., 254.],
          ...,
          [120., 118., 112., ...,  81.,  80.,  80.],
          [118., 111., 106., ...,  75.,  76.,  84.],
          [113., 106., 102., ...,  85.,  85.,  86.]],

         [[255., 253., 253., ..., 253., 253., 253.],
          [255., 255., 255., ..., 255., 255., 255.],
          [255., 254., 254., ..., 254., 254., 254.],
          ...,
          [112., 111., 106., ...,  80.,  79.,  79.],
          [110., 104.,  98., ...,  73.,  75.,  82.],
          [105.,  98.,  94., ...,  83.,  83.,  84.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:3

analyse the exceptions in iter:3
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 28.,  37.,  38., ...,  76.,  81.,  85.],
          [ 33.,  34.,  32., ...,  95.,  96.,  85.],
          [ 39.,  40.,  57., ...,  93., 107.,  95.],
          ...,
          [ 83.,  87.,  84., ...,  99.,  90.,  81.],
          [ 88.,  90.,  93., ...,  80.,  76.,  82.],
          [ 97.,  94.,  93., ...,  54.,  63.,  72.]],

         [[ 25.,  34.,  35., ...,  67.,  72.,  76.],
          [ 28.,  30.,  27., ...,  82.,  82.,  72.],
          [ 32.,  33.,  50., ...,  76.,  89.,  77.],
          ...,
          [ 73.,  77.,  74., ...,  93.,  84.,  75.],
          [ 72.,  74.,  77., ...,  74.,  70.,  76.],
          [ 78.,  75.,  75., ...,  47.,  56.,  65.]],

         [[ 10.,  19.,  20., ...,  39.,  43.,  47.],
          [ 13.,  14.,  12., ...,  55.,  56.,  45.],
          [ 15.,  17.,  33., ...,  52.,  66.,  54.],
          ...,
          [ 52.,  56.,  52., ...,  70.,  61.,  52.],
          [ 51.,  52.,  56., ...,  53.,  49.,  55.],
          [ 56.,  53.,  53., ...,  28.,  37.,  46.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:4

analyse the exceptions in iter:5
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[159., 150., 153., ...,  91.,  74.,  76.],
          [142., 146., 155., ..., 127., 122.,  86.],
          [109.,  99., 105., ..., 137., 163.,  93.],
          ...,
          [244., 240., 241., ..., 156., 179., 200.],
          [246., 243., 243., ..., 162., 178., 192.],
          [246., 243., 244., ..., 166., 173., 182.]],

         [[102.,  91.,  95., ...,  71.,  63.,  58.],
          [ 75.,  72.,  76., ..., 105., 111.,  69.],
          [ 67.,  58.,  59., ..., 112., 132.,  72.],
          ...,
          [129., 123., 122., ...,  42.,  59.,  73.],
          [133., 128., 127., ...,  44.,  56.,  65.],
          [139., 133., 132., ...,  47.,  51.,  57.]],

         [[101.,  95.,  97., ...,  56.,  55.,  55.],
          [ 68.,  66.,  65., ...,  71.,  93.,  61.],
          [ 75.,  60.,  52., ...,  80., 105.,  71.],
          ...,
          [ 70.,  65.,  65., ...,  15.,  26.,  36.],
          [ 74.,  72.,  70., ...,  14.,  22.,  27.],
          [ 82.,  78.,  77., ...,  14.,  17.,  19.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:5

analyse the exceptions in iter:6
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[164., 105., 118., ..., 109., 108.,  91.],
          [167., 116.,  72., ..., 105., 105.,  89.],
          [140., 142., 119., ..., 104.,  84.,  78.],
          ...,
          [139., 142., 135., ...,  89.,  97., 126.],
          [163., 153., 146., ...,  85.,  98., 127.],
          [183., 176., 154., ...,  94.,  91., 122.]],

         [[206., 140., 148., ..., 147., 147., 129.],
          [213., 160., 109., ..., 142., 142., 127.],
          [191., 193., 163., ..., 139., 120., 115.],
          ...,
          [148., 155., 156., ..., 134., 148., 176.],
          [157., 164., 164., ..., 130., 148., 178.],
          [153., 182., 154., ..., 134., 133., 170.]],

         [[ 84.,  61., 101., ...,  73.,  69.,  57.],
          [ 84.,  49.,  43., ...,  79.,  72.,  57.],
          [ 65.,  66.,  79., ...,  84.,  58.,  49.],
          ...,
          [ 81.,  74.,  72., ...,  28.,  24.,  49.],
          [ 85.,  82.,  90., ...,  19.,  27.,  48.],
          [102., 116., 100., ...,  29.,  26.,  44.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:6

analyse the exceptions in iter:7
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 28.,  30.,  33., ...,  43.,  52.,  46.],
          [ 27.,  27.,  21., ..., 112., 117., 115.],
          [ 34.,  33.,  24., ..., 175., 177., 176.],
          ...,
          [142., 142., 150., ..., 134., 128., 134.],
          [140., 145., 150., ..., 131., 130., 122.],
          [134., 136., 136., ..., 106., 104., 101.]],

         [[ 35.,  34.,  44., ...,  56.,  64.,  58.],
          [ 30.,  28.,  31., ..., 136., 140., 138.],
          [ 36.,  33.,  30., ..., 208., 209., 208.],
          ...,
          [176., 176., 184., ..., 175., 168., 175.],
          [176., 180., 186., ..., 170., 170., 162.],
          [171., 171., 171., ..., 144., 142., 140.]],

         [[ 39.,  44.,  47., ...,  45.,  53.,  47.],
          [ 38.,  41.,  39., ...,  97., 101., 100.],
          [ 42.,  43.,  40., ..., 143., 144., 143.],
          ...,
          [118., 118., 127., ..., 119., 112., 119.],
          [124., 129., 134., ..., 119., 119., 111.],
          [123., 124., 124., ..., 100.,  99.,  96.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:7

analyse the exceptions in iter:8
tensorflow exception:
{'id': 3, 'name': 'maxpool2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 64, 32, 32), dtype=float32, numpy=
array([[[[[0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          ...,
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5]],

         [[0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          ...,
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5]],

         [[0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          ...,
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5]],

         ...,

         [[0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          ...,
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5]],

         [[0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          ...,
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5]],

         [[0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          ...,
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5],
          [0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5]]]]], dtype=float32)>}
Default MaxPoolingOp only supports NHWC on device type CPU [Op:MaxPool]

generate models:8

analyse the exceptions in iter:9
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[125., 110., 102., ..., 202., 200., 202.],
          [142., 146., 176., ..., 195., 198., 204.],
          [180., 143., 156., ..., 122., 139., 158.],
          ...,
          [104., 101., 101., ..., 126., 126., 125.],
          [104., 105., 109., ..., 138., 137., 137.],
          [105., 108., 115., ..., 143., 143., 144.]],

         [[125., 101.,  90., ..., 207., 205., 208.],
          [146., 144., 172., ..., 201., 205., 211.],
          [185., 146., 157., ..., 111., 128., 147.],
          ...,
          [ 82.,  80.,  81., ..., 103., 103., 101.],
          [ 81.,  84.,  88., ..., 113., 113., 112.],
          [ 83.,  87.,  94., ..., 117., 116., 116.]],

         [[116.,  91.,  83., ..., 214., 212., 214.],
          [142., 139., 170., ..., 205., 209., 215.],
          [183., 146., 157., ..., 113., 131., 150.],
          ...,
          [ 41.,  39.,  38., ...,  67.,  69.,  68.],
          [ 40.,  41.,  43., ...,  78.,  80.,  81.],
          [ 42.,  45.,  50., ...,  82.,  84.,  86.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:9

final statics:
total operators:28
tensorflow --> nums:8,distinct_bugs:2
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:7
maxpool2d:1
mindspore --> 
torch --> 

generate models:9

analyse the exceptions in iter:10
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[3.9702919, 3.988984 , 4.0253515, ..., 3.8501477, 3.713572 ,
           3.1780539],
          [3.8286414, 3.9702919, 3.988984 , ..., 3.7376697, 3.6635616,
           3.3322046],
          [3.8066626, 3.912023 , 3.8286414, ..., 3.637586 , 3.583519 ,
           3.3672957],
          ...,
          [4.26268  , 4.304065 , 4.3820267, ..., 3.9318256, 3.8286414,
           3.8918204],
          [4.317488 , 4.3694477, 4.394449 , ..., 4.1108737, 4.158883 ,
           3.871201 ],
          [4.4426513, 4.4426513, 4.454347 , ..., 4.1108737, 4.158883 ,
           3.8918204]],

         [[4.1743875, 4.1431346, 4.0943446, ..., 3.9318256, 3.8066626,
           3.3322046],
          [4.0775375, 4.1271343, 4.0775375, ..., 3.8286414, 3.7612002,
           3.465736 ],
          [4.0775375, 4.0943446, 3.9512436, ..., 3.7376697, 3.6888795,
           3.4965076],
          ...,
          [4.4188404, 4.4188404, 4.4426513, ..., 3.988984 , 3.8918204,
           3.912023 ],
          [4.406719 , 4.4426513, 4.4426513, ..., 4.1743875, 4.204693 ,
           3.912023 ],
          [4.4188404, 4.4308167, 4.454347 , ..., 4.1743875, 4.204693 ,
           3.912023 ]],

         [[3.9702919, 3.9512436, 3.912023 , ..., 3.912023 , 3.7841897,
           3.295837 ],
          [3.713572 , 3.8066626, 3.7841897, ..., 3.8066626, 3.7376697,
           3.4339871],
          [3.637586 , 3.713572 , 3.5263605, ..., 3.713572 , 3.6635616,
           3.465736 ],
          ...,
          [4.189655 , 4.189655 , 4.204693 , ..., 3.4965076, 3.5263605,
           3.713572 ],
          [4.204693 , 4.2341065, 4.204693 , ..., 3.713572 , 3.871201 ,
           3.713572 ],
          [4.26268  , 4.26268  , 4.248495 , ..., 3.6635616, 3.8286414,
           3.713572 ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:10

analyse the exceptions in iter:11
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          ...,
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan]],

         [[nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          ...,
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan]],

         [[nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          ...,
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan],
          [nan, nan, nan, ..., nan, nan, nan]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:11

analyse the exceptions in iter:12
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[164., 162., 162., ..., 157., 153., 153.],
          [168., 166., 166., ..., 164., 160., 158.],
          [172., 170., 171., ..., 168., 165., 163.],
          ...,
          [123., 117., 112., ..., 117.,  95., 120.],
          [120., 116., 112., ..., 126., 120., 120.],
          [121., 120., 116., ..., 124., 124., 120.]],

         [[215., 212., 212., ..., 210., 208., 203.],
          [218., 215., 215., ..., 212., 209., 205.],
          [220., 217., 218., ..., 212., 208., 207.],
          ...,
          [160., 154., 149., ..., 136., 115., 149.],
          [156., 151., 147., ..., 149., 144., 152.],
          [154., 152., 148., ..., 152., 154., 154.]],

         [[244., 240., 240., ..., 237., 235., 234.],
          [245., 242., 242., ..., 238., 236., 235.],
          [246., 243., 244., ..., 238., 235., 236.],
          ...,
          [105., 102.,  99., ..., 100.,  79., 100.],
          [100.,  99.,  96., ..., 110., 103., 101.],
          [ 96.,  99.,  97., ..., 108., 107., 100.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:12

analyse the exceptions in iter:13
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 17.,  17.,  17., ...,  23.,  22.,  19.],
          [ 18.,  18.,  18., ...,  24.,  23.,  22.],
          [ 18.,  18.,  19., ...,  24.,  23.,  23.],
          ...,
          [217., 226., 210., ...,  33.,  32.,  33.],
          [219., 222., 214., ...,  35.,  34.,  33.],
          [210., 221., 215., ...,  36.,  34.,  32.]],

         [[  3.,   3.,   2., ...,  13.,  12.,   9.],
          [  4.,   4.,   4., ...,  14.,  13.,  12.],
          [  4.,   4.,   5., ...,  14.,  13.,  13.],
          ...,
          [214., 219., 201., ...,  24.,  23.,  24.],
          [215., 215., 208., ...,  26.,  25.,  24.],
          [208., 216., 212., ...,  27.,  25.,  23.]],

         [[  2.,   2.,   1., ...,  11.,  10.,   7.],
          [  3.,   3.,   3., ...,  12.,  11.,  10.],
          [  3.,   3.,   4., ...,  12.,  11.,  11.],
          ...,
          [223., 227., 213., ...,  17.,  16.,  17.],
          [230., 229., 225., ...,  19.,  18.,  17.],
          [223., 229., 227., ...,  20.,  18.,  16.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:13

analyse the exceptions in iter:14
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[100.,  98.,  99., ..., 165., 163., 165.],
          [101., 100., 100., ..., 164., 163., 159.],
          [105., 104., 104., ..., 156., 136., 114.],
          ...,
          [166., 166., 168., ..., 137., 137., 147.],
          [161., 162., 167., ..., 131., 138., 137.],
          [164., 162., 164., ..., 153., 157., 156.]],

         [[146., 144., 144., ..., 165., 163., 165.],
          [145., 143., 143., ..., 161., 162., 161.],
          [147., 145., 145., ..., 150., 133., 117.],
          ...,
          [156., 156., 157., ..., 127., 126., 136.],
          [152., 153., 158., ..., 125., 133., 132.],
          [158., 156., 158., ..., 146., 151., 150.]],

         [[192., 189., 189., ..., 165., 163., 165.],
          [188., 186., 186., ..., 159., 159., 157.],
          [189., 186., 187., ..., 147., 129., 111.],
          ...,
          [150., 151., 152., ..., 112., 114., 127.],
          [149., 150., 155., ..., 117., 124., 120.],
          [155., 153., 155., ..., 139., 141., 137.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:14

analyse the exceptions in iter:15
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[100., 100., 101., ...,  95.,  94.,  95.],
          [103., 103., 104., ...,  97.,  97.,  97.],
          [107., 106., 106., ..., 100., 100., 101.],
          ...,
          [165., 159., 167., ...,  75.,  75.,  72.],
          [158., 173., 182., ...,  76.,  75.,  77.],
          [161., 162., 160., ...,  98., 129., 162.]],

         [[168., 168., 167., ..., 165., 165., 167.],
          [170., 168., 168., ..., 167., 166., 168.],
          [174., 172., 173., ..., 170., 170., 172.],
          ...,
          [178., 170., 177., ..., 117., 120., 120.],
          [174., 186., 193., ..., 119., 119., 121.],
          [176., 176., 171., ..., 137., 160., 185.]],

         [[231., 229., 230., ..., 231., 228., 229.],
          [230., 228., 226., ..., 229., 227., 229.],
          [233., 230., 229., ..., 230., 230., 232.],
          ...,
          [177., 167., 170., ..., 154., 157., 158.],
          [172., 182., 188., ..., 154., 153., 154.],
          [174., 172., 169., ..., 167., 183., 202.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:15

analyse the exceptions in iter:17
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[110., 142., 151., ...,  39.,  40.,  38.],
          [109., 141., 152., ...,  36.,  40.,  36.],
          [105., 142., 151., ...,  39.,  44.,  39.],
          ...,
          [ 62.,  39.,  60., ...,  42.,  46.,  47.],
          [ 62.,  52.,  58., ...,  43.,  47.,  49.],
          [ 55.,  60.,  56., ...,  45.,  47.,  51.]],

         [[104., 135., 146., ...,  39.,  40.,  38.],
          [103., 133., 147., ...,  36.,  40.,  36.],
          [ 98., 133., 145., ...,  39.,  44.,  39.],
          ...,
          [ 59.,  38.,  64., ...,  44.,  44.,  44.],
          [ 57.,  51.,  61., ...,  46.,  45.,  46.],
          [ 51.,  60.,  60., ...,  48.,  46.,  48.]],

         [[ 97., 118., 120., ...,  39.,  40.,  38.],
          [ 95., 115., 119., ...,  37.,  40.,  36.],
          [ 90., 114., 117., ...,  41.,  45.,  40.],
          ...,
          [ 60.,  49.,  81., ...,  56.,  55.,  55.],
          [ 56.,  61.,  78., ...,  58.,  58.,  60.],
          [ 50.,  71.,  78., ...,  60.,  60.,  62.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:16

analyse the exceptions in iter:18
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[38809., 39204., 40401., ..., 47089., 47089., 47089.],
          [37249., 38025., 39204., ..., 46656., 46225., 45796.],
          [36864., 37636., 38809., ..., 47089., 46656., 46225.],
          ...,
          [24336., 24336., 24336., ...,  9604., 13689., 16384.],
          [24964., 25281., 23716., ..., 17161., 13689.,  8281.],
          [23104., 22801., 21025., ...,  8281.,  8100.,  6241.]],

         [[34969., 35344., 36481., ..., 40401., 40401., 40401.],
          [33489., 34225., 35344., ..., 40000., 40000., 39204.],
          [33124., 33856., 34969., ..., 40401., 40000., 39601.],
          ...,
          [21316., 21316., 21316., ...,  6241.,  9216., 11025.],
          [21904., 22201., 20736., ..., 12100.,  9801.,  5625.],
          [20164., 19881., 18225., ...,  5184.,  5329.,  4225.]],

         [[35344., 35721., 36864., ..., 41616., 41616., 41616.],
          [33856., 34596., 35721., ..., 41209., 40804., 40401.],
          [33489., 34225., 35344., ..., 41616., 41209., 40804.],
          ...,
          [21609., 21609., 21609., ...,  4225.,  6724.,  7921.],
          [22201., 22500., 21025., ...,  9216.,  7396.,  4096.],
          [20449., 20164., 18496., ...,  3721.,  3969.,  3249.]]]]],
      dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:17

analyse the exceptions in iter:19
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 23.,  47.,  52., ..., 131., 182., 215.],
          [ 32.,  51.,  56., ..., 149., 204., 209.],
          [ 41.,  59.,  60., ..., 138., 196., 203.],
          ...,
          [167., 177., 182., ..., 199., 176., 145.],
          [166., 165., 165., ..., 183., 183., 189.],
          [175., 173., 173., ..., 190., 188., 192.]],

         [[ 27.,  49.,  46., ..., 130., 180., 212.],
          [ 31.,  49.,  49., ..., 148., 206., 217.],
          [ 37.,  57.,  59., ..., 138., 200., 217.],
          ...,
          [167., 177., 182., ..., 192., 171., 140.],
          [166., 165., 165., ..., 181., 182., 187.],
          [175., 173., 173., ..., 187., 186., 189.]],

         [[ 22.,  41.,  30., ..., 117., 174., 230.],
          [ 24.,  38.,  34., ..., 133., 197., 232.],
          [ 25.,  47.,  51., ..., 125., 194., 233.],
          ...,
          [168., 177., 182., ..., 192., 171., 140.],
          [166., 165., 165., ..., 181., 182., 188.],
          [175., 173., 173., ..., 184., 183., 186.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:18

analyse the exceptions in iter:20
tensorflow exception:
{'id': 3, 'name': 'maxpool2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 64, 32, 32), dtype=float32, numpy=
array([[[[[137.75   , 150.46875, 138.1875 , ..., 187.8125 , 188.78125,
           183.875  ],
          [140.03125, 151.34375, 139.46875, ..., 193.5    , 194.28125,
           188.40625],
          [140.03125, 151.5    , 140.28125, ..., 197.875  , 199.1875 ,
           194.84375],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         ...,

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]],

         [[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          ...,
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ],
          [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,
             0.     ]]]]], dtype=float32)>}
Default MaxPoolingOp only supports NHWC on device type CPU [Op:MaxPool]

generate models:19

analyse the exceptions in iter:21
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[252., 249., 250., ..., 251., 251., 251.],
          [255., 252., 253., ..., 255., 255., 254.],
          [253., 250., 250., ..., 254., 254., 252.],
          ...,
          [254., 252., 253., ..., 252., 253., 252.],
          [250., 252., 255., ..., 254., 255., 254.],
          [236., 249., 250., ..., 250., 250., 251.]],

         [[  8.,  15.,   8., ...,   1.,   0.,   1.],
          [  7.,  15.,  13., ...,   1.,   0.,   4.],
          [  6.,  16.,  24., ...,   1.,   0.,   9.],
          ...,
          [ 66.,  62.,  64., ...,  70.,  69.,  70.],
          [ 49.,  53.,  59., ...,  70.,  68.,  59.],
          [ 37.,  48.,  42., ...,  78.,  74.,  58.]],

         [[ 42.,  42.,  39., ...,  11.,  15.,  30.],
          [ 43.,  44.,  42., ...,  11.,  18.,  33.],
          [ 42.,  42.,  43., ...,  10.,  20.,  37.],
          ...,
          [ 94.,  92.,  93., ..., 101., 103., 104.],
          [ 81.,  82.,  86., ..., 103., 100.,  89.],
          [ 68.,  76.,  73., ..., 113., 109.,  88.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:20

analyse the exceptions in iter:22
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[8369449., 5788836., 5929225., ..., 2689600., 3182656.,
           4227136.],
          [5447556., 3736489., 4129024., ..., 2301289., 2663424.,
           3496900.],
          [3356224., 2082249., 2217121., ..., 1058841., 1272384.,
           1865956.],
          ...,
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.]],

         [[      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          ...,
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.]],

         [[      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          ...,
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.],
          [      0.,       0.,       0., ...,       0.,       0.,
                 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:21

analyse the exceptions in iter:23
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[126., 102., 117., ...,  96., 113., 107.],
          [135., 113., 121., ..., 115., 114., 115.],
          [126., 124., 128., ..., 134., 115., 114.],
          ...,
          [141., 155., 134., ..., 149., 147., 122.],
          [153., 164., 146., ..., 163., 189., 184.],
          [125., 129., 124., ..., 133., 180., 168.]],

         [[100.,  76.,  93., ...,  74.,  90.,  84.],
          [109.,  86.,  94., ...,  89.,  89.,  90.],
          [102.,  97., 101., ..., 109.,  90.,  90.],
          ...,
          [111., 123., 102., ..., 140., 133., 106.],
          [122., 132., 119., ..., 156., 178., 174.],
          [100., 106., 102., ..., 127., 173., 162.]],

         [[ 71.,  49.,  60., ...,  42.,  58.,  52.],
          [ 73.,  52.,  56., ...,  58.,  55.,  53.],
          [ 61.,  59.,  60., ...,  77.,  55.,  50.],
          ...,
          [ 85.,  87.,  65., ..., 118., 116.,  94.],
          [ 83.,  89.,  81., ..., 147., 174., 173.],
          [ 56.,  64.,  68., ..., 124., 174., 164.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:22

analyse the exceptions in iter:1
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[5.0369525, 4.836282 , 4.65396  , ..., 4.5108595, 4.465908 ,
           4.3694477],
          [4.9416423, 4.9767337, 4.828314 , ..., 4.564348 , 4.3438053,
           4.26268  ],
          [4.9416423, 4.934474 , 4.744932 , ..., 4.3694477, 4.2195077,
           4.204693 ],
          ...,
          [5.164786 , 5.049856 , 5.0369525, ..., 3.7376697, 4.1108737,
           4.5325994],
          [5.1059456, 5.049856 , 5.0689044, ..., 4.634729 , 4.8121843,
           4.8751974],
          [5.09375  , 5.062595 , 5.09375  , ..., 4.962845 , 4.962845 ,
           4.962845 ]],

         [[5.17615  , 4.919981 , 4.644391 , ..., 4.553877 , 4.4998097,
           4.394449 ],
          [5.075174 , 5.030438 , 4.828314 , ..., 4.59512  , 4.3820267,
           4.2904596],
          [5.043425 , 4.983607 , 4.744932 , ..., 4.406719 , 4.248495 ,
           4.2341065],
          ...,
          [5.117994 , 5.0369525, 5.075174 , ..., 3.5263605, 3.9702919,
           4.4188404],
          [5.0369525, 5.0238805, 5.081404 , ..., 4.5325994, 4.7361984,
           4.7957907],
          [4.9972124, 4.9972124, 5.049856 , ..., 4.890349 , 4.89784  ,
           4.890349 ]],

         [[5.2311087, 4.912655 , 4.553877 , ..., 4.26268  , 4.26268  ,
           4.248495 ],
          [5.1298985, 5.0369525, 4.7706847, ..., 4.356709 , 4.1271343,
           4.1108737],
          [5.0998664, 5.0039463, 4.7184987, ..., 4.158883 , 4.0073333,
           4.0073333],
          ...,
          [5.1119876, 5.075174 , 5.1357985, ..., 3.583519 , 4.0430512,
           4.5108595],
          [4.8520303, 4.8675346, 4.955827 , ..., 4.564348 , 4.787492 ,
           4.8751974],
          [4.787492 , 4.804021 , 4.890349 , ..., 4.934474 , 4.955827 ,
           4.9698133]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:2

analyse the exceptions in iter:2
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[255., 253., 253., ..., 253., 253., 253.],
          [255., 255., 255., ..., 255., 255., 255.],
          [255., 254., 254., ..., 254., 254., 254.],
          ...,
          [113., 111., 105., ...,  72.,  72.,  72.],
          [111., 104.,  99., ...,  68.,  70.,  78.],
          [106.,  99.,  95., ...,  78.,  79.,  80.]],

         [[255., 253., 253., ..., 253., 253., 253.],
          [255., 255., 255., ..., 255., 255., 255.],
          [255., 254., 254., ..., 254., 254., 254.],
          ...,
          [120., 118., 112., ...,  81.,  80.,  80.],
          [118., 111., 106., ...,  75.,  76.,  84.],
          [113., 106., 102., ...,  85.,  85.,  86.]],

         [[255., 253., 253., ..., 253., 253., 253.],
          [255., 255., 255., ..., 255., 255., 255.],
          [255., 254., 254., ..., 254., 254., 254.],
          ...,
          [112., 111., 106., ...,  80.,  79.,  79.],
          [110., 104.,  98., ...,  73.,  75.,  82.],
          [105.,  98.,  94., ...,  83.,  83.,  84.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:3

analyse the exceptions in iter:3
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 31.332205,  40.610916,  41.637585, ...,  80.330734,
            85.39445 ,  89.44265 ],
          [ 36.496506,  37.52636 ,  35.465736, ...,  99.55388 ,
           100.56435 ,  89.44265 ],
          [ 42.663563,  43.68888 ,  61.043053, ...,  97.5326  ,
           111.67283 ,  99.55388 ],
          ...,
          [ 87.41884 ,  91.46591 ,  88.43082 , ..., 103.59512 ,
            94.49981 ,  85.39445 ],
          [ 92.47734 ,  94.49981 ,  97.5326  , ...,  84.38203 ,
            80.330734,  86.40672 ],
          [101.57471 ,  98.5433  ,  97.5326  , ...,  57.988983,
            67.143135,  76.276665]],

         [[ 28.218876,  37.52636 ,  38.555347, ...,  71.2047  ,
            76.276665,  80.330734],
          [ 31.332205,  33.4012  ,  30.295837, ...,  86.40672 ,
            86.40672 ,  76.276665],
          [ 35.465736,  36.496506,  53.91202 , ...,  80.330734,
            93.48864 ,  81.3438  ],
          ...,
          [ 77.29046 ,  81.3438  ,  78.30406 , ...,  97.5326  ,
            88.43082 ,  79.31749 ],
          [ 76.276665,  78.30406 ,  81.3438  , ...,  78.30406 ,
            74.2485  ,  80.330734],
          [ 82.35671 ,  79.31749 ,  79.31749 , ...,  50.850147,
            60.025352,  69.174385]],

         [[ 12.302586,  21.944439,  22.995731, ...,  42.663563,
            46.7612  ,  50.850147],
          [ 15.564949,  16.639057,  14.484907, ...,  59.00733 ,
            60.025352,  48.806664],
          [ 17.70805 ,  19.833214,  36.496506, ...,  55.951244,
            70.18965 ,  57.988983],
          ...,
          [ 55.951244,  60.025352,  55.951244, ...,  74.2485  ,
            65.11087 ,  55.951244],
          [ 54.931824,  55.951244,  60.025352, ...,  56.97029 ,
            52.89182 ,  59.00733 ],
          [ 60.025352,  56.97029 ,  56.97029 , ...,  31.332205,
            40.610916,  49.82864 ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:4

analyse the exceptions in iter:4
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[170., 168., 177., ..., 162., 158., 157.],
          [168., 172., 171., ..., 159., 156., 154.],
          [154., 149., 129., ..., 161., 157., 154.],
          ...,
          [ 74.,  76.,  78., ...,  71.,  68.,  61.],
          [ 68.,  69.,  72., ...,  76.,  71.,  71.],
          [ 67.,  68.,  69., ...,  75.,  71.,  73.]],

         [[180., 178., 185., ..., 179., 178., 177.],
          [181., 185., 183., ..., 177., 176., 174.],
          [170., 165., 144., ..., 178., 177., 174.],
          ...,
          [ 84.,  85.,  85., ...,  75.,  72.,  65.],
          [ 76.,  77.,  79., ...,  80.,  75.,  75.],
          [ 75.,  76.,  75., ...,  79.,  75.,  77.]],

         [[198., 196., 203., ..., 215., 214., 212.],
          [198., 201., 200., ..., 212., 211., 209.],
          [186., 181., 162., ..., 214., 212., 209.],
          ...,
          [ 80.,  81.,  82., ...,  78.,  75.,  68.],
          [ 77.,  78.,  78., ...,  83.,  78.,  78.],
          [ 78.,  79.,  76., ...,  82.,  78.,  80.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:5

analyse the exceptions in iter:5
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[159., 142., 109., ..., 244., 246., 246.],
          [150., 146.,  99., ..., 240., 243., 243.],
          [153., 155., 105., ..., 241., 243., 244.],
          ...,
          [ 91., 127., 137., ..., 156., 162., 166.],
          [ 74., 122., 163., ..., 179., 178., 173.],
          [ 76.,  86.,  93., ..., 200., 192., 182.]],

         [[102.,  75.,  67., ..., 129., 133., 139.],
          [ 91.,  72.,  58., ..., 123., 128., 133.],
          [ 95.,  76.,  59., ..., 122., 127., 132.],
          ...,
          [ 71., 105., 112., ...,  42.,  44.,  47.],
          [ 63., 111., 132., ...,  59.,  56.,  51.],
          [ 58.,  69.,  72., ...,  73.,  65.,  57.]],

         [[101.,  68.,  75., ...,  70.,  74.,  82.],
          [ 95.,  66.,  60., ...,  65.,  72.,  78.],
          [ 97.,  65.,  52., ...,  65.,  70.,  77.],
          ...,
          [ 56.,  71.,  80., ...,  15.,  14.,  14.],
          [ 55.,  93., 105., ...,  26.,  22.,  17.],
          [ 55.,  61.,  71., ...,  36.,  27.,  19.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:6

analyse the exceptions in iter:6
tensorflow exception:
{'id': 3, 'name': 'maxpool2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 64, 16, 16), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         ...,

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
Default MaxPoolingOp only supports NHWC on device type CPU [Op:MaxPool]

generate models:7

analyse the exceptions in iter:7
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:8

analyse the exceptions in iter:8
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          ...,
          [          inf,           inf,           inf, ...,
           5.3204825e+11, 3.9313342e+12, 1.4462571e+12],
          [          inf,           inf,           inf, ...,
           1.0686475e+13, 1.0686475e+13, 1.0686475e+13],
          [          inf,           inf,           inf, ...,
           2.9048850e+13, 7.8962965e+13, 7.8962965e+13]],

         [[          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          ...,
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf]],

         [[          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          ...,
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf],
          [          inf,           inf,           inf, ...,
                     inf,           inf,           inf]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:9

analyse the exceptions in iter:9
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[4.828314 , 4.7004805, 4.624973 , ..., 5.3082676, 5.2983174,
           5.3082676],
          [4.955827 , 4.983607 , 5.170484 , ..., 5.273    , 5.288267 ,
           5.31812  ],
          [5.192957 , 4.962845 , 5.049856 , ..., 4.804021 , 4.934474 ,
           5.062595 ],
          ...,
          [4.644391 , 4.6151204, 4.6151204, ..., 4.836282 , 4.836282 ,
           4.828314 ],
          [4.644391 , 4.65396  , 4.691348 , ..., 4.9272537, 4.919981 ,
           4.919981 ],
          [4.65396  , 4.6821313, 4.744932 , ..., 4.962845 , 4.962845 ,
           4.9698133]],

         [[4.828314 , 4.6151204, 4.4998097, ..., 5.332719 , 5.32301  ,
           5.3375382],
          [4.983607 , 4.9698133, 5.1474943, ..., 5.303305 , 5.32301  ,
           5.351858 ],
          [5.220356 , 4.983607 , 5.056246 , ..., 4.7095304, 4.8520303,
           4.9904327],
          ...,
          [4.406719 , 4.3820267, 4.394449 , ..., 4.634729 , 4.634729 ,
           4.6151204],
          [4.394449 , 4.4308167, 4.477337 , ..., 4.727388 , 4.727388 ,
           4.7184987],
          [4.4188404, 4.465908 , 4.543295 , ..., 4.762174 , 4.75359  ,
           4.75359  ]],

         [[4.75359  , 4.5108595, 4.4188404, ..., 5.365976 , 5.3565865,
           5.365976 ],
          [4.955827 , 4.934474 , 5.1357985, ..., 5.32301  , 5.3423343,
           5.370638 ],
          [5.209486 , 4.983607 , 5.056246 , ..., 4.727388 , 4.8751974,
           5.0106354],
          ...,
          [3.713572 , 3.6635616, 3.637586 , ..., 4.204693 , 4.2341065,
           4.2195077],
          [3.6888795, 3.713572 , 3.7612002, ..., 4.356709 , 4.3820267,
           4.394449 ],
          [3.7376697, 3.8066626, 3.912023 , ..., 4.406719 , 4.4308167,
           4.454347 ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:10

final statics:
total operators:28
tensorflow --> nums:9,distinct_bugs:2
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:8
maxpool2d:1
mindspore --> 
torch --> 

generate models:10

analyse the exceptions in iter:10
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[53., 54., 56., ..., 47., 41., 24.],
          [46., 53., 54., ..., 42., 39., 28.],
          [45., 50., 46., ..., 38., 36., 29.],
          ...,
          [71., 74., 80., ..., 51., 46., 49.],
          [75., 79., 81., ..., 61., 64., 48.],
          [85., 85., 86., ..., 61., 64., 49.]],

         [[65., 63., 60., ..., 51., 45., 28.],
          [59., 62., 59., ..., 46., 43., 32.],
          [59., 60., 52., ..., 42., 40., 33.],
          ...,
          [83., 83., 85., ..., 54., 49., 50.],
          [82., 85., 85., ..., 65., 67., 50.],
          [83., 84., 86., ..., 65., 67., 50.]],

         [[53., 52., 50., ..., 50., 44., 27.],
          [41., 45., 44., ..., 45., 42., 31.],
          [38., 41., 34., ..., 41., 39., 32.],
          ...,
          [66., 66., 67., ..., 33., 34., 41.],
          [67., 69., 67., ..., 41., 48., 41.],
          [71., 71., 70., ..., 39., 46., 41.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:11

analyse the exceptions in iter:11
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[142., 172., 176., ..., 216., 198., 205.],
          [191., 196., 174., ..., 229., 222., 217.],
          [220., 217., 192., ..., 224., 225., 218.],
          ...,
          [197., 196., 201., ..., 200., 199., 205.],
          [196., 191., 193., ..., 198., 199., 201.],
          [186., 182., 174., ..., 158., 158., 163.]],

         [[149., 172., 168., ..., 212., 194., 202.],
          [190., 192., 166., ..., 222., 215., 210.],
          [212., 209., 183., ..., 214., 214., 208.],
          ...,
          [152., 152., 156., ..., 165., 165., 164.],
          [157., 152., 154., ..., 164., 165., 161.],
          [150., 147., 139., ..., 124., 125., 125.]],

         [[152., 167., 154., ..., 211., 193., 200.],
          [192., 190., 159., ..., 220., 213., 207.],
          [212., 208., 182., ..., 209., 210., 203.],
          ...,
          [136., 135., 140., ..., 146., 146., 150.],
          [139., 135., 136., ..., 144., 145., 146.],
          [133., 130., 121., ..., 105., 106., 111.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:12

analyse the exceptions in iter:12
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[164., 162., 162., ..., 157., 153., 153.],
          [168., 166., 166., ..., 164., 160., 158.],
          [172., 170., 171., ..., 168., 165., 163.],
          ...,
          [123., 117., 112., ..., 117.,  95., 120.],
          [120., 116., 112., ..., 126., 120., 120.],
          [121., 120., 116., ..., 124., 124., 120.]],

         [[215., 212., 212., ..., 210., 208., 203.],
          [218., 215., 215., ..., 212., 209., 205.],
          [220., 217., 218., ..., 212., 208., 207.],
          ...,
          [160., 154., 149., ..., 136., 115., 149.],
          [156., 151., 147., ..., 149., 144., 152.],
          [154., 152., 148., ..., 152., 154., 154.]],

         [[244., 240., 240., ..., 237., 235., 234.],
          [245., 242., 242., ..., 238., 236., 235.],
          [246., 243., 244., ..., 238., 235., 236.],
          ...,
          [105., 102.,  99., ..., 100.,  79., 100.],
          [100.,  99.,  96., ..., 110., 103., 101.],
          [ 96.,  99.,  97., ..., 108., 107., 100.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:13

analyse the exceptions in iter:13
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1.5120405, 1.5120405, 1.5120405, ..., 1.5273454, 1.5253731,
           1.5182133],
          [1.5152978, 1.5152978, 1.5152978, ..., 1.5291537, 1.5273454,
           1.5253731],
          [1.5152978, 1.5152978, 1.5182133, ..., 1.5291537, 1.5273454,
           1.5273454],
          ...,
          [1.5661881, 1.5663716, 1.5660344, ..., 1.5405025, 1.5395565,
           1.5405025],
          [1.5662302, 1.5662918, 1.5661235, ..., 1.5422326, 1.541393 ,
           1.5405025],
          [1.5660344, 1.5662714, 1.5661452, ..., 1.5430257, 1.541393 ,
           1.5395565]],

         [[1.2490457, 1.2490457, 1.1071488, ..., 1.4940244, 1.487655 ,
           1.4601392],
          [1.3258177, 1.3258177, 1.3258177, ..., 1.4994888, 1.4940244,
           1.487655 ],
          [1.3258177, 1.3258177, 1.3734008, ..., 1.4994888, 1.4940244,
           1.4940244],
          ...,
          [1.5661235, 1.5662302, 1.5658213, ..., 1.5291537, 1.5273454,
           1.5291537],
          [1.5661452, 1.5661452, 1.5659887, ..., 1.5323538, 1.5308176,
           1.5291537],
          [1.5659887, 1.5661668, 1.5660794, ..., 1.5337762, 1.5308176,
           1.5273454]],

         [[1.1071488, 1.1071488, 0.7853982, ..., 1.4801364, 1.4711276,
           1.4288993],
          [1.2490457, 1.2490457, 1.2490457, ..., 1.487655 , 1.4801364,
           1.4711276],
          [1.2490457, 1.2490457, 1.3258177, ..., 1.487655 , 1.4801364,
           1.4801364],
          ...,
          [1.5663121, 1.5663911, 1.5661016, ..., 1.5120405, 1.5083776,
           1.5120405],
          [1.5664486, 1.5664295, 1.5663519, ..., 1.5182133, 1.5152978,
           1.5120405],
          [1.5663121, 1.5664295, 1.5663911, ..., 1.5208379, 1.5152978,
           1.5083776]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:14

analyse the exceptions in iter:14
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[100.,  98.,  99., ..., 165., 163., 165.],
          [101., 100., 100., ..., 164., 163., 159.],
          [105., 104., 104., ..., 156., 136., 114.],
          ...,
          [166., 166., 168., ..., 137., 137., 147.],
          [161., 162., 167., ..., 131., 138., 137.],
          [164., 162., 164., ..., 153., 157., 156.]],

         [[146., 144., 144., ..., 165., 163., 165.],
          [145., 143., 143., ..., 161., 162., 161.],
          [147., 145., 145., ..., 150., 133., 117.],
          ...,
          [156., 156., 157., ..., 127., 126., 136.],
          [152., 153., 158., ..., 125., 133., 132.],
          [158., 156., 158., ..., 146., 151., 150.]],

         [[192., 189., 189., ..., 165., 163., 165.],
          [188., 186., 186., ..., 159., 159., 157.],
          [189., 186., 187., ..., 147., 129., 111.],
          ...,
          [150., 151., 152., ..., 112., 114., 127.],
          [149., 150., 155., ..., 117., 124., 120.],
          [155., 153., 155., ..., 139., 141., 137.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:15

analyse the exceptions in iter:15
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[100., 100., 101., ...,  95.,  94.,  95.],
          [103., 103., 104., ...,  97.,  97.,  97.],
          [107., 106., 106., ..., 100., 100., 101.],
          ...,
          [165., 159., 167., ...,  75.,  75.,  72.],
          [158., 173., 182., ...,  76.,  75.,  77.],
          [161., 162., 160., ...,  98., 129., 162.]],

         [[168., 168., 167., ..., 165., 165., 167.],
          [170., 168., 168., ..., 167., 166., 168.],
          [174., 172., 173., ..., 170., 170., 172.],
          ...,
          [178., 170., 177., ..., 117., 120., 120.],
          [174., 186., 193., ..., 119., 119., 121.],
          [176., 176., 171., ..., 137., 160., 185.]],

         [[231., 229., 230., ..., 231., 228., 229.],
          [230., 228., 226., ..., 229., 227., 229.],
          [233., 230., 229., ..., 230., 230., 232.],
          ...,
          [177., 167., 170., ..., 154., 157., 158.],
          [172., 182., 188., ..., 154., 153., 154.],
          [174., 172., 169., ..., 167., 183., 202.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:16

analyse the exceptions in iter:16
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[235., 235., 237., ..., 233., 227., 223.],
          [231., 232., 234., ..., 231., 225., 221.],
          [231., 233., 237., ..., 232., 225., 221.],
          ...,
          [125., 126., 143., ...,  66.,  65.,  68.],
          [127., 141., 149., ...,  63.,  67.,  62.],
          [137., 142., 149., ...,  62.,  61.,  51.]],

         [[236., 236., 238., ..., 234., 230., 228.],
          [232., 233., 235., ..., 232., 228., 225.],
          [232., 234., 238., ..., 233., 228., 226.],
          ...,
          [124., 125., 142., ...,  89.,  86.,  83.],
          [125., 140., 148., ...,  89.,  88.,  79.],
          [135., 140., 147., ...,  90.,  84.,  68.]],

         [[238., 238., 240., ..., 236., 233., 232.],
          [234., 235., 237., ..., 234., 232., 233.],
          [234., 236., 240., ..., 235., 232., 233.],
          ...,
          [122., 123., 140., ...,  23.,  23.,  37.],
          [125., 139., 148., ...,  24.,  26.,  29.],
          [136., 141., 148., ...,  27.,  23.,  14.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:17

analyse the exceptions in iter:17
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[-0.9990208 , -0.8090099 ,  0.9793546 , ...,  0.26664293,
           -0.66693807,  0.95507365],
          [-0.5770022 , -0.93172234,  0.35904428, ..., -0.12796369,
           -0.66693807, -0.12796369],
          [-0.24095906, -0.8090099 ,  0.9793546 , ...,  0.26664293,
            0.9998433 ,  0.26664293],
          ...,
          [ 0.67350715,  0.26664293, -0.95241296, ..., -0.3999853 ,
           -0.43217793, -0.9923355 ],
          [ 0.67350715, -0.16299078,  0.11918014, ...,  0.5551133 ,
           -0.9923355 ,  0.30059254],
          [ 0.02212675, -0.95241296,  0.8532201 , ...,  0.525322  ,
           -0.9923355 ,  0.74215424]],

         [[-0.946868  , -0.99608785,  0.08395943, ...,  0.26664293,
           -0.66693807,  0.95507365],
          [-0.78223085,  0.49487224, -0.7931364 , ..., -0.12796369,
           -0.66693807, -0.12796369],
          [-0.81928825,  0.49487224,  0.8838634 , ...,  0.26664293,
            0.9998433 ,  0.26664293],
          ...,
          [-0.7710802 ,  0.95507365,  0.39185724, ...,  0.9998433 ,
            0.9998433 ,  0.9998433 ],
          [ 0.8998668 ,  0.74215424, -0.25810164, ..., -0.43217793,
            0.525322  , -0.43217793],
          [ 0.74215424, -0.95241296, -0.95241296, ..., -0.64014435,
           -0.43217793, -0.64014435]],

         [[-0.92514753,  0.18912943,  0.81418097, ...,  0.26664293,
           -0.66693807,  0.95507365],
          [ 0.7301736 , -0.3258098 ,  0.9284713 , ...,  0.76541406,
           -0.66693807, -0.12796369],
          [-0.4480736 ,  0.61952066, -0.7240972 , ..., -0.98733926,
            0.525322  , -0.66693807],
          ...,
          [-0.95241296,  0.30059254,  0.77668595, ...,  0.8532201 ,
            0.02212675,  0.02212675],
          [ 0.8532201 , -0.25810164, -0.8578031 , ...,  0.11918014,
            0.11918014, -0.95241296],
          [ 0.96496606, -0.30902272, -0.8578031 , ..., -0.95241296,
           -0.95241296,  0.67350715]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:18

analyse the exceptions in iter:18
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[197., 198., 201., ..., 217., 217., 217.],
          [193., 195., 198., ..., 216., 215., 214.],
          [192., 194., 197., ..., 217., 216., 215.],
          ...,
          [156., 156., 156., ...,  98., 117., 128.],
          [158., 159., 154., ..., 131., 117.,  91.],
          [152., 151., 145., ...,  91.,  90.,  79.]],

         [[187., 188., 191., ..., 201., 201., 201.],
          [183., 185., 188., ..., 200., 200., 198.],
          [182., 184., 187., ..., 201., 200., 199.],
          ...,
          [146., 146., 146., ...,  79.,  96., 105.],
          [148., 149., 144., ..., 110.,  99.,  75.],
          [142., 141., 135., ...,  72.,  73.,  65.]],

         [[188., 189., 192., ..., 204., 204., 204.],
          [184., 186., 189., ..., 203., 202., 201.],
          [183., 185., 188., ..., 204., 203., 202.],
          ...,
          [147., 147., 147., ...,  65.,  82.,  89.],
          [149., 150., 145., ...,  96.,  86.,  64.],
          [143., 142., 136., ...,  61.,  63.,  57.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:19

analyse the exceptions in iter:19
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[-0.53283304, -0.9923355 , -0.16299078, ...,  0.58420885,
            0.9775333 ,  0.19778402],
          [ 0.8342234 ,  0.74215424,  0.8532201 , ..., -0.22374097,
           -0.9793607 , -0.08398947],
          [-0.98733926, -0.7710802 , -0.95241296, ...,  0.9736489 ,
            0.34246647, -0.35907242],
          ...,
          [-0.8796886 ,  0.47941232,  0.9775333 , ..., -0.47162572,
            0.9974939 ,  0.8838634 ],
          [-0.87545943, -0.06633694, -0.06633694, ...,  0.70552963,
            0.70552963,  0.8754449 ],
          [ 0.5984842 , -0.97752696, -0.97752696, ...,  0.06630686,
            0.8797029 , -0.9348897 ]],

         [[-0.29213881,  0.30059254, -0.43217793, ..., -0.36729133,
           -0.5984601 , -0.05747243],
          [ 0.91474235,  0.30059254,  0.30059254, ..., -0.94102633,
            0.22377032, -0.973642  ],
          [ 0.76541406,  0.8998668 , -0.7710802 , ...,  0.9736489 ,
            0.48718765, -0.973642  ],
          ...,
          [-0.8796886 ,  0.47941232,  0.9775333 , ..., -0.9348897 ,
            0.21510528, -0.19781357],
          [-0.87545943, -0.06633694, -0.06633694, ...,  0.35079733,
            0.9775333 ,  0.07516615],
          [ 0.5984842 , -0.97752696, -0.97752696, ...,  0.07516615,
           -0.79847807,  0.8754449 ]],

         [[-0.99996084, -0.98733926,  0.15425146, ..., -0.7240972 ,
           -0.3507691 , -0.78769594],
          [ 0.42417902,  0.95507365, -0.8485703 , ...,  0.49487224,
           -0.6055519 ,  0.8879828 ],
          [ 0.99120283, -0.9923355 ,  0.74215424, ...,  0.7877145 ,
            0.7117959 ,  0.8667521 ],
          ...,
          [-0.07513609,  0.47941232,  0.9775333 , ..., -0.9348897 ,
            0.21510528, -0.19781357],
          [-0.87545943, -0.06633694, -0.06633694, ...,  0.35079733,
            0.9775333 ,  0.8797029 ],
          [ 0.5984842 , -0.97752696, -0.97752696, ..., -0.21513471,
            0.70552963, -0.79847807]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:20

analyse the exceptions in iter:20
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[50.02835 , 50.04698 , 50.025864, ..., 50.09413 , 50.09477 ,
           50.088943],
          [50.031303, 50.045944, 50.026615, ..., 50.09884 , 50.099483,
           50.09336 ],
          [50.027836, 50.040817, 50.022964, ..., 50.102173, 50.10327 ,
           50.098557],
          ...,
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ]],

         [[ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          ...,
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ]],

         [[ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          ...,
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ],
          [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,
            0.      ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:21

analyse the exceptions in iter:21
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[252., 249., 250., ..., 251., 251., 251.],
          [255., 252., 253., ..., 255., 255., 254.],
          [253., 250., 250., ..., 254., 254., 252.],
          ...,
          [254., 252., 253., ..., 252., 253., 252.],
          [250., 252., 255., ..., 254., 255., 254.],
          [236., 249., 250., ..., 250., 250., 251.]],

         [[  8.,  15.,   8., ...,   1.,   0.,   1.],
          [  7.,  15.,  13., ...,   1.,   0.,   4.],
          [  6.,  16.,  24., ...,   1.,   0.,   9.],
          ...,
          [ 66.,  62.,  64., ...,  70.,  69.,  70.],
          [ 49.,  53.,  59., ...,  70.,  68.,  59.],
          [ 37.,  48.,  42., ...,  78.,  74.,  58.]],

         [[ 42.,  42.,  39., ...,  11.,  15.,  30.],
          [ 43.,  44.,  42., ...,  11.,  18.,  33.],
          [ 42.,  42.,  43., ...,  10.,  20.,  37.],
          ...,
          [ 94.,  92.,  93., ..., 101., 103., 104.],
          [ 81.,  82.,  86., ..., 103., 100.,  89.],
          [ 68.,  76.,  73., ..., 113., 109.,  88.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:22

analyse the exceptions in iter:22
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 86.,  96., 115., ...,  84.,  95.,  79.],
          [125.,  99.,  71., ...,  78.,  88.,  93.],
          [112.,  87.,  58., ...,  89.,  88.,  85.],
          ...,
          [ 66.,  56.,  46., ...,  70.,  61.,  47.],
          [108.,  96.,  86., ...,  57.,  57.,  46.],
          [130., 120.,  98., ...,  44.,  44.,  45.]],

         [[ 74.,  83., 109., ...,  72.,  84.,  68.],
          [110.,  83.,  61., ...,  74.,  82.,  82.],
          [ 95.,  69.,  45., ...,  88.,  84.,  77.],
          ...,
          [ 61.,  53.,  46., ...,  79.,  74.,  57.],
          [100.,  91.,  82., ...,  60.,  65.,  51.],
          [117., 110.,  90., ...,  43.,  46.,  45.]],

         [[ 62.,  65.,  83., ...,  50.,  61.,  45.],
          [104.,  74.,  46., ...,  44.,  51.,  53.],
          [ 89.,  62.,  35., ...,  54.,  50.,  45.],
          ...,
          [ 39.,  33.,  28., ...,  46.,  42.,  31.],
          [ 73.,  66.,  59., ...,  38.,  41.,  31.],
          [ 91.,  86.,  67., ...,  30.,  32.,  32.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:23

analyse the exceptions in iter:23
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1.5707964, 1.5707964, 1.5707964, ..., 1.5707964, 1.5707964,
           1.5707964],
          [1.5707964, 1.5707964, 1.5707964, ..., 1.5707964, 1.5707964,
           1.5707964],
          [1.5707964, 1.5707964, 1.5707964, ..., 1.5707964, 1.5707964,
           1.5707964],
          ...,
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ]],

         [[0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          ...,
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ]],

         [[0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          ...,
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ],
          [0.       , 0.       , 0.       , ..., 0.       , 0.       ,
           0.       ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:24

analyse the exceptions in iter:24
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 73.,  71.,  77., ..., 183., 180., 185.],
          [ 73.,  75.,  78., ..., 181., 172., 174.],
          [ 77.,  94.,  99., ..., 175., 191., 185.],
          ...,
          [ 84.,  86., 118., ...,  79., 159., 117.],
          [ 76.,  81., 103., ...,  56.,  69., 104.],
          [102.,  91.,  95., ..., 100.,  72.,  48.]],

         [[ 77.,  68.,  69., ..., 210., 214., 225.],
          [ 74.,  68.,  64., ..., 229., 220., 218.],
          [ 72.,  82.,  81., ..., 213., 230., 226.],
          ...,
          [106., 105., 133., ...,  95., 177., 133.],
          [ 96.,  98., 116., ...,  80.,  90., 120.],
          [120., 109., 110., ..., 134.,  97.,  59.]],

         [[ 58.,  50.,  44., ..., 149., 143., 144.],
          [ 52.,  55.,  50., ..., 139., 129., 127.],
          [ 64.,  79.,  73., ..., 139., 152., 142.],
          ...,
          [ 56.,  58.,  84., ...,  78., 137.,  94.],
          [ 60.,  56.,  73., ...,  36.,  40.,  69.],
          [ 92.,  62.,  62., ...,  55.,  38.,  29.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:25

analyse the exceptions in iter:25
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[162., 164., 169., ..., 184., 190., 202.],
          [153., 158., 164., ..., 178., 189., 201.],
          [157., 161., 164., ..., 178., 190., 202.],
          ...,
          [214., 213., 213., ..., 240., 241., 242.],
          [218., 209., 208., ..., 232., 236., 239.],
          [216., 207., 201., ..., 231., 233., 235.]],

         [[164., 167., 171., ..., 176., 186., 198.],
          [151., 156., 163., ..., 171., 184., 198.],
          [151., 156., 160., ..., 170., 186., 199.],
          ...,
          [205., 193., 185., ..., 207., 206., 209.],
          [209., 188., 180., ..., 195., 196., 200.],
          [204., 189., 174., ..., 192., 194., 198.]],

         [[130., 128., 131., ..., 137., 146., 161.],
          [119., 120., 124., ..., 131., 143., 158.],
          [120., 121., 122., ..., 131., 142., 156.],
          ...,
          [193., 181., 174., ..., 193., 194., 196.],
          [198., 176., 169., ..., 182., 185., 187.],
          [197., 178., 156., ..., 178., 181., 183.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:26

analyse the exceptions in iter:26
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[131., 124., 116., ..., 184., 185., 184.],
          [127., 124., 116., ..., 177., 180., 186.],
          [123., 121., 113., ..., 179., 187., 194.],
          ...,
          [ 99.,  83.,  54., ..., 138., 155., 165.],
          [ 97.,  77.,  43., ..., 140., 154., 163.],
          [ 96.,  71.,  35., ..., 140., 156., 164.]],

         [[ 81.,  76.,  70., ..., 152., 153., 152.],
          [ 76.,  75.,  69., ..., 142., 146., 152.],
          [ 73.,  73.,  67., ..., 142., 150., 158.],
          ...,
          [ 50.,  42.,  27., ..., 103., 113., 118.],
          [ 50.,  39.,  21., ..., 105., 112., 116.],
          [ 49.,  36.,  16., ..., 104., 114., 118.]],

         [[ 32.,  27.,  20., ..., 114., 117., 120.],
          [ 27.,  26.,  19., ..., 106., 110., 116.],
          [ 23.,  24.,  17., ..., 106., 114., 118.],
          ...,
          [ 10.,   5.,   5., ...,  68.,  72.,  74.],
          [ 10.,   5.,   4., ...,  69.,  71.,  71.],
          [ 10.,   4.,   3., ...,  69.,  73.,  73.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:27

analyse the exceptions in iter:27
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 45.,  42.,  35., ...,  93.,  51.,  39.],
          [ 46.,  42.,  40., ..., 105.,  66.,  48.],
          [ 43.,  40.,  48., ...,  88.,  77.,  58.],
          ...,
          [ 55.,  67.,  73., ...,  93., 101., 103.],
          [ 55.,  62.,  68., ...,  69.,  81.,  99.],
          [ 58.,  59.,  58., ...,  77.,  66.,  83.]],

         [[ 20.,  21.,  17., ...,  86.,  47.,  36.],
          [ 22.,  22.,  22., ...,  93.,  53.,  39.],
          [ 22.,  21.,  32., ...,  74.,  59.,  44.],
          ...,
          [ 54.,  57.,  64., ...,  87., 116., 123.],
          [ 54.,  53.,  59., ...,  62.,  93., 117.],
          [ 53.,  46.,  45., ...,  68.,  75.,  99.]],

         [[ 19.,  18.,  13., ...,  81.,  42.,  32.],
          [ 20.,  18.,  18., ...,  92.,  52.,  36.],
          [ 19.,  17.,  27., ...,  77.,  60.,  43.],
          ...,
          [ 51.,  54.,  57., ...,  49.,  34.,  30.],
          [ 51.,  50.,  52., ...,  38.,  29.,  35.],
          [ 51.,  44.,  40., ...,  53.,  29.,  31.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:28

analyse the exceptions in iter:28
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[128., 121., 138., ..., 130., 101., 122.],
          [133., 125., 136., ..., 131., 106., 127.],
          [141., 126., 141., ..., 132., 114., 126.],
          ...,
          [191., 186., 175., ..., 190., 182., 195.],
          [210., 207., 198., ..., 194., 184., 192.],
          [209., 206., 207., ..., 201., 193., 196.]],

         [[141., 134., 151., ..., 150., 121., 141.],
          [146., 138., 149., ..., 151., 126., 147.],
          [155., 139., 154., ..., 152., 134., 146.],
          ...,
          [178., 174., 160., ..., 179., 175., 188.],
          [195., 197., 179., ..., 179., 178., 186.],
          [194., 195., 189., ..., 187., 187., 190.]],

         [[123., 116., 133., ..., 138., 109., 129.],
          [128., 120., 131., ..., 139., 114., 135.],
          [136., 121., 136., ..., 140., 122., 134.],
          ...,
          [126., 124., 112., ..., 138., 137., 145.],
          [143., 144., 129., ..., 138., 133., 142.],
          [142., 143., 138., ..., 145., 142., 146.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:29

analyse the exceptions in iter:29
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[202., 202., 204., ..., 207., 205., 203.],
          [206., 206., 207., ..., 210., 208., 206.],
          [210., 211., 212., ..., 214., 212., 210.],
          ...,
          [218., 210., 194., ..., 243., 244., 243.],
          [219., 217., 216., ..., 241., 241., 241.],
          [217., 216., 217., ..., 239., 239., 240.]],

         [[204., 204., 206., ..., 208., 206., 204.],
          [208., 208., 209., ..., 211., 209., 207.],
          [212., 213., 214., ..., 214., 213., 211.],
          ...,
          [217., 209., 194., ..., 242., 242., 243.],
          [218., 216., 216., ..., 240., 240., 240.],
          [216., 215., 216., ..., 238., 238., 238.]],

         [[199., 199., 201., ..., 200., 199., 198.],
          [203., 203., 204., ..., 205., 203., 201.],
          [207., 208., 210., ..., 210., 208., 206.],
          ...,
          [222., 214., 198., ..., 247., 247., 247.],
          [223., 221., 220., ..., 245., 245., 245.],
          [221., 220., 221., ..., 243., 243., 243.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:30

analyse the exceptions in iter:30
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[126., 122., 126., ..., 124., 120., 117.],
          [122., 119., 121., ..., 124., 122., 117.],
          [122., 121., 121., ..., 126., 123., 121.],
          ...,
          [126., 126., 128., ..., 133., 122., 114.],
          [125., 126., 127., ..., 128., 121., 114.],
          [123., 123., 126., ..., 128., 126., 121.]],

         [[118., 115., 119., ..., 118., 114., 111.],
          [115., 112., 114., ..., 118., 116., 111.],
          [115., 114., 114., ..., 120., 117., 115.],
          ...,
          [118., 118., 120., ..., 125., 114., 106.],
          [117., 118., 119., ..., 120., 113., 106.],
          [115., 115., 118., ..., 119., 118., 113.]],

         [[110., 108., 111., ..., 106., 102.,  99.],
          [107., 104., 106., ..., 106., 104.,  99.],
          [107., 106., 106., ..., 108., 105., 103.],
          ...,
          [107., 107., 109., ..., 114., 103.,  95.],
          [106., 107., 108., ..., 109., 102.,  95.],
          [104., 104., 107., ..., 109., 107., 102.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:31

analyse the exceptions in iter:31
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[236., 233., 234., ..., 148., 147., 140.],
          [243., 242., 243., ..., 163., 161., 159.],
          [245., 242., 245., ..., 163., 161., 157.],
          ...,
          [ 79.,  70.,  72., ...,  38.,  36.,  33.],
          [ 81.,  78.,  74., ...,  47.,  31.,  24.],
          [ 80.,  80.,  74., ...,  40.,  28.,  22.]],

         [[242., 239., 240., ..., 145., 145., 137.],
          [249., 247., 250., ..., 162., 160., 158.],
          [251., 248., 251., ..., 162., 160., 157.],
          ...,
          [ 74.,  65.,  68., ...,  31.,  29.,  25.],
          [ 79.,  73.,  68., ...,  38.,  24.,  17.],
          [ 80.,  77.,  67., ...,  30.,  21.,  15.]],

         [[238., 235., 236., ..., 140., 139., 131.],
          [245., 244., 246., ..., 162., 160., 158.],
          [247., 244., 247., ..., 166., 164., 161.],
          ...,
          [ 60.,  47.,  45., ...,  25.,  23.,  19.],
          [ 62.,  56.,  49., ...,  29.,  17.,  10.],
          [ 63.,  61.,  52., ...,  20.,  12.,   8.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:32

analyse the exceptions in iter:32
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 50.,  51.,  42., ...,  48.,  18.,  14.],
          [ 86.,  92.,  82., ...,  46.,  17.,  11.],
          [ 43.,  43.,  51., ...,  42.,  10.,   6.],
          ...,
          [220., 209., 199., ..., 177., 176., 175.],
          [188., 182., 182., ..., 176., 175., 174.],
          [188., 184., 186., ..., 176., 176., 173.]],

         [[ 64.,  63.,  55., ...,  45.,  18.,  15.],
          [107., 110.,  99., ...,  43.,  17.,  12.],
          [ 60.,  56.,  65., ...,  39.,  10.,   6.],
          ...,
          [165., 174., 172., ..., 171., 170., 168.],
          [178., 170., 161., ..., 168., 167., 166.],
          [167., 163., 167., ..., 169., 168., 165.]],

         [[ 37.,  41.,  41., ...,  42.,  14.,  12.],
          [ 67.,  76.,  67., ...,  41.,  14.,  10.],
          [ 42.,  41.,  46., ...,  37.,   9.,   5.],
          ...,
          [151., 165., 164., ..., 168., 167., 166.],
          [162., 162., 157., ..., 166., 165., 164.],
          [162., 157., 160., ..., 166., 166., 162.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:33

analyse the exceptions in iter:33
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[  7.,   7.,   5., ...,  82.,  80.,  69.],
          [  6.,   6.,   5., ...,  85.,  86.,  81.],
          [  1.,   7.,   8., ...,  98.,  96.,  86.],
          ...,
          [150., 135., 129., ...,  72.,  45.,  26.],
          [156., 153., 138., ...,  57.,  23.,  38.],
          [183., 191., 182., ...,  83.,  67., 114.]],

         [[  5.,   5.,   4., ...,  84.,  85.,  73.],
          [  4.,   4.,   3., ...,  86.,  88.,  80.],
          [  1.,   7.,   8., ...,  96.,  96.,  84.],
          ...,
          [153., 136., 129., ...,  72.,  51.,  32.],
          [156., 151., 136., ...,  58.,  32.,  45.],
          [193., 199., 189., ...,  83.,  74., 120.]],

         [[  8.,   8.,   6., ...,  78.,  81.,  68.],
          [  8.,   9.,   8., ...,  77.,  81.,  72.],
          [  6.,  12.,  13., ...,  83.,  85.,  73.],
          ...,
          [139., 121., 113., ...,  69.,  63.,  51.],
          [139., 130., 110., ...,  56.,  48.,  64.],
          [183., 185., 171., ...,  76.,  81., 119.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:34

analyse the exceptions in iter:34
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[172., 171., 168., ..., 158., 156., 147.],
          [169., 168., 168., ..., 158., 152., 145.],
          [174., 169., 170., ..., 157., 149., 146.],
          ...,
          [150., 157., 162., ..., 158., 147., 139.],
          [143., 149., 155., ..., 148., 143., 140.],
          [148., 146., 149., ..., 137., 134., 136.]],

         [[187., 186., 182., ..., 170., 169., 163.],
          [185., 183., 184., ..., 175., 170., 165.],
          [190., 185., 186., ..., 177., 170., 168.],
          ...,
          [163., 168., 170., ..., 168., 160., 154.],
          [154., 158., 161., ..., 157., 153., 153.],
          [158., 155., 157., ..., 143., 139., 143.]],

         [[130., 130., 126., ..., 113., 113., 107.],
          [123., 122., 123., ..., 114., 110., 107.],
          [126., 122., 123., ..., 115., 108., 109.],
          ...,
          [100., 103., 104., ..., 108.,  99.,  90.],
          [ 89.,  90.,  96., ...,  99.,  92.,  88.],
          [ 93.,  89.,  92., ...,  86.,  80.,  82.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:35

analyse the exceptions in iter:35
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[251., 247., 247., ..., 229., 244., 251.],
          [249., 246., 246., ..., 233., 249., 252.],
          [167., 167., 167., ..., 217., 217., 220.],
          ...,
          [133., 123., 124., ..., 118., 114., 115.],
          [123., 124., 126., ..., 112., 108., 104.],
          [125., 129., 126., ..., 118., 112., 105.]],

         [[249., 245., 245., ..., 190., 231., 241.],
          [248., 244., 245., ..., 188., 237., 242.],
          [165., 164., 164., ..., 182., 211., 213.],
          ...,
          [130., 127., 130., ..., 125., 122., 125.],
          [125., 127., 129., ..., 122., 119., 119.],
          [128., 132., 130., ..., 128., 122., 121.]],

         [[250., 247., 247., ..., 146., 224., 241.],
          [248., 244., 244., ..., 141., 233., 241.],
          [148., 148., 149., ..., 139., 203., 208.],
          ...,
          [ 39.,  36.,  35., ...,  30.,  26.,  27.],
          [ 36.,  36.,  32., ...,  26.,  27.,  22.],
          [ 42.,  43.,  36., ...,  35.,  33.,  26.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:36

analyse the exceptions in iter:36
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[169., 131., 193., ..., 172., 169., 166.],
          [165., 127., 189., ..., 172., 169., 166.],
          [163., 126., 186., ..., 173., 170., 168.],
          ...,
          [147., 139., 145., ..., 220., 218., 219.],
          [146., 143., 152., ..., 221., 220., 219.],
          [148., 143., 146., ..., 223., 221., 220.]],

         [[122., 108., 196., ..., 187., 183., 181.],
          [119., 104., 192., ..., 186., 183., 180.],
          [117., 103., 189., ..., 187., 184., 182.],
          ...,
          [ 93.,  85.,  91., ..., 220., 218., 219.],
          [ 87.,  83.,  94., ..., 221., 220., 219.],
          [ 87.,  82.,  85., ..., 223., 221., 220.]],

         [[ 65.,  75., 192., ..., 187., 183., 181.],
          [ 62.,  72., 187., ..., 186., 183., 180.],
          [ 60.,  71., 185., ..., 187., 184., 182.],
          ...,
          [ 35.,  39.,  42., ..., 220., 218., 219.],
          [ 31.,  39.,  43., ..., 222., 220., 219.],
          [ 28.,  31.,  30., ..., 223., 221., 220.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:37

analyse the exceptions in iter:37
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 95.,  88.,  86., ..., 101.,  91., 105.],
          [ 82.,  75.,  76., ...,  94.,  51.,  84.],
          [ 77.,  74.,  71., ...,  71.,  47.,  88.],
          ...,
          [ 97.,  92.,  97., ...,  86.,  94.,  90.],
          [ 95.,  84.,  89., ...,  96., 102.,  97.],
          [ 91.,  83.,  82., ..., 100., 105., 108.]],

         [[105.,  97.,  96., ..., 116., 108., 124.],
          [ 90.,  83.,  84., ..., 102.,  61.,  97.],
          [ 85.,  81.,  78., ...,  74.,  52.,  95.],
          ...,
          [ 95.,  92.,  93., ...,  91.,  97.,  97.],
          [ 90.,  86.,  89., ...,  97.,  96.,  94.],
          [ 84.,  81.,  81., ...,  96.,  97., 102.]],

         [[127., 120., 118., ..., 144., 136., 157.],
          [110., 104., 104., ..., 123.,  80., 122.],
          [103.,  98.,  95., ...,  86.,  63., 111.],
          ...,
          [ 72.,  69.,  70., ...,  65.,  72.,  71.],
          [ 65.,  59.,  62., ...,  76.,  77.,  73.],
          [ 63.,  57.,  55., ...,  78.,  80.,  83.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:38

analyse the exceptions in iter:38
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[110., 223., 243., ...,   7.,   0.,   0.],
          [102., 213., 244., ...,  98.,  80.,  31.],
          [ 99., 204., 248., ..., 221., 198.,  89.],
          ...,
          [ 58.,  58.,  51., ...,   8.,   9.,   6.],
          [ 69.,  54.,  49., ...,  48.,  52.,  35.],
          [ 81.,  52.,  50., ...,  15.,  16.,  13.]],

         [[ 90., 197., 215., ...,   2.,   0.,   0.],
          [ 83., 187., 217., ...,  90.,  74.,  27.],
          [ 78., 179., 221., ..., 209., 188.,  81.],
          ...,
          [ 63.,  70.,  69., ...,   8.,  10.,   8.],
          [ 72.,  64.,  65., ...,  44.,  47.,  32.],
          [ 80.,  58.,  63., ...,   5.,   5.,   3.]],

         [[ 84., 185., 201., ...,   3.,   0.,   0.],
          [ 77., 176., 203., ...,  92.,  75.,  28.],
          [ 72., 167., 207., ..., 213., 191.,  83.],
          ...,
          [ 87., 100., 103., ...,  10.,   7.,   5.],
          [ 94.,  92.,  98., ...,  43.,  44.,  30.],
          [100.,  84.,  93., ...,   5.,   5.,   4.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:39

analyse the exceptions in iter:39
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 98.,  44.,  73., ...,  96., 124.,  93.],
          [119.,  75.,  94., ..., 100., 114.,  98.],
          [109.,  69., 111., ..., 129., 110.,  95.],
          ...,
          [ 75.,  81.,  77., ...,  72.,  84.,  73.],
          [ 60.,  55.,  60., ...,  68.,  81.,  55.],
          [ 61.,  65.,  58., ...,  85.,  73.,  72.]],

         [[110.,  56.,  84., ...,  98., 137., 110.],
          [132.,  86., 105., ..., 100., 124., 112.],
          [122.,  80., 122., ..., 126., 117., 106.],
          ...,
          [ 97., 103.,  99., ...,  73.,  92.,  82.],
          [ 82.,  77.,  82., ...,  71.,  89.,  63.],
          [ 84.,  87.,  82., ...,  93.,  81.,  79.]],

         [[ 96.,  46.,  77., ...,  99., 135., 107.],
          [117.,  76.,  98., ..., 100., 121., 107.],
          [107.,  70., 115., ..., 124., 111.,  99.],
          ...,
          [ 76.,  82.,  78., ...,  69.,  85.,  75.],
          [ 62.,  57.,  61., ...,  67.,  84.,  58.],
          [ 67.,  74.,  61., ...,  85.,  74.,  72.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:40

analyse the exceptions in iter:40
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[101.,  94.,  98., ..., 121., 127., 143.],
          [120., 131., 124., ..., 115., 121., 144.],
          [120., 139., 140., ..., 105., 107., 121.],
          ...,
          [ 48.,  31.,  37., ..., 188., 159., 125.],
          [ 52.,  42.,  44., ..., 173., 165., 150.],
          [ 41.,  38.,  42., ..., 164., 145., 155.]],

         [[114., 116., 112., ..., 119., 130., 136.],
          [122., 132., 119., ..., 116., 126., 141.],
          [126., 140., 139., ...,  97., 103., 121.],
          ...,
          [ 45.,  31.,  37., ..., 157., 130., 106.],
          [ 46.,  40.,  45., ..., 135., 136., 132.],
          [ 42.,  38.,  41., ..., 130., 120., 134.]],

         [[ 35.,  48.,  42., ...,  58.,  66.,  90.],
          [ 64.,  98.,  74., ...,  53.,  63.,  77.],
          [ 50.,  82.,  82., ...,  56.,  61.,  65.],
          ...,
          [ 40.,  24.,  27., ..., 103.,  93.,  60.],
          [ 41.,  32.,  32., ..., 102.,  99.,  92.],
          [ 32.,  33.,  33., ...,  98.,  79.,  91.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:41

analyse the exceptions in iter:41
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[145., 145., 148., ..., 237., 230., 224.],
          [147., 150., 168., ..., 231., 221., 214.],
          [145., 150., 178., ..., 229., 230., 232.],
          ...,
          [231., 230., 227., ..., 235., 234., 231.],
          [224., 231., 231., ..., 240., 228., 223.],
          [125., 225., 232., ..., 224., 216., 228.]],

         [[125., 126., 130., ..., 210., 202., 199.],
          [126., 132., 147., ..., 203., 192., 190.],
          [124., 130., 155., ..., 201., 201., 205.],
          ...,
          [202., 202., 198., ..., 209., 207., 203.],
          [199., 200., 202., ..., 213., 201., 199.],
          [120., 200., 204., ..., 197., 189., 203.]],

         [[ 83.,  82.,  82., ..., 170., 161., 158.],
          [ 83.,  84., 107., ..., 163., 151., 149.],
          [ 79.,  84., 110., ..., 161., 160., 166.],
          ...,
          [169., 170., 166., ..., 172., 170., 167.],
          [163., 167., 170., ..., 177., 162., 162.],
          [ 98., 166., 170., ..., 160., 150., 167.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:42

analyse the exceptions in iter:42
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1.5629225, 1.5640397, 1.565588 , ..., 1.561868 , 1.563852 ,
           1.5642605],
          [1.5595609, 1.5617876, 1.5641739, ..., 1.5645852, 1.5647722,
           1.5646614],
          [1.5605927, 1.5601584, 1.5617057, ..., 1.565016 , 1.5648792,
           1.565016 ],
          ...,
          [1.5643861, 1.5641739, 1.564085 , ..., 1.5641297, 1.564085 ,
           1.5637542],
          [1.5646614, 1.5646236, 1.5645852, ..., 1.5633891, 1.5637043,
           1.5635501],
          [1.5645465, 1.5645465, 1.5646614, ..., 1.5635501, 1.5638034,
           1.5641739]],

         [[1.56286  , 1.563852 , 1.5652715, ..., 1.5609927, 1.5633891,
           1.5637542],
          [1.5596857, 1.5617057, 1.5637043, ..., 1.5642174, 1.5644673,
           1.5643029],
          [1.5601584, 1.5601584, 1.5616223, ..., 1.5645071, 1.5643029,
           1.564427 ],
          ...,
          [1.5642174, 1.5638999, 1.563852 , ..., 1.563852 , 1.5640397,
           1.5638034],
          [1.5644673, 1.5643448, 1.5641739, ..., 1.5631629, 1.5634972,
           1.5633337],
          [1.5642174, 1.5641739, 1.5642605, ..., 1.5625321, 1.5631629,
           1.5633891]],

         [[1.5630445, 1.563852 , 1.5650821, ..., 1.5605927, 1.5626664,
           1.5631042],
          [1.5601584, 1.5621759, 1.5634972, ..., 1.5630445, 1.5632207,
           1.562984 ],
          [1.5601584, 1.5606956, 1.5623219, ..., 1.5632207, 1.5630445,
           1.5632207],
          ...,
          [1.5621009, 1.5614508, 1.5611812, ..., 1.5617057, 1.5620246,
           1.5611812],
          [1.5625998, 1.5624632, 1.5623219, ..., 1.5606956, 1.5616223,
           1.5610878],
          [1.5625998, 1.5624632, 1.5624632, ..., 1.5610878, 1.5614508,
           1.5622495]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:43

analyse the exceptions in iter:43
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[1.5606956, 1.5605927, 1.5607966, ..., 1.5630445, 1.5632207,
           1.5631042],
          [1.5607966, 1.5607966, 1.5609927, ..., 1.5625998, 1.5633891,
           1.5632207],
          [1.5611812, 1.5611812, 1.5613626, ..., 1.5647358, 1.564085 ,
           1.5636536],
          ...,
          [1.5656682, 1.5657712, 1.5662714, ..., 1.5660117, 1.5660117,
           1.5659887],
          [1.5657202, 1.5658213, 1.566057 , ..., 1.5659887, 1.5660344,
           1.5660117],
          [1.5657712, 1.5657202, 1.5658944, ..., 1.5659887, 1.5660344,
           1.5660117]],

         [[1.5647722, 1.5647358, 1.5648084, ..., 1.56542  , 1.5655332,
           1.5654773],
          [1.5647722, 1.5646988, 1.5648084, ..., 1.5642174, 1.5655054,
           1.5654773],
          [1.5648792, 1.5648084, 1.564914 , ..., 1.5647358, 1.5655054,
           1.5655054],
          ...,
          [1.565016 , 1.5651467, 1.5656418, ..., 1.5655608, 1.5655332,
           1.5654773],
          [1.565016 , 1.5651784, 1.5653616, ..., 1.5655332, 1.5655608,
           1.5655608],
          [1.565016 , 1.5649824, 1.5650493, ..., 1.5655054, 1.5655608,
           1.5655332]],

         [[1.5657458, 1.5656943, 1.5657712, ..., 1.5660794, 1.5661452,
           1.5661016],
          [1.5656682, 1.5656418, 1.5657202, ..., 1.5648792, 1.5661016,
           1.5661235],
          [1.5657202, 1.5656682, 1.5657458, ..., 1.5645465, 1.5659183,
           1.5660794],
          ...,
          [1.564085 , 1.5642605, 1.5647722, ..., 1.5648792, 1.5649484,
           1.565016 ],
          [1.564085 , 1.564085 , 1.5639937, ..., 1.5649484, 1.565016 ,
           1.5650821],
          [1.564085 , 1.563852 , 1.5634972, ..., 1.5650493, 1.5651467,
           1.5650821]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:44

analyse the exceptions in iter:44
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[139., 144., 146., ..., 132., 131., 129.],
          [139., 124., 128., ..., 110., 108., 114.],
          [172., 126., 116., ...,  67.,  68., 113.],
          ...,
          [ 95.,  93.,  91., ...,  81., 104., 107.],
          [132., 124., 119., ..., 114., 131., 132.],
          [110., 124., 129., ..., 129., 128., 112.]],

         [[154., 160., 162., ..., 140., 142., 141.],
          [148., 137., 149., ..., 114., 112., 127.],
          [162., 114., 109., ...,  71.,  68., 119.],
          ...,
          [ 88.,  82.,  84., ...,  94., 103., 102.],
          [109., 105., 104., ..., 104., 112., 110.],
          [108., 116., 116., ..., 117., 114., 105.]],

         [[188., 192., 192., ...,  77.,  76.,  70.],
          [180., 167., 178., ...,  81.,  76.,  68.],
          [172., 121., 129., ...,  50.,  58.,  78.],
          ...,
          [ 44.,  45.,  44., ...,  30.,  51.,  53.],
          [ 74.,  69.,  61., ...,  59.,  74.,  70.],
          [ 52.,  67.,  67., ...,  80.,  75.,  59.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:45

analyse the exceptions in iter:45
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 54.,  59.,  56., ..., 133., 131., 132.],
          [ 59.,  62.,  55., ..., 193., 200., 197.],
          [ 41.,  41.,  36., ..., 202., 196., 190.],
          ...,
          [105.,  97.,  96., ...,  98., 100., 100.],
          [ 86.,  96.,  97., ...,  94.,  98., 100.],
          [ 70.,  92., 113., ...,  98.,  96.,  92.]],

         [[ 31.,  34.,  37., ...,  92.,  89.,  94.],
          [ 38.,  39.,  36., ..., 135., 144., 142.],
          [ 26.,  25.,  21., ..., 144., 141., 136.],
          ...,
          [161., 163., 170., ..., 145., 138., 130.],
          [149., 157., 164., ..., 127., 126., 124.],
          [136., 146., 169., ..., 121., 117., 112.]],

         [[ 18.,  19.,  22., ...,  53.,  49.,  53.],
          [ 26.,  26.,  25., ...,  77.,  86.,  86.],
          [ 18.,  16.,  13., ...,  84.,  81.,  79.],
          ...,
          [157., 162., 164., ..., 144., 135., 123.],
          [143., 156., 160., ..., 122., 120., 114.],
          [128., 145., 168., ..., 111., 106., 101.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:46

analyse the exceptions in iter:46
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 94.,  72.,  60., ...,  72.,  71.,  77.],
          [ 85.,  67.,  52., ...,  67.,  72.,  77.],
          [ 82.,  54.,  41., ...,  70.,  71.,  78.],
          ...,
          [ 78.,  54.,  37., ...,  51.,  44.,  52.],
          [133., 117.,  98., ...,  62.,  53.,  60.],
          [140., 137., 138., ...,  85.,  79.,  69.]],

         [[ 91.,  71.,  68., ...,  78.,  75.,  82.],
          [ 83.,  66.,  57., ...,  73.,  78.,  85.],
          [ 82.,  53.,  44., ...,  76.,  77.,  85.],
          ...,
          [ 79.,  54.,  37., ...,  49.,  47.,  50.],
          [127., 111.,  92., ...,  58.,  56.,  59.],
          [129., 126., 126., ...,  68.,  71.,  63.]],

         [[ 62.,  42.,  35., ...,  43.,  39.,  41.],
          [ 55.,  38.,  29., ...,  41.,  37.,  39.],
          [ 53.,  24.,  19., ...,  53.,  37.,  39.],
          ...,
          [ 86.,  63.,  46., ...,  28.,  20.,  28.],
          [129., 115.,  98., ...,  35.,  28.,  36.],
          [126., 125., 129., ...,  46.,  46.,  42.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:47

analyse the exceptions in iter:47
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 77.,  76.,  78., ...,  68.,  58.,  48.],
          [ 71.,  67.,  69., ...,  57.,  44.,  36.],
          [ 55.,  52.,  58., ...,  62.,  53.,  48.],
          ...,
          [ 63.,  62.,  67., ...,  63.,  58.,  55.],
          [ 89.,  91.,  89., ...,  65.,  68.,  66.],
          [103., 107.,  92., ...,  69.,  77.,  77.]],

         [[113., 112., 114., ..., 104.,  94.,  84.],
          [107., 102., 105., ...,  93.,  80.,  72.],
          [ 91.,  88.,  94., ...,  98.,  89.,  84.],
          ...,
          [ 97.,  92.,  97., ...,  97.,  92.,  89.],
          [118., 116., 114., ...,  99., 102., 101.],
          [129., 131., 119., ..., 104., 111., 112.]],

         [[137., 136., 139., ..., 128., 118., 108.],
          [131., 126., 130., ..., 116., 104.,  96.],
          [115., 112., 119., ..., 122., 113., 108.],
          ...,
          [119., 115., 121., ..., 123., 118., 115.],
          [136., 135., 136., ..., 122., 125., 124.],
          [144., 147., 138., ..., 127., 134., 135.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:48

analyse the exceptions in iter:48
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[191., 190., 190., ..., 135., 142., 146.],
          [187., 184., 179., ..., 147., 152., 153.],
          [181., 176., 165., ..., 154., 162., 158.],
          ...,
          [220., 221., 222., ..., 211., 214., 224.],
          [212., 220., 225., ..., 216., 216., 221.],
          [201., 212., 217., ..., 220., 217., 217.]],

         [[191., 192., 193., ..., 143., 149., 150.],
          [188., 187., 183., ..., 154., 158., 158.],
          [183., 178., 169., ..., 161., 167., 163.],
          ...,
          [245., 245., 244., ..., 238., 240., 248.],
          [238., 245., 247., ..., 242., 241., 244.],
          [226., 239., 243., ..., 242., 240., 238.]],

         [[168., 172., 174., ..., 123., 126., 127.],
          [165., 166., 163., ..., 134., 135., 134.],
          [160., 157., 148., ..., 140., 143., 139.],
          ...,
          [198., 199., 202., ..., 189., 193., 203.],
          [190., 198., 204., ..., 194., 195., 201.],
          [178., 190., 196., ..., 197., 196., 195.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:49

analyse the exceptions in iter:49
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[255., 255., 255., ..., 255., 255., 255.],
          [255., 252., 255., ..., 254., 254., 254.],
          [255., 252., 255., ..., 254., 254., 254.],
          ...,
          [255., 254., 254., ..., 254., 254., 254.],
          [255., 253., 254., ..., 254., 254., 254.],
          [255., 255., 255., ..., 255., 255., 255.]],

         [[255., 255., 255., ..., 255., 255., 255.],
          [255., 252., 255., ..., 254., 254., 254.],
          [255., 252., 255., ..., 254., 254., 254.],
          ...,
          [255., 254., 254., ..., 254., 254., 254.],
          [255., 253., 254., ..., 254., 254., 254.],
          [255., 255., 255., ..., 255., 255., 255.]],

         [[255., 255., 255., ..., 255., 255., 255.],
          [255., 252., 255., ..., 254., 254., 254.],
          [255., 252., 255., ..., 254., 254., 254.],
          ...,
          [255., 254., 254., ..., 254., 254., 254.],
          [255., 253., 254., ..., 254., 254., 254.],
          [255., 255., 255., ..., 255., 255., 255.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:50

final statics:
total operators:28
tensorflow --> nums:49,distinct_bugs:2
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:48
maxpool2d:1
mindspore --> 
torch --> 

generate models:50

analyse the exceptions in iter:50
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 16.,  17.,  17., ...,  62.,  55.,  51.],
          [ 16.,  16.,  15., ...,  62.,  58.,  52.],
          [ 16.,  15.,  15., ...,  57.,  59.,  56.],
          ...,
          [ 96., 114., 119., ..., 128., 120., 117.],
          [118., 100., 114., ..., 139., 131., 121.],
          [144., 136., 105., ..., 145., 137., 131.]],

         [[ 76.,  77.,  77., ..., 106.,  99.,  94.],
          [ 76.,  76.,  75., ..., 109., 105., 100.],
          [ 76.,  75.,  75., ..., 110., 111., 109.],
          ...,
          [110., 127., 132., ..., 135., 130., 131.],
          [132., 113., 126., ..., 146., 140., 134.],
          [148., 140., 114., ..., 151., 144., 141.]],

         [[ 74.,  75.,  75., ...,  87.,  80.,  75.],
          [ 74.,  74.,  74., ...,  84.,  80.,  75.],
          [ 74.,  73.,  73., ...,  79.,  80.,  78.],
          ...,
          [138., 159., 167., ..., 153., 145., 142.],
          [159., 145., 163., ..., 159., 153., 147.],
          [173., 168., 143., ..., 170., 163., 158.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:51

analyse the exceptions in iter:51
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[213., 119.,  58., ..., 143., 140., 117.],
          [214., 128.,  62., ..., 138., 136., 111.],
          [215., 139.,  75., ..., 136., 134., 107.],
          ...,
          [118., 122., 129., ..., 158., 151., 145.],
          [111., 117., 128., ..., 153., 147., 141.],
          [110., 116., 127., ..., 141., 136., 139.]],

         [[221., 127.,  71., ..., 158., 142., 101.],
          [223., 137.,  75., ..., 152., 138.,  95.],
          [224., 148.,  88., ..., 151., 136.,  91.],
          ...,
          [ 45.,  45.,  46., ...,  65.,  68.,  67.],
          [ 38.,  42.,  47., ...,  62.,  59.,  63.],
          [ 38.,  40.,  48., ...,  55.,  52.,  58.]],

         [[221., 122.,  81., ..., 150., 136.,  87.],
          [220., 130.,  83., ..., 145., 133.,  82.],
          [219., 139.,  94., ..., 143., 131.,  77.],
          ...,
          [ 37.,  40.,  42., ...,  54.,  55.,  55.],
          [ 32.,  36.,  41., ...,  53.,  49.,  51.],
          [ 32.,  34.,  41., ...,  46.,  43.,  47.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:52

analyse the exceptions in iter:52
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 63.,  77.,  66., ...,  76.,  86., 114.],
          [ 72.,  70.,  64., ...,  84.,  81.,  88.],
          [ 56.,  70.,  54., ..., 139., 104.,  77.],
          ...,
          [118., 152., 175., ..., 102., 128., 179.],
          [137., 148., 148., ..., 121., 170., 203.],
          [171., 173., 153., ..., 167., 187., 174.]],

         [[ 70.,  88.,  88., ...,  91.,  94., 116.],
          [ 71.,  83.,  85., ...,  94.,  91.,  97.],
          [ 65.,  82.,  76., ..., 142., 114.,  93.],
          ...,
          [107., 135., 155., ...,  79., 105., 150.],
          [123., 129., 129., ...,  94., 142., 168.],
          [145., 146., 130., ..., 136., 157., 143.]],

         [[ 37.,  63.,  63., ...,  65.,  71.,  95.],
          [ 39.,  58.,  58., ...,  71.,  67.,  73.],
          [ 34.,  53.,  48., ..., 120.,  90.,  71.],
          ...,
          [ 85., 111., 133., ...,  63.,  85., 114.],
          [101., 109., 105., ...,  74., 116., 130.],
          [108., 107.,  96., ..., 107., 129., 115.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:53

analyse the exceptions in iter:53
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[157., 156., 157., ..., 177., 177., 175.],
          [162., 162., 162., ..., 187., 182., 179.],
          [165., 164., 165., ..., 211., 204., 191.],
          ...,
          [172., 168., 166., ..., 203., 203., 200.],
          [177., 175., 172., ..., 203., 203., 200.],
          [182., 182., 179., ..., 203., 203., 200.]],

         [[159., 158., 159., ..., 183., 180., 179.],
          [164., 164., 164., ..., 194., 187., 183.],
          [167., 166., 167., ..., 220., 210., 196.],
          ...,
          [174., 170., 167., ..., 205., 205., 202.],
          [179., 177., 173., ..., 205., 205., 202.],
          [184., 183., 180., ..., 205., 205., 202.]],

         [[146., 145., 146., ..., 185., 183., 179.],
          [151., 151., 151., ..., 200., 193., 186.],
          [154., 153., 154., ..., 226., 219., 201.],
          ...,
          [161., 158., 158., ..., 201., 201., 199.],
          [166., 166., 164., ..., 202., 202., 199.],
          [171., 174., 173., ..., 202., 202., 199.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:54

analyse the exceptions in iter:54
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[3.4934271e+19, 2.5813129e+20, 7.0167356e+20, ...,
           5.1847055e+21, 2.5813129e+20, 9.4961195e+19],
          [3.4934271e+19, 2.5813129e+20, 7.0167356e+20, ...,
           7.6947848e+23, 1.4093490e+22, 1.4093490e+22],
          [3.4934271e+19, 9.4961195e+19, 2.5813129e+20, ...,
           1.1420074e+26, 2.0916594e+24, 7.6947848e+23],
          ...,
          [5.1847055e+21, 5.1847055e+21, 1.4093490e+22, ...,
                     inf, 2.0382811e+34, 1.0148004e+33],
          [5.1847055e+21, 1.9073465e+21, 1.4093490e+22, ...,
           1.5060974e+35,           inf, 1.8586717e+31],
          [5.1847055e+21, 5.1847055e+21, 1.4093490e+22, ...,
           1.1128638e+36,           inf, 1.6516363e+38]],

         [[5.0523936e+31, 3.7332422e+32, 1.0148004e+33, ...,
           5.0523936e+31, 9.2537816e+29, 2.5154387e+30],
          [1.8586717e+31, 1.3733831e+32, 3.7332422e+32, ...,
           2.7585135e+33, 1.3733831e+32, 3.7332422e+32],
          [6.8376711e+30, 1.8586717e+31, 5.0523936e+31, ...,
           1.1128638e+36, 5.5406225e+34, 5.5406225e+34],
          ...,
          [1.0148004e+33, 7.4984170e+33, 7.4984170e+33, ...,
                     inf,           inf,           inf],
          [1.0148004e+33, 2.7585135e+33, 7.4984170e+33, ...,
                     inf,           inf,           inf],
          [3.7332422e+32, 7.4984170e+33, 2.7585135e+33, ...,
                     inf,           inf,           inf]],

         [[1.4462571e+12, 1.0686475e+13, 2.1464359e+14, ...,
           1.4462571e+12, 3.9313342e+12, 2.9048850e+13],
          [5.3204825e+11, 3.9313342e+12, 7.8962965e+13, ...,
           7.8962965e+13, 2.9048850e+13, 7.8962965e+13],
          [3.9313342e+12, 1.0686475e+13, 2.9048850e+13, ...,
           4.3112315e+15, 5.8346178e+14, 5.8346178e+14],
          ...,
          [5.8346178e+14, 5.8346178e+14, 1.5860134e+15, ...,
                     inf, 5.1847055e+21, 1.9073465e+21],
          [5.8346178e+14, 5.8346178e+14, 1.5860134e+15, ...,
                     inf,           inf, 1.2851600e+19],
          [1.5860134e+15, 2.1464359e+14, 1.5860134e+15, ...,
                     inf,           inf, 5.5406225e+34]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:55

analyse the exceptions in iter:55
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[156., 167., 169., ..., 243., 230., 208.],
          [174., 192., 172., ..., 237., 213., 186.],
          [192., 194., 174., ..., 226., 198., 195.],
          ...,
          [187., 211., 231., ..., 210., 217., 203.],
          [231., 220., 200., ..., 183., 189., 186.],
          [238., 238., 229., ..., 141., 151., 157.]],

         [[194., 212., 215., ..., 247., 235., 215.],
          [210., 229., 204., ..., 243., 221., 193.],
          [234., 230., 201., ..., 231., 208., 200.],
          ...,
          [211., 234., 244., ..., 204., 208., 192.],
          [238., 236., 219., ..., 170., 175., 169.],
          [242., 247., 239., ..., 126., 137., 141.]],

         [[129., 127., 129., ..., 226., 206., 180.],
          [147., 159., 163., ..., 223., 200., 169.],
          [145., 178., 194., ..., 218., 186., 165.],
          ...,
          [151., 180., 221., ..., 199., 210., 192.],
          [218., 209., 177., ..., 153., 160., 153.],
          [224., 232., 217., ..., 106., 117., 118.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:56

analyse the exceptions in iter:56
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[141., 139., 136., ..., 228., 228., 229.],
          [148., 150., 148., ..., 228., 228., 228.],
          [149., 149., 148., ..., 230., 229., 229.],
          ...,
          [125., 124., 139., ..., 220., 199., 208.],
          [126., 116., 135., ..., 246., 226., 196.],
          [143., 145., 169., ..., 254., 255., 227.]],

         [[ 70.,  61.,  55., ..., 198., 199., 200.],
          [ 71.,  67.,  64., ..., 197., 196., 197.],
          [ 72.,  66.,  64., ..., 197., 197., 197.],
          ...,
          [100., 102., 110., ..., 169., 143., 149.],
          [101.,  93., 107., ..., 205., 181., 145.],
          [105., 107., 127., ..., 208., 206., 174.]],

         [[  8.,   2.,   0., ..., 155., 156., 157.],
          [ 10.,   5.,   2., ..., 153., 152., 153.],
          [ 17.,   7.,   4., ..., 151., 151., 151.],
          ...,
          [ 73.,  80.,  75., ..., 109.,  86.,  93.],
          [ 75.,  71.,  73., ..., 144., 121.,  87.],
          [ 67.,  71.,  83., ..., 141., 138., 105.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:57

analyse the exceptions in iter:58
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 97.,  96., 108., ..., 130., 117., 115.],
          [111., 104., 111., ..., 138., 128., 124.],
          [135., 132., 128., ..., 136., 130., 121.],
          ...,
          [124., 120., 126., ..., 114., 118., 119.],
          [126., 123., 125., ...,  96., 102., 102.],
          [124., 124., 126., ...,  97.,  96.,  81.]],

         [[ 83.,  84.,  98., ..., 113., 100., 100.],
          [ 97.,  91.,  99., ..., 121., 112., 111.],
          [120., 116., 113., ..., 119., 113., 109.],
          ...,
          [109., 104., 109., ...,  99., 105., 104.],
          [108., 106., 108., ...,  82.,  89.,  88.],
          [106., 107., 109., ...,  83.,  84.,  69.]],

         [[ 41.,  46.,  56., ...,  60.,  48.,  48.],
          [ 49.,  45.,  49., ...,  66.,  57.,  57.],
          [ 68.,  65.,  57., ...,  63.,  58.,  54.],
          ...,
          [ 55.,  51.,  57., ...,  57.,  61.,  55.],
          [ 54.,  52.,  53., ...,  44.,  49.,  46.],
          [ 52.,  53.,  55., ...,  42.,  45.,  36.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:58

analyse the exceptions in iter:59
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[252., 255., 194., ..., 255., 255., 253.],
          [251., 255., 211., ..., 246., 249., 251.],
          [251., 255., 218., ..., 249., 250., 252.],
          ...,
          [ 57.,  30.,  73., ...,  23.,  26., 112.],
          [ 89.,  16.,  26., ...,  21.,  32., 149.],
          [185.,  94.,  54., ...,  60., 129., 221.]],

         [[251., 255., 212., ..., 254., 253., 252.],
          [249., 255., 234., ..., 255., 255., 252.],
          [250., 255., 235., ..., 255., 254., 253.],
          ...,
          [111.,  86.,  88., ...,  60.,  81., 149.],
          [134.,  77.,  74., ...,  75.,  83., 174.],
          [208., 134.,  99., ..., 104., 159., 232.]],

         [[249., 255., 224., ..., 253., 252., 252.],
          [246., 254., 240., ..., 251., 252., 251.],
          [249., 255., 240., ..., 254., 252., 252.],
          ...,
          [159., 138., 110., ..., 100., 139., 186.],
          [177., 144., 136., ..., 140., 145., 198.],
          [229., 182., 159., ..., 159., 197., 240.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:59

analyse the exceptions in iter:60
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[201., 191., 194., ...,  83.,  39.,  36.],
          [ 57.,  62., 134., ...,  79.,  48.,  35.],
          [ 74., 123., 138., ..., 162., 132.,  56.],
          ...,
          [ 67.,  62.,  55., ...,  69.,  72.,  72.],
          [ 73.,  67.,  59., ...,  72.,  72.,  71.],
          [ 74.,  71.,  67., ...,  61.,  58.,  63.]],

         [[209., 204., 207., ...,  88.,  48.,  47.],
          [ 73.,  78., 148., ...,  91.,  59.,  45.],
          [ 99., 142., 153., ..., 175., 139.,  61.],
          ...,
          [ 80.,  72.,  62., ...,  78.,  80.,  82.],
          [ 87.,  77.,  67., ...,  81.,  81.,  81.],
          [ 89.,  84.,  79., ...,  73.,  69.,  75.]],

         [[211., 210., 216., ...,  82.,  33.,  24.],
          [ 79.,  92., 161., ...,  96.,  57.,  32.],
          [110., 165., 169., ..., 186., 145.,  56.],
          ...,
          [ 89.,  82.,  73., ...,  93.,  95.,  98.],
          [ 95.,  87.,  77., ...,  96.,  96.,  96.],
          [100.,  95.,  89., ...,  88.,  85.,  91.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:60

analyse the exceptions in iter:61
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[114., 117., 120., ..., 165., 125., 103.],
          [111., 116., 121., ..., 162., 127., 103.],
          [114., 121., 128., ..., 167., 132., 106.],
          ...,
          [165., 170., 175., ..., 185., 207., 201.],
          [175., 175., 180., ..., 187., 200., 193.],
          [173., 171., 177., ..., 205., 210., 202.]],

         [[119., 122., 126., ..., 166., 126., 103.],
          [116., 121., 126., ..., 163., 128., 103.],
          [119., 125., 132., ..., 168., 133., 108.],
          ...,
          [166., 171., 176., ..., 179., 199., 193.],
          [176., 176., 181., ..., 182., 194., 186.],
          [174., 172., 178., ..., 200., 204., 195.]],

         [[125., 126., 129., ..., 160., 121., 110.],
          [122., 127., 133., ..., 157., 123., 109.],
          [125., 136., 142., ..., 162., 126., 102.],
          ...,
          [161., 167., 171., ..., 168., 194., 185.],
          [171., 171., 176., ..., 162., 181., 178.],
          [169., 167., 173., ..., 182., 192., 187.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:61

analyse the exceptions in iter:62
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 76.,  73.,  69., ...,  75.,  72.,  70.],
          [ 76.,  71.,  66., ...,  79.,  76.,  75.],
          [ 71.,  65.,  62., ...,  80.,  77.,  76.],
          ...,
          [ 11.,   9.,   6., ...,  31.,  32.,  29.],
          [  0.,   0.,   0., ...,  12.,  12.,  13.],
          [ 87.,  83.,  81., ...,  99.,  99., 102.]],

         [[118., 118., 116., ..., 135., 134., 135.],
          [122., 119., 117., ..., 136., 135., 137.],
          [120., 117., 116., ..., 133., 132., 135.],
          ...,
          [ 36.,  32.,  32., ...,  61.,  62.,  59.],
          [ 19.,  13.,   7., ...,  38.,  37.,  38.],
          [100.,  92.,  86., ..., 116., 115., 119.]],

         [[167., 164., 162., ..., 180., 178., 179.],
          [170., 166., 163., ..., 178., 177., 179.],
          [170., 165., 164., ..., 173., 172., 174.],
          ...,
          [ 66.,  61.,  61., ...,  79.,  80.,  77.],
          [ 46.,  40.,  36., ...,  55.,  55.,  56.],
          [115., 108., 103., ..., 127., 127., 130.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:62

analyse the exceptions in iter:63
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 65.,  71.,  69., ...,  14.,  14.,  14.],
          [ 70.,  78.,  77., ...,  14.,  14.,  14.],
          [ 76.,  87.,  82., ...,  14.,  14.,  14.],
          ...,
          [ 33.,  23.,  19., ...,  54.,  53.,  49.],
          [ 59.,  65.,  67., ...,  54.,  45.,  31.],
          [ 62.,  74.,  83., ...,  52.,  38.,  21.]],

         [[114., 120., 118., ...,  14.,  14.,  14.],
          [121., 129., 129., ...,  14.,  14.,  14.],
          [129., 140., 137., ...,  14.,  14.,  14.],
          ...,
          [ 47.,  30.,  20., ...,  76.,  76.,  72.],
          [ 62.,  62.,  57., ...,  80.,  69.,  51.],
          [ 66.,  72.,  73., ...,  81.,  63.,  39.]],

         [[ 54.,  57.,  53., ...,  14.,  14.,  14.],
          [ 62.,  65.,  60., ...,  14.,  14.,  14.],
          [ 71.,  75.,  63., ...,  14.,  14.,  14.],
          ...,
          [ 42.,  24.,  13., ...,  45.,  46.,  45.],
          [ 53.,  51.,  49., ...,  42.,  37.,  30.],
          [ 56.,  57.,  66., ...,  46.,  34.,  21.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:63

analyse the exceptions in iter:64
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0.03021951, 0.03121246, 0.03218274, ..., 0.026156  ,
           0.02625056, 0.02705679],
          [0.02911702, 0.0312721 , 0.03294184, ..., 0.02328951,
           0.02394133, 0.02579979],
          [0.0302653 , 0.03250165, 0.03421171, ..., 0.01769634,
           0.01924132, 0.02330457],
          ...,
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ]],

         [[0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          ...,
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ]],

         [[0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          ...,
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:64

analyse the exceptions in iter:65
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[148., 132., 134., ..., 124., 108., 124.],
          [197., 168., 176., ..., 176., 162., 141.],
          [199., 199., 213., ..., 182., 178., 153.],
          ...,
          [179., 183., 182., ..., 164., 147., 136.],
          [162., 146., 127., ..., 118., 118., 132.],
          [150., 143., 123., ..., 124., 126., 157.]],

         [[141., 128., 135., ..., 131., 109., 127.],
          [181., 151., 166., ..., 178., 157., 133.],
          [194., 191., 209., ..., 186., 175., 141.],
          ...,
          [170., 165., 166., ..., 144., 127., 119.],
          [156., 133., 116., ..., 100.,  99., 116.],
          [148., 141., 125., ..., 119., 121., 154.]],

         [[174., 173., 187., ..., 186., 166., 171.],
          [214., 185., 199., ..., 213., 191., 162.],
          [207., 193., 209., ..., 193., 178., 156.],
          ...,
          [170., 148., 145., ..., 121., 106., 130.],
          [173., 140., 122., ..., 106., 108., 138.],
          [184., 176., 161., ..., 162., 162., 186.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:65

analyse the exceptions in iter:66
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[212., 208., 210., ..., 201., 195., 181.],
          [158., 141., 149., ..., 133., 120., 112.],
          [154., 135., 144., ..., 120., 117., 123.],
          ...,
          [124., 109., 106., ...,  99.,  94., 104.],
          [121., 103.,  97., ...,  81.,  79.,  94.],
          [188., 176., 170., ..., 182., 181., 187.]],

         [[189., 182., 183., ..., 190., 182., 166.],
          [135., 116., 122., ..., 125., 106.,  96.],
          [135., 119., 126., ..., 113., 105., 111.],
          ...,
          [146., 138., 136., ..., 127., 122., 126.],
          [149., 135., 128., ..., 115., 113., 119.],
          [189., 180., 175., ..., 182., 181., 185.]],

         [[148., 146., 146., ..., 146., 144., 135.],
          [102.,  91.,  96., ...,  90.,  80.,  75.],
          [102.,  90.,  91., ...,  83.,  87.,  87.],
          ...,
          [148., 143., 142., ..., 134., 132., 134.],
          [140., 142., 134., ..., 123., 123., 125.],
          [155., 152., 148., ..., 156., 154., 159.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:66

analyse the exceptions in iter:67
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0.61391574, 0.71742237, 0.32783687, ..., 0.6919022 ,
           0.2950187 , 0.2950187 ],
          [0.5557103 , 0.7306815 , 0.37874034, ..., 0.27415517,
           0.5492854 , 0.32783687],
          [0.38423154, 0.33198315, 0.72732866, ..., 0.6485273 ,
           0.4172344 , 0.4172344 ],
          ...,
          [0.2932423 , 0.5888091 , 0.5888091 , ..., 0.3860779 ,
           0.26971132, 0.45070726],
          [0.44429696, 0.5143717 , 0.30810153, ..., 0.28257543,
           0.30810153, 0.30810153],
          [0.3860779 , 0.2726725 , 0.2726725 , ..., 0.7258462 ,
           0.5827725 , 0.26971132]],

         [[0.6885004 , 0.41118413, 0.47901496, ..., 0.5557103 ,
           0.27301866, 0.27301866],
          [0.28193378, 0.5165706 , 0.71742237, ..., 0.2950187 ,
           0.47901496, 0.47901496],
          [0.44642282, 0.28193378, 0.32783687, ..., 0.6919022 ,
           0.48563585, 0.48563585],
          ...,
          [0.26971132, 0.32649142, 0.37694293, ..., 0.45501438,
           0.2839102 , 0.5253746 ],
          [0.4192605 , 0.66518486, 0.3138393 , ..., 0.3138393 ,
           0.27951512, 0.27951512],
          [0.30591476, 0.57869744, 0.34831718, ..., 0.70930374,
           0.5099539 , 0.30591476]],

         [[0.27233952, 0.38794887, 0.40720364, ..., 0.27233952,
           0.6403716 , 0.6403716 ],
          [0.3126636 , 0.66660595, 0.5599572 , ..., 0.7204868 ,
           0.33482003, 0.33482003],
          [0.6485273 , 0.72732866, 0.33482003, ..., 0.33482003,
           0.40720364, 0.27233952],
          ...,
          [0.71806836, 0.44429696, 0.28069308, ..., 0.35147813,
           0.7258462 , 0.5143717 ],
          [0.7049844 , 0.67215854, 0.45070726, ..., 0.5143717 ,
           0.7076222 , 0.7076222 ],
          [0.5578298 , 0.6873404 , 0.33338922, ..., 0.28257543,
           0.45070726, 0.7258462 ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:67

analyse the exceptions in iter:68
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[110., 103., 104., ..., 102.,  94.,  99.],
          [125., 119., 120., ..., 108., 104., 110.],
          [113.,  73.,  80., ...,  47.,  78., 103.],
          ...,
          [102., 125., 190., ...,  86.,  69.,  92.],
          [120., 141., 194., ...,  81.,  85., 109.],
          [159., 166., 163., ...,  98., 110., 100.]],

         [[125., 128., 130., ..., 121., 121., 120.],
          [151., 157., 160., ..., 137., 144., 145.],
          [136., 102., 107., ...,  72., 117., 141.],
          ...,
          [ 77.,  88., 159., ...,  72.,  57.,  70.],
          [ 92., 100., 163., ...,  68.,  77., 101.],
          [133., 127., 132., ...,  85., 105., 102.]],

         [[141., 147., 145., ..., 130., 132., 129.],
          [167., 181., 185., ..., 145., 155., 156.],
          [148., 122., 127., ...,  76., 124., 151.],
          ...,
          [ 37.,  49., 132., ...,  48.,  37.,  40.],
          [ 49.,  52., 124., ...,  34.,  39.,  59.],
          [ 96.,  79.,  90., ...,  57.,  64.,  67.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:68

analyse the exceptions in iter:69
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:69

analyse the exceptions in iter:70
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[154., 159., 165., ..., 129., 125., 122.],
          [156., 160., 163., ..., 118., 120., 118.],
          [146., 130., 128., ..., 118., 112., 107.],
          ...,
          [125., 126., 124., ..., 123., 126., 131.],
          [125., 127., 125., ..., 120., 128., 129.],
          [119., 121., 135., ..., 132., 136., 146.]],

         [[179., 183., 189., ..., 161., 158., 155.],
          [177., 180., 184., ..., 150., 152., 150.],
          [169., 152., 151., ..., 150., 144., 139.],
          ...,
          [146., 147., 146., ..., 141., 140., 144.],
          [145., 148., 146., ..., 137., 142., 141.],
          [136., 138., 153., ..., 148., 149., 157.]],

         [[152., 157., 162., ..., 137., 133., 131.],
          [152., 155., 159., ..., 126., 128., 126.],
          [143., 126., 125., ..., 126., 120., 115.],
          ...,
          [129., 127., 124., ..., 117., 118., 122.],
          [127., 128., 124., ..., 119., 125., 125.],
          [120., 119., 132., ..., 135., 137., 146.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:70

analyse the exceptions in iter:71
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[169., 104.,  81., ..., 163., 210., 250.],
          [103.,   5.,   0., ...,  27.,  68., 185.],
          [163.,  23.,   1., ...,  69.,  90., 159.],
          ...,
          [235., 165., 104., ...,  55.,  87., 162.],
          [255., 231., 147., ...,  35.,  60., 189.],
          [255., 252., 240., ...,  87., 120., 215.]],

         [[170., 109.,  88., ..., 169., 214., 250.],
          [104.,   8.,   0., ...,  29.,  69., 185.],
          [163.,  25.,   3., ...,  67.,  88., 158.],
          ...,
          [235., 167., 108., ...,  60.,  91., 165.],
          [255., 231., 149., ...,  39.,  63., 191.],
          [255., 252., 240., ...,  89., 122., 216.]],

         [[164.,  98.,  82., ..., 159., 201., 242.],
          [ 93.,   0.,   0., ...,  21.,  56., 174.],
          [150.,  18.,   1., ...,  59.,  76., 147.],
          ...,
          [232., 153.,  83., ...,  28.,  63., 149.],
          [255., 226., 136., ...,  21.,  44., 179.],
          [255., 251., 237., ...,  82., 111., 207.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:71

analyse the exceptions in iter:72
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[229., 227., 208., ..., 230., 230., 213.],
          [221., 214., 145., ..., 236., 231., 201.],
          [213., 173.,  64., ..., 242., 222., 187.],
          ...,
          [224., 218., 229., ..., 190., 159., 176.],
          [224., 207., 226., ..., 162., 132., 170.],
          [233., 217., 221., ..., 153., 141., 167.]],

         [[232., 232., 214., ..., 231., 232., 218.],
          [226., 221., 150., ..., 238., 233., 207.],
          [223., 181.,  67., ..., 243., 225., 195.],
          ...,
          [224., 218., 229., ..., 193., 163., 183.],
          [224., 207., 226., ..., 165., 136., 178.],
          [233., 217., 221., ..., 156., 145., 175.]],

         [[235., 232., 219., ..., 231., 236., 223.],
          [234., 225., 157., ..., 237., 237., 214.],
          [232., 187.,  69., ..., 243., 229., 203.],
          ...,
          [222., 217., 229., ..., 199., 173., 194.],
          [223., 207., 226., ..., 173., 147., 189.],
          [233., 217., 221., ..., 164., 154., 184.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:72

analyse the exceptions in iter:73
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 64.,  72.,  73., ...,  73.,  52.,  51.],
          [ 77.,  78.,  64., ...,  56.,  42.,  43.],
          [ 90.,  87.,  69., ...,  60.,  47.,  45.],
          ...,
          [154., 159., 159., ..., 129., 131., 126.],
          [144., 143., 138., ..., 160., 159., 153.],
          [ 93.,  94.,  92., ..., 116., 115., 110.]],

         [[ 45.,  52.,  60., ...,  70.,  53.,  45.],
          [ 55.,  58.,  50., ...,  52.,  44.,  40.],
          [ 71.,  74.,  61., ...,  57.,  50.,  44.],
          ...,
          [137., 143., 142., ..., 128., 130., 126.],
          [141., 141., 136., ..., 157., 154., 149.],
          [ 93.,  94.,  90., ..., 107., 106., 102.]],

         [[ 13.,  23.,  41., ...,  30.,  20.,  31.],
          [ 28.,  36.,  38., ...,  24.,  18.,  25.],
          [ 35.,  46.,  40., ...,  40.,  30.,  30.],
          ...,
          [109., 115., 114., ...,  77.,  84.,  76.],
          [131., 131., 127., ..., 141., 144., 136.],
          [ 77.,  75.,  74., ...,  90.,  90.,  81.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:73

analyse the exceptions in iter:74
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[195., 165., 150., ..., 135., 120., 120.],
          [174., 117., 145., ..., 134., 103., 117.],
          [125.,  97., 131., ..., 129., 100., 104.],
          ...,
          [122., 125., 118., ...,  91.,  83.,  73.],
          [132., 130., 136., ...,  85.,  86.,  91.],
          [143., 137., 143., ...,  85., 107., 145.]],

         [[208., 177., 161., ..., 189., 185., 184.],
          [190., 134., 159., ..., 182., 162., 188.],
          [143., 120., 150., ..., 167., 146., 165.],
          ...,
          [146., 149., 142., ..., 118., 111.,  96.],
          [157., 155., 160., ..., 111., 113., 113.],
          [172., 165., 169., ..., 107., 127., 160.]],

         [[166., 138., 140., ..., 143., 119., 118.],
          [160., 115., 154., ..., 125.,  96., 129.],
          [125., 115., 150., ..., 120.,  97., 123.],
          ...,
          [146., 149., 142., ..., 122., 114.,  93.],
          [158., 155., 161., ..., 113., 115., 109.],
          [179., 167., 174., ..., 107., 125., 154.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:74

analyse the exceptions in iter:75
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 65.,  76., 188., ..., 146., 162., 150.],
          [ 37.,  68., 187., ..., 148., 137., 161.],
          [ 31.,  67., 177., ..., 139., 143., 178.],
          ...,
          [114., 114., 113., ..., 106., 107., 109.],
          [106., 106., 106., ..., 107., 107., 108.],
          [ 99., 105., 110., ..., 106., 107., 108.]],

         [[ 64.,  78., 187., ..., 117., 135., 130.],
          [ 41.,  70., 185., ..., 117., 115., 155.],
          [ 37.,  73., 175., ..., 110., 121., 143.],
          ...,
          [114., 114., 114., ..., 106., 107., 109.],
          [106., 106., 106., ..., 107., 107., 108.],
          [ 99., 104., 110., ..., 106., 107., 108.]],

         [[ 58.,  73., 185., ..., 110., 130., 122.],
          [ 42.,  72., 182., ..., 106., 112., 149.],
          [ 42.,  67., 169., ...,  97., 102., 134.],
          ...,
          [115., 114., 112., ..., 106., 107., 109.],
          [110., 109., 108., ..., 107., 107., 109.],
          [102., 107., 114., ..., 107., 108., 110.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:75

analyse the exceptions in iter:76
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[118., 110., 118., ..., 114., 114., 113.],
          [ 84.,  88., 120., ..., 113., 114., 115.],
          [ 85.,  99., 131., ..., 120., 120., 119.],
          ...,
          [155., 152., 151., ..., 105.,  82., 127.],
          [154., 155., 156., ..., 150., 142., 139.],
          [153., 152., 154., ..., 145., 148., 146.]],

         [[157., 162., 172., ..., 161., 161., 161.],
          [120., 136., 173., ..., 165., 164., 163.],
          [117., 141., 183., ..., 168., 168., 167.],
          ...,
          [158., 156., 155., ..., 106.,  84., 129.],
          [155., 157., 158., ..., 152., 145., 142.],
          [155., 155., 156., ..., 147., 150., 149.]],

         [[187., 196., 219., ..., 207., 207., 207.],
          [147., 168., 218., ..., 217., 216., 212.],
          [142., 171., 225., ..., 216., 215., 213.],
          ...,
          [142., 136., 133., ...,  87.,  63., 105.],
          [138., 137., 136., ..., 130., 120., 113.],
          [143., 139., 139., ..., 128., 127., 119.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:76

analyse the exceptions in iter:77
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 44.,  47.,  51., ...,  75.,  72.,  74.],
          [ 52.,  47.,  51., ...,  73.,  74.,  76.],
          [ 65.,  57.,  54., ...,  73.,  73.,  75.],
          ...,
          [ 56.,  49.,  49., ...,  53.,  52.,  53.],
          [ 41.,  56.,  52., ...,  52.,  52.,  49.],
          [ 24.,  49.,  40., ...,  54.,  55.,  46.]],

         [[ 73.,  77.,  81., ..., 107., 104., 106.],
          [ 85.,  79.,  82., ..., 105., 106., 108.],
          [100.,  91.,  87., ..., 105., 105., 108.],
          ...,
          [ 82.,  75.,  74., ...,  77.,  77.,  77.],
          [ 64.,  79.,  75., ...,  74.,  74.,  72.],
          [ 44.,  69.,  60., ...,  74.,  74.,  66.]],

         [[ 49.,  53.,  57., ...,  83.,  80.,  82.],
          [ 55.,  54.,  60., ...,  81.,  82.,  84.],
          [ 67.,  65.,  66., ...,  81.,  81.,  82.],
          ...,
          [ 48.,  41.,  41., ...,  49.,  48.,  49.],
          [ 35.,  50.,  46., ...,  49.,  49.,  46.],
          [ 19.,  44.,  36., ...,  51.,  52.,  43.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:77

analyse the exceptions in iter:78
tensorflow exception:
{'id': 3, 'name': 'maxpool2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 64, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         ...,

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
Default MaxPoolingOp only supports NHWC on device type CPU [Op:MaxPool]

generate models:78

analyse the exceptions in iter:79
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[248., 248., 250., ..., 253., 239., 169.],
          [246., 248., 249., ..., 251., 249., 102.],
          [228., 237., 213., ..., 252., 247., 103.],
          ...,
          [251., 248., 243., ..., 254., 252., 101.],
          [249., 250., 250., ..., 255., 251., 101.],
          [ 90.,  65.,  67., ...,  64.,  63.,  25.]],

         [[248., 248., 250., ..., 253., 239., 169.],
          [246., 248., 249., ..., 251., 249., 102.],
          [228., 237., 212., ..., 251., 247., 103.],
          ...,
          [251., 248., 243., ..., 254., 252., 101.],
          [249., 250., 250., ..., 255., 251., 101.],
          [ 90.,  65.,  67., ...,  64.,  63.,  25.]],

         [[247., 247., 248., ..., 253., 239., 169.],
          [245., 248., 250., ..., 251., 249., 102.],
          [227., 238., 216., ..., 252., 247., 103.],
          ...,
          [251., 248., 243., ..., 254., 252., 101.],
          [249., 250., 250., ..., 255., 251., 101.],
          [ 90.,  65.,  67., ...,  64.,  63.,  25.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:79

analyse the exceptions in iter:80
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:80

analyse the exceptions in iter:81
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:81

analyse the exceptions in iter:82
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0.0300066 , 0.02782014, 0.02591108, ..., 0.02931315,
           0.02986793, 0.02884812],
          [0.03357736, 0.03206786, 0.03111822, ..., 0.03090563,
           0.03235135, 0.03179856],
          [0.0319847 , 0.02892764, 0.0252051 , ..., 0.03157916,
           0.0319639 , 0.03277497],
          ...,
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ]],

         [[0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          ...,
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ]],

         [[0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          ...,
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ],
          [0.03125   , 0.03125   , 0.03125   , ..., 0.03125   ,
           0.03125   , 0.03125   ]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:82

analyse the exceptions in iter:83
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          ...,
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

         [[0.0000000e+00, 4.3830544e-37, 1.6124356e-37, ...,
           1.7682503e-34, 1.4328281e-30, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           2.1750513e-38, 6.4837364e-35, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 7.2101167e-36, 0.0000000e+00],
          ...,
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

         [[2.6430386e-17, 3.1785297e-11, 1.1693156e-11, ...,
           3.1785297e-11, 5.1732090e-06, 7.3726709e-27],
          [1.5221301e-19, 6.7341064e-14, 6.7341064e-14, ...,
           1.8305202e-13, 2.2013913e-07, 4.2459328e-29],
          [3.0088064e-22, 4.8969764e-17, 1.3311361e-16, ...,
           5.3701865e-14, 1.6008302e-10, 8.3929697e-32],
          ...,
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
          [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
           0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:83

analyse the exceptions in iter:84
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[103.,  89.,  78., ..., 112., 124., 144.],
          [ 95.,  76.,  52., ..., 126., 127., 147.],
          [ 78.,  70.,  41., ..., 160., 146., 158.],
          ...,
          [161., 154., 155., ..., 121., 120., 119.],
          [124., 122., 128., ..., 125., 139., 149.],
          [142., 144., 143., ..., 158., 165., 172.]],

         [[ 93.,  84.,  79., ..., 114., 120., 126.],
          [ 81.,  67.,  50., ..., 119., 114., 121.],
          [ 69.,  64.,  37., ..., 158., 142., 140.],
          ...,
          [176., 173., 173., ..., 141., 136., 126.],
          [143., 147., 151., ..., 130., 143., 149.],
          [138., 144., 142., ..., 160., 168., 175.]],

         [[ 68.,  59.,  59., ...,  79.,  91., 112.],
          [ 59.,  52.,  44., ...,  81.,  82., 109.],
          [ 58.,  62.,  44., ..., 103.,  91., 109.],
          ...,
          [105.,  96.,  97., ...,  86.,  85.,  82.],
          [ 89.,  87.,  98., ...,  79.,  91.,  98.],
          [ 90.,  92.,  93., ..., 105., 111., 113.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:84

analyse the exceptions in iter:85
tensorflow exception:
{'id': 18, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 128, 32, 32), dtype=float32, numpy=
array([[[[[ 1.,  1.,  1., ..., 12.,  6.,  4.],
          [ 1.,  1.,  1., ...,  9.,  2.,  1.],
          [ 1.,  1.,  1., ...,  5.,  1.,  1.],
          ...,
          [ 1.,  0., 51., ..., 48., 48., 45.],
          [ 1.,  0., 63., ..., 49., 48., 47.],
          [ 2.,  0., 43., ..., 47., 46., 48.]],

         [[ 1.,  1.,  1., ..., 15.,  7.,  4.],
          [ 1.,  1.,  1., ..., 12.,  3.,  1.],
          [ 1.,  1.,  1., ...,  8.,  2.,  1.],
          ...,
          [ 4.,  0., 34., ..., 42., 40., 36.],
          [ 2.,  0., 41., ..., 43., 40., 38.],
          [ 2.,  0., 25., ..., 42., 38., 39.]],

         [[ 1.,  1.,  1., ..., 20.,  8.,  4.],
          [ 1.,  1.,  1., ..., 17.,  5.,  1.],
          [ 1.,  1.,  1., ..., 12.,  3.,  1.],
          ...,
          [ 0.,  0., 34., ..., 40., 41., 37.],
          [ 1.,  0., 43., ..., 41., 40., 39.],
          [ 3.,  0., 27., ..., 39., 38., 40.]],

         ...,

         [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

         [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

         [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.],
          [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:85

analyse the exceptions in iter:86
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:86

analyse the exceptions in iter:87
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 39.,  40.,  41., ...,  25.,  25.,  31.],
          [ 37.,  42.,  44., ...,  28.,  30.,  29.],
          [ 34.,  38.,  44., ...,  32.,  33.,  36.],
          ...,
          [169., 164., 171., ..., 172., 162., 173.],
          [166., 157., 169., ..., 178., 176., 178.],
          [167., 171., 175., ..., 186., 186., 182.]],

         [[ 50.,  55.,  59., ...,  29.,  29.,  37.],
          [ 48.,  56.,  63., ...,  36.,  38.,  39.],
          [ 44.,  52.,  63., ...,  46.,  47.,  51.],
          ...,
          [190., 185., 194., ..., 187., 178., 191.],
          [187., 179., 191., ..., 195., 193., 196.],
          [188., 193., 197., ..., 203., 203., 199.]],

         [[ 25.,  28.,  31., ...,  17.,  18.,  19.],
          [ 25.,  30.,  33., ...,  23.,  26.,  21.],
          [ 26.,  27.,  31., ...,  27.,  29.,  28.],
          ...,
          [ 86.,  78.,  82., ...,  92.,  78.,  86.],
          [ 81.,  70.,  77., ...,  94.,  89.,  90.],
          [ 82.,  84.,  83., ...,  98.,  98.,  95.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:87

analyse the exceptions in iter:88
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]],

         [[0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          ...,
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.],
          [0., 0., 0., ..., 0., 0., 0.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:88

analyse the exceptions in iter:89
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[163., 161., 167., ..., 148., 132., 127.],
          [197., 198., 197., ..., 184., 171., 178.],
          [206., 201., 206., ..., 208., 209., 213.],
          ...,
          [100.,  97.,  94., ...,  97.,  95.,  95.],
          [101.,  94.,  94., ..., 100.,  98.,  98.],
          [101.,  94.,  94., ...,  99.,  95.,  97.]],

         [[161., 160., 166., ..., 147., 133., 130.],
          [191., 193., 193., ..., 185., 173., 180.],
          [201., 194., 196., ..., 207., 208., 212.],
          ...,
          [100.,  98.,  95., ...,  95.,  94.,  94.],
          [100.,  93.,  93., ..., 100.,  98.,  97.],
          [100.,  93.,  93., ...,  98.,  94.,  95.]],

         [[130., 107., 100., ..., 117.,  91.,  77.],
          [145., 134., 125., ..., 139., 121., 124.],
          [139., 137., 142., ..., 144., 144., 147.],
          ...,
          [ 99.,  95.,  91., ...,  95.,  88.,  88.],
          [107.,  98.,  98., ...,  90.,  86.,  89.],
          [106.,  99.,  98., ...,  96.,  94.,  97.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:89

analyse the exceptions in iter:90
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[216., 201., 210., ..., 172., 196., 202.],
          [202., 222., 211., ..., 164., 173., 176.],
          [190., 186., 222., ..., 143., 145., 133.],
          ...,
          [138., 150., 152., ...,  10.,  13.,  32.],
          [140., 134., 171., ...,  22.,  28.,  28.],
          [123., 132., 159., ...,  33.,  42.,  30.]],

         [[195., 178., 184., ..., 149., 177., 189.],
          [179., 197., 184., ..., 139., 152., 160.],
          [165., 159., 193., ..., 115., 122., 115.],
          ...,
          [119., 131., 132., ...,   5.,   8.,  25.],
          [116., 113., 153., ...,  18.,  24.,  24.],
          [ 99., 111., 141., ...,  29.,  38.,  26.]],

         [[180., 160., 164., ..., 130., 153., 166.],
          [164., 179., 165., ..., 119., 128., 137.],
          [150., 142., 174., ...,  94.,  96.,  90.],
          ...,
          [ 95., 110., 114., ...,   3.,   5.,  21.],
          [ 95.,  92., 131., ...,  11.,  16.,  16.],
          [ 78.,  90., 119., ...,  20.,  29.,  17.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:90

analyse the exceptions in iter:91
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 60.,  67.,  70., ...,  53.,  44.,  36.],
          [ 57.,  82., 124., ...,  48.,  42.,  39.],
          [ 53.,  63., 125., ...,  46.,  40.,  35.],
          ...,
          [ 21.,  27.,  30., ...,  83.,  71.,  64.],
          [ 26.,  32.,  35., ...,  93.,  77.,  56.],
          [ 27.,  33.,  35., ...,  70.,  51.,  30.]],

         [[ 90.,  88.,  89., ...,  93.,  84.,  81.],
          [ 83.,  91., 121., ...,  84.,  78.,  79.],
          [ 79.,  69., 107., ...,  82.,  76.,  74.],
          ...,
          [ 40.,  42.,  46., ...,  36.,  38.,  60.],
          [ 47.,  46.,  49., ...,  52.,  43.,  48.],
          [ 45.,  43.,  45., ...,  57.,  50.,  48.]],

         [[134., 133., 131., ..., 148., 142., 139.],
          [123., 122., 137., ..., 146., 143., 144.],
          [125., 101., 119., ..., 138., 135., 134.],
          ...,
          [ 89.,  94.,  94., ...,  28.,  42.,  93.],
          [ 93.,  94.,  92., ...,  47.,  44.,  76.],
          [ 91.,  91.,  87., ...,  72.,  76.,  95.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:91

analyse the exceptions in iter:93
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[138., 135., 135., ..., 143., 143., 143.],
          [126., 115., 109., ..., 145., 145., 145.],
          [ 87.,  78.,  75., ..., 147., 148., 147.],
          ...,
          [ 70.,  70.,  72., ...,  65.,  65.,  66.],
          [ 71.,  73.,  74., ...,  68.,  70.,  69.],
          [ 93.,  91.,  92., ...,  87.,  87.,  87.]],

         [[141., 137., 136., ..., 147., 147., 147.],
          [129., 121., 116., ..., 149., 149., 149.],
          [ 95.,  91.,  91., ..., 148., 148., 149.],
          ...,
          [ 70.,  69.,  70., ...,  65.,  65.,  65.],
          [ 72.,  71.,  71., ...,  69.,  72.,  70.],
          [ 81.,  79.,  79., ...,  83.,  83.,  84.]],

         [[148., 142., 141., ..., 146., 146., 146.],
          [136., 128., 123., ..., 148., 148., 148.],
          [106., 101.,  99., ..., 147., 147., 147.],
          ...,
          [ 15.,  17.,  19., ...,  11.,  13.,  13.],
          [ 37.,  37.,  38., ...,  35.,  37.,  33.],
          [ 65.,  63.,  63., ...,  64.,  64.,  61.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:92

analyse the exceptions in iter:95
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[246., 252., 249., ..., 252., 250., 254.],
          [244., 253., 253., ..., 250., 249., 253.],
          [237., 251., 255., ..., 251., 251., 255.],
          ...,
          [ 50.,  46.,  93., ..., 246., 244., 251.],
          [ 61.,  58., 103., ..., 241., 245., 247.],
          [ 80.,  81., 120., ..., 244., 245., 243.]],

         [[254., 250., 252., ..., 250., 251., 254.],
          [254., 249., 248., ..., 251., 250., 254.],
          [255., 251., 249., ..., 252., 253., 255.],
          ...,
          [246., 239., 247., ..., 229., 215., 214.],
          [247., 239., 248., ..., 219., 222., 226.],
          [248., 243., 249., ..., 218., 226., 231.]],

         [[119., 170., 189., ...,  71.,  73.,  95.],
          [121., 173., 197., ...,  57.,  64.,  88.],
          [118., 169., 196., ...,  52.,  67.,  93.],
          ...,
          [117., 108., 100., ..., 146., 137., 137.],
          [122., 111., 113., ..., 140., 143., 146.],
          [124., 115., 124., ..., 143., 149., 150.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:93

analyse the exceptions in iter:96
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[106., 107., 108., ..., 125., 122., 100.],
          [107., 108., 108., ..., 134., 118.,  74.],
          [106., 107., 107., ..., 130., 106.,  72.],
          ...,
          [ 97.,  93.,  82., ...,  94.,  95.,  99.],
          [ 99.,  82.,  73., ...,  91.,  89.,  93.],
          [ 95.,  89.,  76., ...,  91.,  88.,  82.]],

         [[109., 110., 113., ..., 160., 153., 124.],
          [110., 111., 113., ..., 165., 144.,  92.],
          [108., 109., 112., ..., 154., 125.,  85.],
          ...,
          [ 86.,  82.,  74., ..., 101., 102., 106.],
          [ 87.,  74.,  66., ...,  98.,  97., 103.],
          [ 84.,  81.,  69., ...,  98.,  96.,  95.]],

         [[116., 117., 119., ..., 201., 191., 146.],
          [117., 118., 119., ..., 203., 171.,  92.],
          [115., 116., 118., ..., 181., 141.,  83.],
          ...,
          [ 72.,  65.,  61., ...,  59.,  59.,  62.],
          [ 72.,  61.,  55., ...,  54.,  55.,  58.],
          [ 71.,  68.,  56., ...,  54.,  53.,  52.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:94

analyse the exceptions in iter:97
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 33.,  29.,  32., ..., 157., 162., 160.],
          [ 25.,  24.,  23., ..., 174., 167., 165.],
          [ 55.,  47.,  53., ..., 129., 110., 123.],
          ...,
          [106., 103.,  85., ...,  78.,  54.,  44.],
          [ 97.,  92.,  88., ...,  96.,  81.,  71.],
          [106., 128., 142., ..., 100.,  81.,  71.]],

         [[ 44.,  44.,  45., ..., 197., 199., 194.],
          [ 40.,  40.,  36., ..., 209., 199., 198.],
          [ 56.,  56.,  61., ..., 162., 137., 153.],
          ...,
          [ 97.,  91., 100., ...,  91.,  64.,  56.],
          [ 91.,  97., 108., ..., 107.,  94.,  88.],
          [119., 141., 158., ..., 108.,  94.,  90.]],

         [[ 27.,  31.,  34., ..., 221., 216., 213.],
          [ 24.,  27.,  29., ..., 227., 217., 220.],
          [ 47.,  46.,  52., ..., 165., 133., 154.],
          ...,
          [ 60.,  58.,  53., ...,  52.,  36.,  31.],
          [ 59.,  57.,  61., ...,  59.,  47.,  41.],
          [ 91., 115., 137., ...,  63.,  47.,  40.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:95

analyse the exceptions in iter:98
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 90.,  94.,  87., ...,  46.,  53.,  57.],
          [ 96., 101.,  95., ...,  60.,  72.,  71.],
          [ 85., 113., 115., ...,  90.,  96.,  91.],
          ...,
          [102.,  61.,  69., ..., 157., 152., 169.],
          [101.,  69.,  64., ..., 131., 123., 115.],
          [ 91.,  78.,  87., ..., 135., 120., 102.]],

         [[ 77.,  81.,  81., ...,  44.,  45.,  46.],
          [ 92.,  84.,  80., ...,  51.,  60.,  56.],
          [ 87., 102., 101., ...,  84.,  87.,  79.],
          ...,
          [105.,  69.,  74., ..., 142., 137., 152.],
          [ 96.,  66.,  68., ..., 125., 117., 109.],
          [ 86.,  72.,  86., ..., 126., 116.,  96.]],

         [[ 59.,  64.,  65., ...,  35.,  38.,  38.],
          [ 68.,  63.,  66., ...,  44.,  50.,  45.],
          [ 66.,  75.,  76., ...,  57.,  60.,  55.],
          ...,
          [ 88.,  47.,  53., ...,  95.,  94.,  95.],
          [ 69.,  52.,  53., ..., 100.,  91.,  79.],
          [ 61.,  58.,  68., ...,  85.,  81.,  80.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:96

analyse the exceptions in iter:99
tensorflow exception:
{'id': 1, 'name': 'conv2d', 'framework': 'tensorflow', 'input_datas': <tf.Tensor: shape=(1, 1, 3, 32, 32), dtype=float32, numpy=
array([[[[[ 62.,  50.,  46., ..., 167., 183., 137.],
          [ 63.,  55.,  52., ..., 163., 171., 145.],
          [ 58.,  64.,  56., ..., 153., 150., 123.],
          ...,
          [172., 143., 130., ...,  94., 141., 139.],
          [183., 150.,  80., ...,  81., 135., 143.],
          [209., 182., 139., ...,  59., 130., 169.]],

         [[ 64.,  50.,  44., ..., 172., 184., 136.],
          [ 65.,  53.,  50., ..., 169., 174., 146.],
          [ 62.,  66.,  60., ..., 155., 154., 128.],
          ...,
          [135., 110.,  56., ...,  75., 108., 105.],
          [146., 118.,  64., ...,  72., 118., 125.],
          [174., 151., 109., ...,  54., 119., 156.]],

         [[ 44.,  26.,  19., ...,  69.,  76.,  72.],
          [ 37.,  26.,  27., ...,  61.,  75.,  77.],
          [ 36.,  37.,  37., ...,  62.,  64.,  57.],
          ...,
          [ 99.,  84.,  42., ...,  56.,  86.,  81.],
          [117.,  95.,  44., ...,  60.,  98., 110.],
          [144., 123.,  83., ...,  47., 111., 160.]]]]], dtype=float32)>}
The Conv2D op currently only supports the NHWC tensor format on the CPU. The op was given the format: NCHW [Op:Conv2D]

generate models:97

final statics:
total operators:28
tensorflow --> nums:96,distinct_bugs:2
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:94
maxpool2d:2
mindspore --> 
torch --> 

generate models:97
